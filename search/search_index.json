{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#sfdx-hardis","title":"sfdx-hardis","text":"<p>Presented at Dreamforce 23 and Dreamforce 24!</p> <p> </p> <p>Toolbox for Salesforce DX, by Cloudity &amp; friends, natively compliant with most platforms and tools.</p> <p></p> <p>It will allow you to:</p> <ul> <li>Do with simple commands what could be done manually in minutes/hours</li> <li>Define a ready to use CI/CD Pipeline for your Salesforce project</li> <li>Backup Metadatas and monitor any Salesforce org</li> <li>Generate your project documentation, including AI-generated description and Flow Visual History</li> </ul> <p>Please see the full list of commands in Online documentation</p> <p>Watch sfdx-hardis 2025 new features :)</p> <p></p> <p>sfdx-hardis commands are also available with UI in SFDX Hardis Visual Studio Code Extension</p> <p></p> <p>See Dreamforce presentation</p> <p></p>"},{"location":"#installation","title":"Installation","text":""},{"location":"#with-ide","title":"With IDE","text":"<p>You can install Visual Studio Code extension VsCode SFDX Hardis</p> <p>Once installed, click on  in VsCode left bar, and follow the additional installation instructions</p> <p></p>"},{"location":"#as-sfdx-plugin","title":"As SFDX Plugin","text":""},{"location":"#pre-requisites","title":"Pre-requisites","text":"<ul> <li>Install Node.js (recommended version)</li> <li>Install Salesforce DX by running <code>npm install @salesforce/cli --global</code> command line</li> </ul>"},{"location":"#plugin-installation","title":"Plugin installation","text":"<pre><code>sf plugins install sfdx-hardis\n</code></pre> <p>For advanced use, please also install dependencies</p> <pre><code>sf plugins install @salesforce/plugin-packaging\nsf plugins install sfdmu\nsf plugins install sfdx-git-delta\nsf plugins install texei-sfdx-plugin\n</code></pre> <p>If you are using CI/CD scripts, use <code>echo y | sf plugins install ...</code> to bypass prompt.</p>"},{"location":"#docker","title":"Docker","text":"<p>You can use sfdx-hardis docker images to run in CI</p> <ul> <li> <p>Docker Hub</p> <ul> <li>hardisgroupcom/sfdx-hardis:latest (with latest @salesforce/cli version)</li> <li>hardisgroupcom/sfdx-hardis:latest-sfdx-recommended (with recommended @salesforce/cli version, in case the latest version of @salesforce/cli is buggy)</li> </ul> </li> </ul> <ul> <li>GitHub Packages (ghcr.io)<ul> <li>ghcr.io/hardisgroupcom/sfdx-hardis:latest (with latest @salesforce/cli version)</li> <li>ghcr.io/hardisgroupcom/sfdx-hardis:latest-sfdx-recommended (with recommended @salesforce/cli version, in case the latest version of @salesforce/cli is buggy)</li> </ul> </li> </ul> <p>See Dockerfile</p>"},{"location":"#usage","title":"Usage","text":"<pre><code>sf hardis:&lt;COMMAND&gt; &lt;OPTIONS&gt;\n</code></pre>"},{"location":"#articles","title":"Articles","text":"<p>Here are some articles about sfdx-hardis</p> <ul> <li>English</li> </ul> <p> </p> <ul> <li>French<ul> <li>Versions d'API Salesforce d\u00e9commissionn\u00e9es: Que faire ?</li> <li>Exporter en masse les fichiers d\u2019une org Salesforce</li> <li>Suspendre l\u2019acc\u00e8s aux utilisateurs lors d\u2019une mise en production Salesforce</li> </ul> </li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>Everyone is welcome to contribute to sfdx-hardis (even juniors: we'll assist you !)</p> <ul> <li>Install Node.js (recommended version)</li> <li>Install typescript by running <code>npm install typescript --global</code></li> <li>Install yarn by running <code>npm install yarn --global</code></li> <li>Install Salesforce DX by running <code>npm install @salesforce/cli --global</code> command line</li> <li>Fork this repo and clone it (or just clone if you are an internal contributor)</li> <li>At the root of the repository:<ul> <li>Run <code>yarn</code> to install dependencies</li> <li>Run <code>sf plugins link</code> to link the local sfdx-hardis to SFDX CLI</li> <li>Run <code>tsc --watch</code> to transpile typescript into js everytime you update a TS file</li> </ul> </li> <li>Debug commands using <code>NODE_OPTIONS=--inspect-brk sf hardis:somecommand -someparameter somevalue</code></li> </ul>"},{"location":"#dependencies","title":"Dependencies","text":"<p>sfdx-hardis partially relies on the following SFDX Open-Source packages</p> <ul> <li>Salesforce Data Move Utility</li> <li>SFDX Git Delta</li> <li>Texei Sfdx Plugin</li> </ul>"},{"location":"#contributors","title":"Contributors","text":""},{"location":"#commands","title":"Commands","text":""},{"location":"#hardisauth","title":"hardis:auth","text":"Command Title hardis:auth:login"},{"location":"#hardiscache","title":"hardis:cache","text":"Command Title hardis:cache:clear"},{"location":"#hardisconfig","title":"hardis:config","text":"Command Title hardis:config:get"},{"location":"#hardisdeploy","title":"hardis:deploy","text":"Command Title hardis:deploy:quick hardis:deploy:start hardis:deploy:validate"},{"location":"#hardisdoc","title":"hardis:doc","text":"Command Title hardis:doc:extract:permsetgroups hardis:doc:fieldusage hardis:doc:flow2markdown hardis:doc:mkdocs-to-cf hardis:doc:mkdocs-to-salesforce hardis:doc:packagexml2markdown hardis:doc:plugin:generate hardis:doc:project2markdown"},{"location":"#hardisgit","title":"hardis:git","text":"Command Title hardis:git:pull-requests:extract"},{"location":"#hardislint","title":"hardis:lint","text":"Command Title hardis:lint:access hardis:lint:metadatastatus hardis:lint:missingattributes hardis:lint:unusedmetadatas"},{"location":"#hardismdapi","title":"hardis:mdapi","text":"Command Title hardis:mdapi:deploy"},{"location":"#hardismisc","title":"hardis:misc","text":"Command Title hardis:misc:purge-references hardis:misc:toml2csv"},{"location":"#hardisorg","title":"hardis:org","text":"Command Title hardis:org:community:update hardis:org:configure:data hardis:org:configure:files hardis:org:configure:monitoring hardis:org:connect hardis:org:create hardis:org:data:delete hardis:org:data:export hardis:org:data:import hardis:org:diagnose:audittrail hardis:org:diagnose:instanceupgrade hardis:org:diagnose:legacyapi hardis:org:diagnose:licenses hardis:org:diagnose:releaseupdates hardis:org:diagnose:unused-apex-classes hardis:org:diagnose:unused-connected-apps hardis:org:diagnose:unusedlicenses hardis:org:diagnose:unusedusers hardis:org:files:export hardis:org:files:import hardis:org:fix:listviewmine hardis:org:generate:packagexmlfull hardis:org:monitor:all hardis:org:monitor:backup hardis:org:monitor:limits hardis:org:multi-org-query hardis:org:purge:apexlog hardis:org:purge:flow hardis:org:retrieve:packageconfig hardis:org:retrieve:sources:analytics hardis:org:retrieve:sources:dx hardis:org:retrieve:sources:dx2 hardis:org:retrieve:sources:metadata hardis:org:retrieve:sources:retrofit hardis:org:select hardis:org:test:apex hardis:org:user:activateinvalid hardis:org:user:freeze hardis:org:user:unfreeze"},{"location":"#hardispackage","title":"hardis:package","text":"Command Title hardiscreate hardisinstall hardismergexml hardisversion:create hardisversion:list hardisversion:promote"},{"location":"#hardispackagexml","title":"hardis:packagexml","text":"Command Title hardis:packagexml:append hardis:packagexml:remove"},{"location":"#hardisproject","title":"hardis:project","text":"Command Title hardis:project:audit:apiversion hardis:project:audit:callincallout hardis:project:audit:duplicatefiles hardis:project:audit:remotesites hardis:project:clean:emptyitems hardis:project:clean:filter-xml-content hardis:project:clean:flowpositions hardis:project:clean:hiddenitems hardis:project:clean:listviews hardis:project:clean:manageditems hardis:project:clean:minimizeprofiles hardis:project:clean:orgmissingitems hardis:project:clean:references hardis:project:clean:retrievefolders hardis:project:clean:sensitive-metadatas hardis:project:clean:standarditems hardis:project:clean:systemdebug hardis:project:clean:xml hardis:project:configure:auth hardis:project:convert:profilestopermsets hardis:project:create hardis:project:deploy:notify hardis:project:deploy:quick hardis:project:deploy:simulate hardis:project:deploy:smart hardis:project:deploy:sources:dx hardis:project:deploy:sources:metadata hardis:project:deploy:start hardis:project:deploy:validate hardis:project:fix:profiletabs hardis:project:fix:v53flexipages hardis:project:generate:bypass hardis:project:generate:flow-git-diff hardis:project:generate:gitdelta hardis:project:lint hardis:project:metadata:findduplicates"},{"location":"#hardisscratch","title":"hardis:scratch","text":"Command Title hardis:scratch:create hardis:scratch:delete hardis:scratch:pool:create hardis:scratch:pool:localauth hardis:scratch:pool:refresh hardis:scratch:pool:reset hardis:scratch:pool:view hardis:scratch:pull hardis:scratch:push"},{"location":"#hardissource","title":"hardis:source","text":"Command Title hardis:source:deploy hardis:source:push hardis:source:retrieve"},{"location":"#hardiswork","title":"hardis:work","text":"Command Title hardis:work:new hardis:work:refresh hardis:work:resetselection hardis:work:save hardis:work:ws"},{"location":"#helloworld","title":"hello:world","text":"Command Title hello:world"},{"location":"CHANGELOG/","title":"Changelog","text":""},{"location":"CHANGELOG/#beta-master","title":"[beta] (master)","text":"<p>Note: Can be used with <code>sfdx plugins:install sfdx-hardis@beta</code> and docker image <code>hardisgroupcom/sfdx-hardis@beta</code></p>"},{"location":"CHANGELOG/#5300-2025-05-04","title":"[5.30.0] 2025-05-04","text":"<ul> <li>hardis:doc:project2markdown: Generate Assignment Rules documentation</li> <li>Doc: Mention security artifacts in documentation</li> </ul>"},{"location":"CHANGELOG/#5291-2025-05-02","title":"[5.29.1] 2025-05-02","text":"<ul> <li>hardis:org:diagnose:audittrail: Flag more audit trail actions as not relevant</li> <li>Generate SBOM (Software Bill Of Material) from CI/CD jobs</li> <li>Expose security scan results and SBOM as artifacts on release jobs</li> </ul>"},{"location":"CHANGELOG/#5290-2025-05-02","title":"[5.29.0] 2025-05-02","text":"<ul> <li>hardis:doc:project2markdown: Generate Approval Process documentation</li> <li>Bitbucket Integration: Update default pipeline to add <code>clone: depth: full</code></li> <li>Security: Remove markdown-toc dependency as it is not maintained anymore and contains a CVE on old lodash version</li> <li>Add documentation page about how security is handled with sfdx-hardis</li> <li>Add trivy reports in Github Actions Workflows</li> </ul>"},{"location":"CHANGELOG/#5281-2025-04-25","title":"[5.28.1] 2025-04-25","text":"<ul> <li>hardis:org:diagnose:audittrail enhancements<ul> <li>Flag more audit trail actions as not relevant</li> <li>Display related actions next to username in summary</li> </ul> </li> <li>hardis:doc:project2markdown: Reorganize documentation menus</li> </ul>"},{"location":"CHANGELOG/#5280-2025-04-23","title":"[5.28.0] 2025-04-23","text":"<ul> <li>hardis:lint:metadatastatus: Detect more inactive elements that are technical debt to be cleaned<ul> <li>Approval Processes</li> <li>Assignment Rules</li> <li>Auto Response Rules</li> <li>Escalation Rules</li> <li>Forecasting Types</li> <li>Record Types</li> <li>Workflow Rules</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#5270-2025-04-18","title":"[5.27.0] 2025-04-18","text":"<ul> <li>hardis:doc:project2markdown new features<ul> <li>Generate Permission sets and Permission Set Groups documentation</li> <li>Display Profiles &amp; Permission Sets attributes in a tree</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#5261-2025-04-15","title":"[5.26.1] 2025-04-15","text":"<ul> <li>Also Display JIRA and Azure Boards issue status labels in notifications</li> <li>hardis:org:monitor:backup enhancements<ul> <li>Add --start-chunk to help solving rotten Metadata retrieve issues</li> <li>When using --full-apply-filters, do not kee Custom Objects who do not have Custom Fields locally defined</li> <li>Update package-skip-items template to add MilestoneType</li> <li>Add troubleshooting documentation</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#5260-2025-04-11","title":"[5.26.0] 2025-04-11","text":"<ul> <li>hardis:org:monitor:backup: Allow wildcards in package-skip-items.xml (examples: <code>pi__*</code> , <code>*__dlm</code> , or <code>prefix*suffix</code> )</li> </ul>"},{"location":"CHANGELOG/#5252-2025-04-10","title":"[5.25.2] 2025-04-10","text":"<ul> <li>Display JIRA and Azure Boards issue status labels in Pull Request comments</li> </ul>"},{"location":"CHANGELOG/#5251-2025-04-08","title":"[5.25.1] 2025-04-08","text":"<ul> <li>hardis:doc:project2markdown: Fix typo for Object description prompt</li> </ul>"},{"location":"CHANGELOG/#5250-2025-04-06","title":"[5.25.0] 2025-04-06","text":"<ul> <li>hardis:doc:project2markdown: Add profile documentation generated by AI</li> <li>Refactor document generation code</li> <li>GitHub Integration: Use ENV variables as fallback in case the job runner is not GitHub Actions, like Codefresh</li> </ul>"},{"location":"CHANGELOG/#5243-2025-04-04","title":"[5.24.3] 2025-04-04","text":"<ul> <li>Fix visualization of Azure DevOps images by linking attachments to a generic work item.</li> </ul>"},{"location":"CHANGELOG/#5242-2025-04-02","title":"[5.24.2] 2025-04-02","text":"<ul> <li>Upgrade npm dependencies</li> </ul>"},{"location":"CHANGELOG/#5241-2025-03-24","title":"[5.24.1] 2025-03-24","text":"<ul> <li>Upgrade @xmlnode/xmlnode and update related code so it works with newer version</li> <li>Upgrade NPM dependencies</li> <li>Update Contributor Guide documentation about package management</li> </ul>"},{"location":"CHANGELOG/#5240-2025-03-21","title":"[5.24.0] 2025-03-21","text":"<ul> <li>Flow documentation: Take in account new Transform Element</li> </ul>"},{"location":"CHANGELOG/#5230-2025-03-19","title":"[5.23.0] 2025-03-19","text":"<ul> <li>Lazy loading in hooks to improve performances when other CLI plugins commands are called</li> <li>hardis:org:file:export: Fix 100000 characters SOQL error limit</li> <li>Upgrade npm dependencies</li> </ul>"},{"location":"CHANGELOG/#5220-2025-03-13","title":"[5.22.0] 2025-03-13","text":"<ul> <li>hardis:org:file:export: Now handles to export of Attachments in addition to ContentVersions :)</li> <li>hardis:doc:flow2markdown: Call AI when generating the doc of a single flow</li> <li>hardis:project:deploy:smart Fix: delta after merge is not working as expected</li> </ul>"},{"location":"CHANGELOG/#5214-2025-03-11","title":"[5.21.4] 2025-03-11","text":"<ul> <li>Support edge-case when package.xml is empty but destructive changes are present. (see Github issue)</li> <li>Upgrade dependencies</li> </ul>"},{"location":"CHANGELOG/#5213-2025-03-01","title":"[5.21.3] 2025-03-01","text":"<ul> <li>hardis:org:data:export: Fix crash when a record has more than 1000 attached documents</li> </ul>"},{"location":"CHANGELOG/#5212-2025-03-01","title":"[5.21.2] 2025-03-01","text":"<ul> <li>hardis:org:diagnose:unused-connected-app: Fix crash when a Connected App doesn't have a CreatedBy</li> <li>hardis:doc:project2markdown: Avoid crash when a lookup field does not contain referenceTo</li> </ul>"},{"location":"CHANGELOG/#5211-2025-02-27","title":"[5.21.1] 2025-02-27","text":"<ul> <li>hardis:org:test:apex Take in account <code>--target-org</code> option</li> <li>hardis:org:diagnose:audittrail Fix monitoringAllowedSectionsActions</li> </ul>"},{"location":"CHANGELOG/#5210-2025-02-27","title":"[5.21.0] 2025-02-27","text":"<ul> <li>hardis:doc:project2markdown: Generate PDF files from markdown documentation, by @matheus-delazeri</li> </ul>"},{"location":"CHANGELOG/#5200-2025-02-22","title":"[5.20.0] 2025-02-22","text":"<ul> <li>hardis:work:new<ul> <li>Document properties availableProjects and availableTargetBranches</li> <li>Allow to define newTaskNameRegex to enforce the naming of a new task</li> <li>Allow to remove question about upgrading the dev sandbox is <code>sharedDevSandboxes: true</code> is set</li> </ul> </li> <li>Fix issue with monitoringAllowedSectionsActions not taking in account when a section is defined as <code>[]</code> to ignore all of its member types.</li> <li>Upgrade npm dependencies</li> </ul>"},{"location":"CHANGELOG/#5194-2025-02-17","title":"[5.19.4] 2025-02-17","text":"<ul> <li>Do not check for missing descriptions on Data Cloud &amp; Managed package metadatas</li> <li>Doc: display where subflows are used in a new Dependencies paragraph</li> <li>mkdocs-to-cf: No need to authenticate to SF org</li> </ul>"},{"location":"CHANGELOG/#5193-2025-02-15","title":"[5.19.3] 2025-02-15","text":"<ul> <li>Doc: Add Cloudflare setup instructions</li> <li>Doc: Reorganize Project documentation menus</li> <li>Update default workflows to handle Cloudflare variables</li> </ul>"},{"location":"CHANGELOG/#5192-2025-02-14","title":"[5.19.2] 2025-02-14","text":"<ul> <li>hardis:project:generate:bypass: Added necessary flags to be run from vscode sfdx-hardis extension + added skip-credits<ul> <li>Bypass generator: Create metadatas folders if not existing yet</li> </ul> </li> <li>Change default CF policy</li> <li>Update doc to request activation of ExperienceBundle Metadata API</li> </ul>"},{"location":"CHANGELOG/#5191-2025-02-09","title":"[5.19.1] 2025-02-09","text":"<ul> <li>Quickfix cf upload</li> </ul>"},{"location":"CHANGELOG/#5190-2025-02-09","title":"[5.19.0] 2025-02-09","text":"<ul> <li>hardis:doc:project2markdown: Add object model diagram in documentation</li> <li>New command hardis:project:generate:bypass : Generates bypass custom permissions and permission sets for specified sObjects and automations, by @Mehdi-Cloudity in https://github.com/hardisgroupcom/sfdx-hardis/pull/1060</li> <li>Adjusting the Grafana Configuration Variables in the Megalinter part of org-monitoring.yml, by @AhmedElAmory in https://github.com/hardisgroupcom/sfdx-hardis/pull/1057</li> </ul>"},{"location":"CHANGELOG/#5181-2025-02-04","title":"[5.18.1] 2025-02-04","text":"<ul> <li>Fix typo in docUtils</li> <li>Stealth enhancements</li> </ul>"},{"location":"CHANGELOG/#5180-2025-02-03","title":"[5.18.0] 2025-02-03","text":"<ul> <li>New command hardis:doc:fieldusage : generate a report with custom field's usage from metadata dependencies.</li> </ul>"},{"location":"CHANGELOG/#5174-2025-01-31","title":"[5.17.4] 2025-01-31","text":"<ul> <li>hardis:doc:project2markdown: Fixes pages menu</li> <li>Stealth feature</li> </ul>"},{"location":"CHANGELOG/#5173-2025-01-29","title":"[5.17.3] 2025-01-29","text":"<ul> <li>hardis:doc:project2markdown: Improve Apex docs markdown</li> <li>Upgrade apexdocs version</li> <li>Fix auth message when selecting default org</li> </ul>"},{"location":"CHANGELOG/#5172-2025-01-29","title":"[5.17.2] 2025-01-29","text":"<ul> <li>hardis:org:configure:files: Add examples when configuring file export format</li> <li>hardis:doc:project2markdown: Avoid the command to crash if apexdocs generation fails</li> </ul>"},{"location":"CHANGELOG/#5171-2025-01-27","title":"[5.17.1] 2025-01-27","text":"<ul> <li>hardis:doc:project2markdown: Add type of Lightning Pages in tables</li> <li>hardis:org:monitor:backup: Fix issue when there is an empty metadata type</li> </ul>"},{"location":"CHANGELOG/#5170-2025-01-26","title":"[5.17.0] 2025-01-26","text":"<ul> <li>hardis:doc:project2markdown enhancements:<ul> <li>Generate Apex classes documentation using <code>@cparra/apexdocs</code>, and describe them using AI if available</li> <li>Generate Lightning Pages documentation and describe them using AI if available</li> <li>Display error message in case of XML parsing error</li> <li>Do not raise issues when managed items fields don't have descriptions</li> <li>Do not raise inactive validation rule issue when the VR is from a managed package</li> <li>Fix New JSON coverage formatter is selecting wrong JSON from sf project deploy command</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#5164-2025-01-22","title":"[5.16.4] 2025-01-22","text":"<ul> <li>Doc: Exclude not relevant md from search</li> <li>Upgrade npm dependencies</li> <li>Add more logs to login command</li> </ul>"},{"location":"CHANGELOG/#5163-2025-01-22","title":"[5.16.3] 2025-01-22","text":"<ul> <li>Do not post comments with Flows if there is no real differences</li> <li>Truncate the number of flows git diff displayed in Pull Request comments to 30 (override the number using MAX_FLOW_DIFF_TO_SHOW )</li> <li>Keep history link in main flow doc if available and history not recalculated</li> <li>Remove Flows History mkdocs menu if present from an old sfdx-hardis doc generation</li> <li>QuickFix AI Generated Summary text in PRs</li> </ul>"},{"location":"CHANGELOG/#5162-2025-01-21","title":"[5.16.2] 2025-01-21","text":"<ul> <li>Strip XML to save prompts tokens</li> <li>Fix issue when parsing CustomObject metadata</li> <li>Install latest version of plugin @salesforce/plugin-deploy-retrieve in Dockerfile to avoid the bug of its current version</li> <li>Fix: Do not recalculate Flow History doc if flow has not been updated</li> <li>Skip Data Cloud objects from documentation (enforce using variable INCLUDE_DATA_CLOUD_DOC=true)</li> </ul>"},{"location":"CHANGELOG/#5161-2025-01-19","title":"[5.16.1] 2025-01-19","text":"<ul> <li>AI Cache results enhancements<ul> <li>Normalize strings before creating fingerprint to handle multiple platforms</li> <li>Delete unused cache files</li> </ul> </li> <li>Fix variables mismatch when calling <code>generateFlowMarkdownFile</code></li> </ul>"},{"location":"CHANGELOG/#5160-2025-01-19","title":"[5.16.0] 2025-01-19","text":"<ul> <li>New AI Provider: Agentforce</li> <li>Create Objects AI-powered documentation<ul> <li>Summary</li> <li>Relationships with other objects</li> <li>Fields</li> <li>Validation rules</li> <li>Related flows</li> </ul> </li> <li>Handle prompts multilingualism (ex: <code>PROMPTS_LANGUAGE=fr</code>)</li> <li>Handle prompts cache to save tokens</li> <li>Add <code>SFDX_DISABLE_FLOW_DIFF: false</code> in default CI/CD pipelines (must be set to true during CI/CD setup)</li> <li>Enhance branches &amp; orgs CI/CD strategy mermaid diagram</li> <li>Improve performances by using <code>GLOB_IGNORE_PATTERNS</code> for all calls to glob</li> </ul>"},{"location":"CHANGELOG/#5155-2025-01-16","title":"[5.15.5] 2025-01-16","text":"<ul> <li>Flow Visual Diff enhancements<ul> <li>Display full node fields table when it contains updated elements</li> <li>Fix removed long links</li> <li>Handle cases where Flow has been added or deleted</li> </ul> </li> <li>Update hardis:project:deploy:notify documentation</li> </ul>"},{"location":"CHANGELOG/#5154-2025-01-15","title":"[5.15.4] 2025-01-15","text":"<ul> <li>Allow to disable calls to AI prompts API using DISABLE_AI=true</li> <li>Implement AI cache to save calls to AI prompts API (can be disabled using IGNORE_AI_CACHE)</li> </ul>"},{"location":"CHANGELOG/#5153-2025-01-14","title":"[5.15.3] 2025-01-14","text":"<ul> <li>hardis:project:generate:flow-git-diff New parameters --commit-before and --commit-after</li> <li>hardis:doc:project2markdown: Filter flows from managed packages</li> <li>Display number of AI prompts API calls at the end of a command</li> </ul>"},{"location":"CHANGELOG/#5152-2025-01-13","title":"[5.15.2] 2025-01-13","text":"<ul> <li>Add AI security considerations in documentation</li> <li>Do not prompt for AI API TOKEN</li> <li>Do not crash in case of AI call failure</li> </ul>"},{"location":"CHANGELOG/#5151-2025-01-12","title":"[5.15.1] 2025-01-12","text":"<ul> <li>Improve prompt templates</li> </ul>"},{"location":"CHANGELOG/#5150-2025-01-12","title":"[5.15.0] 2025-01-12","text":"<ul> <li>Allow to call AI to describe flows in documentation</li> <li>Allow to call AI to describe differences between 2 flow versions in a pull request comment</li> <li>Ai Provider enhancements<ul> <li>Change default model from gpt-4o to gpt-4o-mini</li> <li>Prompt templates factory, with capability to override default prompt with ENV variable</li> <li>Translate prompts in french</li> </ul> </li> <li>Add dotenv to allow to define secrets variables in a local <code>.env</code> file (never commit it !)</li> <li>Add more ways to call python depending on the installation</li> </ul>"},{"location":"CHANGELOG/#5143-2025-01-10","title":"[5.14.3] 2025-01-10","text":"<ul> <li>hardis:project:deploy:smart Fix crash when deployment is ok</li> </ul>"},{"location":"CHANGELOG/#5142-2025-01-10","title":"[5.14.2] 2025-01-10","text":"<ul> <li>hardis:project:deploy:smart Fix parsing error in case it is UNKNOWN_ERROR</li> <li>Fix error <code>str.replace is not a function</code></li> </ul>"},{"location":"CHANGELOG/#5141-2025-01-09","title":"[5.14.1] 2025-01-09","text":"<ul> <li>Generate a file hardis-report/apex-coverage-results.json with Apex code coverage details for the following commands:<ul> <li>hardis:project:deploy:smart (only if <code>COVERAGE_FORMATTER_JSON=true</code> environment variable is defined)</li> <li>hardis:org:test:apex (always)</li> <li>SF Cli deployment wrapper commands</li> </ul> </li> <li>Do not display command output if execCommand has been called with <code>output: false</code></li> </ul>"},{"location":"CHANGELOG/#5140-2025-01-09","title":"[5.14.0] 2025-01-09","text":"<ul> <li>Add ability to replace ApiVersion on specific Metadata Types file using <code>sf hardis:project:audit:apiversion</code></li> <li>Add parameters <code>fix</code> and <code>metadatatype</code> on <code>sf hardis:project:audit:apiversion</code></li> <li>Fix build of formula markdown when generating a Flow Visual Documentation</li> </ul>"},{"location":"CHANGELOG/#5133-2025-01-08","title":"[5.13.3] 2025-01-08","text":"<ul> <li>Update default JIRA Regex to catch tickets when there is an number in the project name</li> </ul>"},{"location":"CHANGELOG/#5132-2025-01-07","title":"[5.13.2] 2025-01-07","text":"<ul> <li>hardis:project:deploy:smart: Fix parsing when deployment failure is related to Apex code coverage</li> <li>Flow doc fix: add description for constants, variables, text template &amp; formulas</li> <li>Flow parsing: Fix error when there is only one formula</li> </ul>"},{"location":"CHANGELOG/#5131-2025-01-07","title":"[5.13.1] 2025-01-07","text":"<ul> <li>hardis:doc:project2markdown Display a screen emoji in documentation flows table when they are not tied to an Object</li> <li>hardis:project:deploy:smart: Shorten log lines when there is a too big JSON, by removing info not relevant for display, like unchanged files or test classes results.</li> </ul>"},{"location":"CHANGELOG/#5130-2025-01-05","title":"[5.13.0] 2025-01-05","text":"<ul> <li>hardis:doc:project2markdown Add branch &amp; orgs strategy MermaidJS diagram in documentation</li> </ul>"},{"location":"CHANGELOG/#5120-2025-01-04","title":"[5.12.0] 2025-01-04","text":"<ul> <li>New command hardis:doc:mkdocs-to-salesforce to generate static HTML doc and host it in a Static Resource and a VisualForce page</li> <li>Remove hyperlinks from MermaidJs on Pull Request comments, to improve display on GitHub &amp; Gitlab</li> <li>Upgrade base image to python:3.12.8-alpine3.20, so mkdocs can be installed and run if necessary</li> <li>Add links in package.xml Markdown documentation</li> </ul>"},{"location":"CHANGELOG/#5110-2025-01-03","title":"[5.11.0] 2025-01-03","text":"<ul> <li>Visual flow management, using MermaidJs<ul> <li>hardis:doc:project2markdown: Add a markdown file for each Flow<ul> <li>If unable to run mermaid-cli, store markdown with mermaidJs diagram content anyway (can happen from Monitoring Backup Command)</li> <li>When called from Monitoring (hardis:org:monitor:backup), generate Flow documentation only if it has been updated</li> </ul> </li> <li>hardis:doc:flow2markdown: Generate the markdown documentation of a single flow (available from VsCode extension)</li> <li>hardis:project:generate:flow-git-diff: Generate the visual git diff for a single flow (available from VsCode extension)</li> <li>hardis:project:deploy:smart: Add visual git diff for flows updated by a Pull Request</li> <li>Flow Visual Git diff also added to standard SF Cli commands wrappers</li> </ul> </li> </ul> <ul> <li>New command hardis:project:deploy:notify to send Pull Request comments (with Flow Visual Git Diff) and Slack / Teams notifications even if you are not using a sfdx-hardis command to check or process a deployment.</li> </ul> <ul> <li>Command updates<ul> <li>hardis:project:deploy:smart: Refactor deployment errors parsing: use JSON output instead of text output</li> <li>hardis:org:test:apex: Display the number of failed tests in messages and notifications</li> <li>hardis:org:monitor:backup:<ul> <li>New option --exclude-namespaces that can be used with --full option</li> <li>New option --full-apply-filters that can be used with --full option to apply filters anyway</li> </ul> </li> </ul> </li> </ul> <ul> <li>Core enhancements &amp; fixes<ul> <li>Obfuscate some data from text log files</li> <li>Kill some exit handlers in case they are making the app crash after a throw SfError</li> <li>Trigger notifications during the command execution, not after</li> <li>Do not display warning in case no notification has been configured in case we are running locally</li> <li>Fix Individual deployment tips markdown docs by adding quotes to YML properties</li> <li>Fix init sfdx-hardis project commands and docs</li> <li>Display warning message in case package.xml has wrong format</li> <li>Allow to override package-no-overwrite from a branch .sfdx-hardis.yml config file</li> <li>Using target_branch for Jira labels when isDeployBeforeMerge flag is true</li> </ul> </li> </ul> <ul> <li>Doc<ul> <li>Update Microsoft Teams notifications integration User Guide</li> <li>Add troubleshooting section in Email integration User Guide</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#5101-2024-12-12","title":"[5.10.1] 2024-12-12","text":"<ul> <li>Fix sfdx-hardis docker image build by adding coreutils in dependencies</li> </ul>"},{"location":"CHANGELOG/#5100-2024-12-12","title":"[5.10.0] 2024-12-12","text":"<ul> <li>Update Docker base image to alpine to 3.21</li> </ul>"},{"location":"CHANGELOG/#593-2024-12-12","title":"[5.9.3] 2024-12-12","text":"<ul> <li>hardis:org:data:import: Allow to run the command in production using, by either:<ul> <li>Define sfdmuCanModify in your .sfdx-hardis.yml config file. (Example: <code>sfdmuCanModify: prod-instance.my.salesforce.com</code>)</li> <li>Define an environment variable SFDMU_CAN_MODIFY. (Example: <code>SFDMU_CAN_MODIFY=prod-instance.my.salesforce.com</code>)</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#592-2024-12-10","title":"[5.9.2] 2024-12-10","text":"<ul> <li>Fallback message in case sfdx-hardis is not able to parse newest SF CLI errors format.</li> </ul>"},{"location":"CHANGELOG/#591-2024-12-09","title":"[5.9.1] 2024-12-09","text":"<ul> <li>Fix issue that generates valid Pull Request comment whereas there is 1 error</li> <li>Add TS test case</li> <li>Upgrade NPM dependencies</li> </ul>"},{"location":"CHANGELOG/#590-2024-12-02","title":"[5.9.0] 2024-12-02","text":"<ul> <li>hardis:org:monitor:backup: New mode --full, much slower than default filtered one, but that can retrieve ALL metadatas of an org</li> </ul>"},{"location":"CHANGELOG/#581-2024-11-26","title":"[5.8.1] 2024-11-26","text":"<ul> <li>Fix hardis:org:diagnose:unused-apex-classes: Use .cls file, not cls-meta.xml file to get creation date from git</li> </ul>"},{"location":"CHANGELOG/#580-2024-11-25","title":"[5.8.0] 2024-11-25","text":"<ul> <li>New monitoring command hardis:org:diagnose:unused-connected-apps to detect Connected Apps that are not used anymore and might be disabled or deleted.</li> </ul>"},{"location":"CHANGELOG/#572-2024-11-25","title":"[5.7.2] 2024-11-25","text":"<ul> <li>Fix issue with auth just before running a command (ask to run again the same command meanwhile we find a way to avoid that using SF CLI architecture)</li> </ul>"},{"location":"CHANGELOG/#571-2024-11-22","title":"[5.7.1] 2024-11-22","text":"<ul> <li>In case a prompt is requested during CI and makes a command fail, display the content of the prompt</li> </ul>"},{"location":"CHANGELOG/#570-2024-11-22","title":"[5.7.0] 2024-11-22","text":"<ul> <li>New command hardis:git:pull-requests:extract: Extract Pull Requests from Git Server into CSV/XLS (Azure only for now)</li> <li>Fix bug when scratch org username is &gt; 80 chars</li> <li>Make markdown-links-check not blocking by default in MegaLinter base config</li> <li>Make yamllint  not blocking by default in MegaLinter base config</li> </ul>"},{"location":"CHANGELOG/#563-2024-11-17","title":"[5.6.3] 2024-11-17","text":"<ul> <li>MegaLinter config: disable APPLY_FIXES by default</li> <li>Upgrade npm dependencies</li> </ul>"},{"location":"CHANGELOG/#562-2024-11-12","title":"[5.6.2] 2024-11-12","text":"<ul> <li>hardis:org:diagnose:unused-apex-classes<ul> <li>Display class created by and created name MIN(date from org,date from git)</li> <li>Replace errors by warnings, and add a message so users double-check before removing a class</li> <li>Reorder console log</li> </ul> </li> <li>Remove unused code from MetadataUtils class</li> </ul>"},{"location":"CHANGELOG/#561-2024-11-11","title":"[5.6.1] 2024-11-11","text":"<ul> <li>Fix hardis:org:user:activateinvalid interactive mode</li> <li>Update Dockerfile email address</li> <li>Upgrade default Grafana Dashboards to add Unused Apex Classes indicator</li> <li>Update hardis:org:diagnose:unused-apex-classes and hardis:doc:packagexml2markdown documentation</li> </ul>"},{"location":"CHANGELOG/#560-2024-11-09","title":"[5.6.0] 2024-11-09","text":"<ul> <li>New command hardis:org:diagnose:unused-apex-classes, to detect Apex classes (Batch,Queueable,Schedulable) that has not been called for more than 365 days, that might be deleted to improve apex tests performances</li> <li>hardis:doc:project2markdown: Update documentation</li> <li>Polish CI/CD home doc</li> <li>Refactor the build of hardis:org:monitor:all documentation</li> <li>Fix issue with ToolingApi calls: handle paginated results instead of only the first 200 records.</li> </ul>"},{"location":"CHANGELOG/#550-2024-11-03","title":"[5.5.0] 2024-11-03","text":"<ul> <li>hardis:doc:packagexml2markdown: Generate markdown documentation from a package.xml file</li> <li>hardis:doc:project2markdown: Generate markdown documentation from any SFDX project (CI/CD, monitoring, projects not using sfdx-hardis...) in <code>docs</code> folder and add a link in README.md if existing.</li> <li>hardis:org:monitor:backup: Call hardis:doc:project2markdown after backup</li> <li>hardis:org:retrieve:packageconfig: Ignore standard Salesforce packages</li> <li>Update CI/CD home documentation</li> </ul>"},{"location":"CHANGELOG/#541-2024-11-02","title":"[5.4.1] 2024-11-02","text":"<ul> <li>hardis:org:multi-org-query enhancements<ul> <li>Improve documentation</li> <li>Allow to use --query-template as option to use one of the predefined templates via command line</li> <li>Handle errors if issues when the command is called via a CI/CD job</li> </ul> </li> <li>Upgrade dependencies</li> </ul>"},{"location":"CHANGELOG/#540-2024-11-02","title":"[5.4.0] 2024-11-02","text":"<ul> <li>New command hardis:org:multi-org-query allowing to execute a SOQL Bulk Query in multiple orgs and aggregate the results in a single CSV / XLS report</li> <li>New command hardis:org:community:update to Activate / Deactivate communities from command line</li> </ul>"},{"location":"CHANGELOG/#530-2024-10-24","title":"[5.3.0] 2024-10-24","text":"<ul> <li>Update default Monitoring workflow for GitHub</li> <li>Refactor file download code<ul> <li>Display progress</li> <li>Better error handling</li> </ul> </li> <li>hardis:org:diagnose:legacyapi: Fix issue with big log files: Use stream to parse CSV and perform checks</li> <li>Update default API version toto 62.0 (Winter 25 release)</li> </ul>"},{"location":"CHANGELOG/#524-2024-10-21","title":"[5.2.4] 2024-10-21","text":"<ul> <li>Fix hardis:org:fix:listviewmine: Use chrome-launcher to find chrome executable to use with puppeteer-core</li> <li>Remove keyv dependency</li> </ul>"},{"location":"CHANGELOG/#523-2024-10-19","title":"[5.2.3] 2024-10-19","text":"<ul> <li>Change default <code>.mega-linter.yml</code> config</li> <li>Display number of package.xml items before or after retrieving them</li> <li>Doc: Update youtube preview images</li> </ul>"},{"location":"CHANGELOG/#522-2024-10-14","title":"[5.2.2] 2024-10-14","text":"<ul> <li>Fix doubling -d option in hardis:scratch:create</li> </ul>"},{"location":"CHANGELOG/#521-2024-10-14","title":"[5.2.1] 2024-10-14","text":"<ul> <li>2 hardis commands: rename <code>-d</code> into something else when the short option was available twice on the same command</li> </ul>"},{"location":"CHANGELOG/#520-2024-10-14","title":"[5.2.0] 2024-10-14","text":"<ul> <li>Improve BUILD &amp; RUN documentation</li> <li>21 hardis commands: rename <code>-o</code> short into <code>-f</code> when possible, or other short letter, to avoid collision with <code>-o</code> (<code>--target-org</code>) option</li> <li>Fix GitHub Org Monitoring workflow (remove push event + fix command typo)</li> </ul>"},{"location":"CHANGELOG/#510-2024-10-11","title":"[5.1.0] 2024-10-11","text":"<ul> <li>hardis:project:deploy:smart: Fix to adapt stdout checks to output of <code>sf project deploy start</code> in case code coverage is ignored</li> <li>hardis:org:monitor:backup: Allow spaces in folders</li> <li>Remove pubsub from default .forceignore</li> <li>Change default deployment waiting time from 60mn to 120mn</li> <li>Display explicit warning message before ConnectedApp deployment so users don't forget to manually create the connected app with the certificate</li> </ul>"},{"location":"CHANGELOG/#5010-2024-10-03","title":"[5.0.10] 2024-10-03","text":"<ul> <li>hardis:project:deploy:smart : Fix parsing of error strings</li> <li>hardis:project:deploy:smart : Fix markdown display on PR summary</li> </ul>"},{"location":"CHANGELOG/#509-2024-10-03","title":"[5.0.9] 2024-10-03","text":"<ul> <li>Fix link to tip doc from Pull Request / Merge Request comments</li> <li>Fixing small issues with creating scratch org and scratch org pool</li> </ul>"},{"location":"CHANGELOG/#508-2024-10-01","title":"[5.0.8] 2024-10-01","text":"<ul> <li>Monitoring config: Fix way to define how to upload connected app</li> <li>New deployment tip: Couldn't retrieve or load information on the field</li> <li>Fix parsing of errors when they are unknown</li> <li>Fix SEO info in deployment tips documentation</li> </ul>"},{"location":"CHANGELOG/#507-2024-09-25","title":"[5.0.7] 2024-09-25","text":"<ul> <li>hardis:org:monitoring:backup : fix issue when metadata type is unknown</li> </ul>"},{"location":"CHANGELOG/#506-2024-09-25","title":"[5.0.6] 2024-09-25","text":"<ul> <li>Allow to purge flows &amp; flow interviews using <code>--no-prompt</code> option</li> <li>Fix duplicate <code>-f</code> short option by replacing <code>delete-flow-interviews</code> short by <code>-w</code></li> </ul>"},{"location":"CHANGELOG/#505-2024-09-24","title":"[5.0.5] 2024-09-24","text":"<ul> <li>When git add / stash failure, display a message explaining to run <code>git config --system core.longpaths true</code> to solve the issue.</li> <li>Improve test classes errors collection during deployment check</li> <li>Display the number of elements deployed within a package.xml</li> </ul>"},{"location":"CHANGELOG/#504-2024-09-24","title":"[5.0.4] 2024-09-24","text":"<ul> <li>Fix errors collection during deployment check</li> <li>Display in deployment check summary when useSmartDeploymentTests has been activated</li> <li>Do not send coverage formatters options when test level is NoTestRun</li> </ul>"},{"location":"CHANGELOG/#503-2024-09-23","title":"[5.0.3] 2024-09-23","text":"<ul> <li>Add --ignore-conflicts to smartDeploy</li> </ul>"},{"location":"CHANGELOG/#502-2024-09-23","title":"[5.0.2] 2024-09-23","text":"<ul> <li>Always use <code>project deploy start --dry-run</code> for deployment validation, until command <code>project deploy validate</code> works with --ignore-warnings &amp; NoTestRun</li> </ul>"},{"location":"CHANGELOG/#500-2024-09-23","title":"[5.0.0] 2024-09-23","text":""},{"location":"CHANGELOG/#refactoring-explanations","title":"Refactoring explanations","text":"<p>The future deprecation of sfdx force:source:** commands on 6 november finally convinced us to switch everything from SFDX core to SF CLI core. (otherwise existing CI/CD pipelines would not work anymore from this date !)</p> <p>Therefore, sfdx-hardis required a complete refactoring as described below, but this won't impact existing CI/CD and Monitoring pipelines.</p> <p>We made many tests but risk zero do not exist, so if you see any bug, please report them ASAP and we'll solve them quickly :)</p>"},{"location":"CHANGELOG/#major-changes","title":"Major changes","text":"<ul> <li> <p>Migrate plugin from SFDX plugin core to SF Cli Plugin core</p> <ul> <li>Convert commands code from SfdxCommand base to SfCommand base</li> <li>Migrate internal Bulk Api calls from Bulk API v1 to Bulk API v2</li> <li>Upgrade all npm dependencies to their latest version (more secured)</li> </ul> </li> </ul> <ul> <li> <p>Change background calls to legacy sfdx commands to call their SF Cli replacements</p> <ul> <li><code>sfdx force:mdapi:convert</code> -&gt; <code>sf project convert mdapi</code></li> <li><code>sfdx force:mdapi:deploy</code> -&gt; <code>sf project deploy start --metadata-dir</code></li> <li><code>sfdx force:source:retrieve</code> -&gt; <code>sf project retrieve start</code></li> <li><code>sfdx force:source:deploy</code> -&gt; <code>sf project deploy start</code></li> <li><code>sfdx force:source:pull</code> -&gt; <code>sf project retrieve start</code></li> <li><code>sfdx force:source:push</code> -&gt; <code>sf project deploy start</code></li> <li><code>sfdx force:source:tracking:clear</code> -&gt; <code>sf project delete tracking</code></li> <li><code>sfdx force:source:manifest:create</code> -&gt; <code>sf project generate manifest</code></li> <li><code>sfdx sgd:source:delta</code> -&gt; <code>sf sgd:source:delta</code></li> <li><code>sfdx force:org:create</code> -&gt; <code>sf org create sandbox</code> | <code>sf org create scratch</code></li> <li><code>sfdx force:org:list</code> -&gt; <code>sf org list</code></li> <li><code>sfdx force:org:delete</code> -&gt; <code>sf org delete scratch</code></li> <li><code>sfdx config:get</code> -&gt; <code>sf config get</code></li> <li><code>sfdx config:set</code> -&gt; <code>sf config set</code></li> <li><code>sfdx auth:web:login</code> -&gt; <code>sf org login web</code></li> <li><code>sfdx auth:jwt:grant</code> -&gt; <code>sf org login jwt</code></li> <li><code>sfdx auth:sfdxurl:store</code> -&gt; <code>sf org login sfdx-url</code></li> <li><code>sfdx org:login:device</code> -&gt; <code>sf org login device</code></li> <li><code>sfdx force:data:record:get</code> -&gt; <code>sf data get record</code></li> <li><code>sfdx force:data:record:update</code> -&gt; <code>sf data update record</code></li> <li><code>sfdx force:data:soql:query</code> -&gt; <code>sf data query</code></li> <li><code>sfdx force:data:bulk:delete</code> -&gt; <code>sf data delete bulk</code></li> <li><code>sfdx alias:list</code> -&gt; <code>sf alias list</code></li> <li><code>sfdx alias:set</code> -&gt; <code>sf alias set</code></li> <li><code>sfdx force:apex:test:run</code> -&gt; <code>sf apex run test</code></li> <li><code>sfdx force:apex:execute</code> -&gt; <code>sf apex run</code></li> <li><code>sfdx force:package:create</code> -&gt; <code>sf package create</code></li> <li><code>sfdx force:package:version:create</code> -&gt; <code>sf package version create</code></li> <li><code>sfdx force:package:version:delete</code> -&gt; <code>sf package version delete</code></li> <li><code>sfdx force:package:version:list</code> -&gt; <code>sf package version list</code></li> <li><code>sfdx force:package:version:promote</code> -&gt; <code>sf package version promote</code></li> <li><code>sfdx force:package:installed:list</code> -&gt; <code>sf package installed</code></li> <li><code>sfdx force:package:install</code> -&gt; <code>sf package install</code></li> <li><code>sfdx force:user:password:generate</code> -&gt; <code>sf org generate password</code></li> <li><code>sfdx force:user:permset:assign</code> -&gt; <code>sf org assign permset</code></li> <li><code>sfdx hardis:_</code> -&gt; <code>sf hardis:_</code></li> </ul> </li> </ul> <ul> <li>New wrappers commands for SF Cli deployment commands<ul> <li><code>sf hardis project deploy validate</code> -&gt; Wraps <code>sf project deploy validate</code></li> <li><code>sf hardis project deploy quick</code> -&gt; Wraps <code>sf project deploy quick</code></li> <li><code>sf hardis project deploy start</code> -&gt; Wraps <code>sf project deploy start</code></li> </ul> </li> </ul>"},{"location":"CHANGELOG/#new-features-enhancements","title":"New Features / Enhancements","text":"<ul> <li>hardis:project:deploy:smart<ul> <li>New feature useSmartDeploymentTests: Improve performances by not running test classes when delta deployment contain only non impacting metadatas, and target org is not production</li> <li>Rename command hardis:project:deploy:source:dx into hardis:project:deploy:smart (previous command alias remains, no need to update your pipelines !)</li> </ul> </li> <li>commandsPreDeploy and commandsPostDeploy<ul> <li>New option context for a command, defining when it is run and when it is not: all (default), check-deployment-only or process-deployment-only</li> <li>New option runOnlyOnceByOrg: If set to <code>true</code>, the command will be run only one time per org. A record of SfdxHardisTrace__c is stored to make that possible (it needs to be existing in target org)</li> </ul> </li> <li>New commands<ul> <li>hardis:project:deploy:simulate to validate the deployment of a single metadata (used by VsCode extension)</li> <li>hardis:org:diagnose:releaseupdates to check for org Release Updates from Monitoring or locally</li> <li>hardis:misc:purge-references to partially automate the cleaning of related dependencies when you need to delete a field, or change its type (for example from master detail to lookup)</li> <li>hardis:project:clean:sensitive-metadatas to mask sensitive metadatas from git repo (ex: Certificate content)</li> </ul> </li> <li>hardis:work:save and hardis:project:deploy:sources:dx: Improve runtime performances thanks to internalization of sfdx-essentials commands</li> <li>hardis:work:new<ul> <li>Allow to add labels in property <code>availableTargetBranches</code>, using a comma. For examples, <code>- integration,Choose this branch if you are on the BUILD side of the project !</code></li> <li>Add current default org in the choices when prompting which org to use</li> </ul> </li> <li>hardis:project:new<ul> <li>Initialize autoCleanTypes with destructivechanges, flowPositions and minimizeProfiles</li> <li>Initialize package-no-overwrite.xml with Certificate metadata. (certificates must be uploaded manually)</li> </ul> </li> <li>hardis:org:files:export: Improve display with spinner</li> <li>hardis:org:purge:flow: If FlowInterview records are preventing Flow Versions to be deleted, prompt user to delete Flow Interviews before trying again to delete Flow Versions</li> <li>hardis:project:generate:gitdelta: Add option to generate package.xml related to a single commit</li> <li>hardis:org:data:delete: Check for property \"runnableInProduction\" in export.json before running deletion in production org.</li> <li>hardis:org:diagnose:audittrail: Add new filtered actions<ul> <li>Customer Portal: createdcustomersuccessuser</li> </ul> </li> <li>Authentication: do not use alias MY_ORG anymore + do not update local user config if no values to replace.</li> <li>When selecting an org, make sure it is still connected. If not, open browser so the user can authenticate again.</li> <li>Update sfdx-hardis Grafana Dashboards to import in your Grafana Cloud<ul> <li>SF Instance name</li> <li>Next platform upgrade</li> <li>Release Updates to check</li> <li>Installed packages</li> <li>Org licenses</li> </ul> </li> <li>AI Deployment assistant<ul> <li>Add error <code>Change Matching Rule</code></li> </ul> </li> <li>Git Providers<ul> <li>On Pull Requests / Merge Requests comments, add hyperlinks to errors documentation URL</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#fixes","title":"Fixes","text":"<ul> <li>Avoid error when removing obsolete flows (workaround using SF CLI if tooling api connection fails). Fixes #662</li> <li>Improve Slack/Teams notifications display</li> <li>Display explicit error message in case a password is required to install a managed package.</li> </ul>"},{"location":"CHANGELOG/#documentation","title":"Documentation","text":"<ul> <li>Reorganize README content<ul> <li>Add link to Dreamforce 24 session</li> </ul> </li> <li>Deployment assistant: Improve documentation by adding examples of errors, and a standalone page for each tip</li> <li>Factorize the definition of DOC_ROOT_URL https://sfdx-hardis.cloudity.com</li> </ul>"},{"location":"CHANGELOG/#deprecations","title":"Deprecations","text":"<ul> <li> <p>Deprecate wrapper commands matching sfdx commands that will be removed. All replaced by sf hardis deploy start</p> <ul> <li><code>sfdx hardis:source:push</code></li> <li><code>sfdx hardis:source:deploy</code></li> <li><code>sfdx hardis:mdapi:retrieve</code></li> <li><code>sfdx hardis:mdapi:deploy</code></li> </ul> </li> </ul> <ul> <li>Deprecate <code>hardis:deploy:sources:metadata</code> as nobody uses metadata format anymore</li> </ul>"},{"location":"CHANGELOG/#removals","title":"Removals","text":"<ul> <li>Replace puppeteer by puppeteer-core: it means that if you use a command requiring puppeteer, please make sure to have a Chrome available in your environment (already integrated within the Docker image)</li> </ul> <ul> <li> <p>Get rid of sfdx-essentials plugin dependency by internalizing its used commands</p> <ul> <li><code>sf hardis:packagexml:append</code></li> <li><code>sf hardis:packagexml:remove</code></li> <li><code>sf hardis:project:clean:filter-xml-content</code></li> </ul> </li> </ul> <ul> <li> <p>Remove npm dependencies (some of them not maintained anymore)</p> <ul> <li>@adobe/node-fetch-retry</li> <li>@amplitude/node</li> <li>@keyv/redis</li> <li>@oclif/command</li> <li>@oclif/config</li> <li>@oclif/errors</li> <li>@salesforce/command</li> <li>@salesforce/ts-types</li> <li>find-package-json</li> <li>node-fetch</li> </ul> </li> </ul> <ul> <li>Remove not used keyValueStores to keep only Salesforce one</li> </ul>"},{"location":"CHANGELOG/#4530-2024-08-20","title":"[4.53.0] 2024-08-20","text":"<ul> <li>Upgrade workflows to Node 20 (fixes https://github.com/hardisgroupcom/sfdx-hardis/issues/668)</li> <li>Simplify login prompts messages (fixes https://github.com/hardisgroupcom/sfdx-hardis/issues/667)</li> <li>Upgrade to MegaLinter v8 (own workflows + template workflows)</li> <li>Update monitoring commands documentation</li> <li>Upgrade npm dependencies<ul> <li>axios</li> <li>inquirer</li> <li>moment</li> <li>open</li> <li>ora</li> <li>@supercharge/promise-pool</li> <li>remove strip-ansi dependency to build local function</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#4520-2024-08-02","title":"[4.52.0] 2024-08-02","text":"<ul> <li>Minimum Node version is now 20</li> <li>hardis:work:save : Improve performances when cleaning project files</li> <li>Update Pipelines to add NOTIF_EMAIL_ADDRESS where it was missing</li> <li>Remove MS_TEAMS_WEBHOOK_URL from all pipelines as MsTeamsProvider is deprecated (use EmailProvider instead)</li> <li>Remove some useless code in EmailProvider</li> <li>Replace glob-promise by glob package</li> </ul>"},{"location":"CHANGELOG/#4510-2024-08-01","title":"[4.51.0] 2024-08-01","text":"<ul> <li>Deprecate Microsoft Teams Web Hooks notifications<ul> <li>Must be replaced by Email Notifications using the Ms Teams Channel email.</li> </ul> </li> <li>Handle bug when a branch .sfdx-hardis.yml config file is empty</li> <li>Upgrade default API version to 61</li> <li>Additional log when generating manifest package.xml from org</li> <li>Add error tip: Network issue (ECONNABORTED, ECONNRESET)</li> </ul>"},{"location":"CHANGELOG/#4501-2024-07-29","title":"[4.50.1] 2024-07-29","text":"<ul> <li>Fix report file name of hardis:org:monitor:limits</li> <li>Fix crash when GitProvider has been wrongly configured, and display information message</li> </ul>"},{"location":"CHANGELOG/#4500-2024-07-29","title":"[4.50.0] 2024-07-29","text":"<ul> <li>Add message in case of deployment check passing thanks to <code>testCoverageNotBlocking: true</code></li> <li>hardis:org:diagnose:legacyapi : Fix display error declared in bug #652</li> <li>Run legacy api detection daily with monitoring, as logs remain only 24h</li> </ul>"},{"location":"CHANGELOG/#4491-2024-07-27","title":"[4.49.1] 2024-07-27","text":"<ul> <li>Fix 4.49.0 (deployment error handler bug)</li> </ul>"},{"location":"CHANGELOG/#4490-2024-07-27","title":"[4.49.0] 2024-07-27","text":"<ul> <li>New command hardis:org:diagnose:instanceupgrade to get information about Org, its Salesforce instance and its next Platform Upgrade date. Sends notifications to Grafana if activated.</li> <li>Refactor Monitoring checks documentation</li> <li>hardis:project:deploy:sources:dx: After a failed Quick Deploy, use run with NoTestRun to improve perfs as we had previously succeeded to simulate the deployment</li> </ul>"},{"location":"CHANGELOG/#4481-2024-07-26","title":"[4.48.1] 2024-07-26","text":"<ul> <li>hardis:project:deploy:sources:dx: Fix issue with testCoverageNotBlocking</li> </ul>"},{"location":"CHANGELOG/#4480-2024-07-26","title":"[4.48.0] 2024-07-26","text":"<ul> <li>hardis:project:deploy:sources:dx: Allow new mode for running test during deployments: RunRepositoryTestsExceptSeeAllData (\u26a0\ufe0f Use with caution !)</li> </ul>"},{"location":"CHANGELOG/#4470-2024-07-22","title":"[4.47.0] 2024-07-22","text":"<ul> <li>Update emojis in prompts to make them more visible</li> <li>Replace <code>sfdx force:org:open</code> by <code>sf org open</code></li> </ul>"},{"location":"CHANGELOG/#4460-2024-07-18","title":"[4.46.0] 2024-07-18","text":"<ul> <li>Allow hardis:project:deploy:source:dx notifications to work if the deployment is performed before the Pull Request is merged (see Exotic Use Case)<ul> <li>Activate such mode with variable SFDX_HARDIS_DEPLOY_BEFORE_MERGE</li> </ul> </li> <li>Add link to Conga Article</li> <li>Add Conga article in README list of articles</li> </ul>"},{"location":"CHANGELOG/#4450-2024-07-14","title":"[4.45.0] 2024-07-14","text":"<ul> <li>New command hardis:org:files:import to import files exported using hardis:org:files:export</li> <li>Template management for SFDMU &amp; files import/export</li> <li>Update JSON schema to add <code>v60</code> in autoCleanTypes</li> </ul>"},{"location":"CHANGELOG/#4443-2024-07-12","title":"[4.44.3] 2024-07-12","text":"<ul> <li>Set GITLAB_API_REJECT_UNAUTHORIZED=false to avoid SSH rejections from Gitlab API</li> </ul>"},{"location":"CHANGELOG/#4442-2024-07-09","title":"[4.44.2] 2024-07-09","text":"<ul> <li>New config skipCodeCoverage, to use only in branch scoped config to not check for code coverage (Use with caution because won't work when deploying to production !)</li> </ul>"},{"location":"CHANGELOG/#4441-2024-07-08","title":"[4.44.1] 2024-07-08","text":"<ul> <li>QuickFix testlevel default value</li> </ul>"},{"location":"CHANGELOG/#4440-2024-07-08","title":"[4.44.0] 2024-07-08","text":"<ul> <li>New JSON schema properties, to use ONLY on branch scoped config and with caution !<ul> <li><code>testLevel</code>, to override the test level, with <code>RunRepositoryTests</code> for example</li> <li><code>runtests</code>, to override the list of tests to run, with <code>^(?!FLI|MyPrefix).*</code> for example</li> <li><code>testCoverageNotBlocking</code> , to make code coverage not blocking on a branch</li> </ul> </li> <li>Take in account <code>testCoverageNotBlocking</code> in deployment checks and PR summaries</li> </ul>"},{"location":"CHANGELOG/#4430-2024-07-06","title":"[4.43.0] 2024-07-06","text":"<ul> <li>hardis:work:save : Update prompt messages</li> <li>Remove direct URL to target org in case of deployment failure</li> <li>AI Deployment Assistant: Fix identification of error messages</li> <li>Add deployment tip \"Condition missing reference\"</li> </ul>"},{"location":"CHANGELOG/#4420-2024-07-02","title":"[4.42.0] 2024-07-02","text":"<ul> <li>hardis:project:deploy:sources:dx : If testlevel=RunRepositoryTests, option runtests can contain a regular expression to keep only class names matching it. If not set, it will run all test classes found in the repo</li> <li>Reduce size of README</li> <li>Update documentation about Authentication &amp; Security</li> <li>Add missing variables in workflows</li> </ul>"},{"location":"CHANGELOG/#4410-2024-06-29","title":"[4.41.0] 2024-06-29","text":"<ul> <li>AI Deployment Assistant: Integrate with OpenAI ChatGPT to find solutions to deployment issues</li> <li>Monitoring: Default 120mn timeout in Azure Workflow</li> <li>Backup: Replace colon in package file name</li> <li>New command hardis:project:fix:profiletabs to add / hide tabs directly in XML when such info is not retrieved by Salesforce CLI</li> </ul>"},{"location":"CHANGELOG/#4402-2024-06-18","title":"[4.40.2] 2024-06-18","text":"<ul> <li>hardis:org:diagnose:audittrail: Define new not suspect actions<ul> <li>Currency<ul> <li>updateddatedexchrate</li> </ul> </li> <li>Custom App Licenses<ul> <li>addeduserpackagelicense</li> <li>granteduserpackagelicense</li> </ul> </li> <li>Manage Users<ul> <li>unfrozeuser</li> </ul> </li> <li>Mobile Administration<ul> <li>assigneduserstomobileconfig</li> </ul> </li> </ul> </li> <li>hardis:org:monitor:all: Define relevant items as weekly, not daily</li> </ul>"},{"location":"CHANGELOG/#4401-2024-06-17","title":"[4.40.1] 2024-06-17","text":"<ul> <li>hardis:project:clean:minimizeprofiles: Allow to skip profiles refactoring using .sfdx-hardis.yml property skipMinimizeProfiles (can be useful for Experience Cloud profiles)</li> </ul>"},{"location":"CHANGELOG/#4400-2024-06-13","title":"[4.40.0] 2024-06-13","text":"<ul> <li>Deployment tips: add missingDataCategoryGroup (no DataCategoryGroup named...)</li> <li>handle commandsPreDeploy and commandPostDeploy to run custom command before and after deployments<ul> <li>If the commands are not the same depending on the target org, you can define them into config/branches/.sfdx-hardis-BRANCHNAME.yml instead of root config/.sfdx-hardis.yml</li> </ul> </li> </ul> <p>Example:</p> <pre><code>commandsPreDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to the deployment user\n    command: sf data update record --sobject User --where \"Username='deploy.github@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\ncommandsPostDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to the deployment user\n    command: sf data update record --sobject User --where \"Username='admin.user@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n</code></pre>"},{"location":"CHANGELOG/#4390-2024-06-13","title":"[4.39.0] 2024-06-13","text":"<ul> <li>hardis:clean:references: new option v60<ul> <li>Remove v61 userPermissions that do not exist in v60</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#4382-2024-06-06","title":"[4.38.2] 2024-06-06","text":"<ul> <li>Fix npm packages installation for GitHub monitoring to avoid random failures</li> <li>Add _notifKey in Grafana notifications to be able to build unique alerts</li> </ul>"},{"location":"CHANGELOG/#4381-2024-06-04","title":"[4.38.1] 2024-06-04","text":"<ul> <li>Add installed packages in monitoring backup logs</li> </ul>"},{"location":"CHANGELOG/#4380-2024-06-03","title":"[4.38.0] 2024-06-03","text":"<ul> <li>New command hardis:org:diagnose:licenses to send used licenses to monitoring logs like Grafana</li> <li>hardis:org:diagnose:audittrail: Exclude some Add / Remove users from a Territory events from Suspect Audit Trail actions</li> <li>hardis:org:diagnose:unusedusers: Fix metric name for ActiveUsers</li> </ul>"},{"location":"CHANGELOG/#4375-2024-05-31","title":"[4.37.5] 2024-05-31","text":"<ul> <li>hardis:org:purge:flow: Bulkify Flow deletion to improve performances</li> </ul>"},{"location":"CHANGELOG/#4374-2024-05-28","title":"[4.37.4] 2024-05-28","text":"<ul> <li>Fix pipeline and instructions for Monitoring using GitHub Actions</li> </ul>"},{"location":"CHANGELOG/#4373-2024-05-28","title":"[4.37.3] 2024-05-28","text":"<ul> <li>Revert to previous dashboards version to avoid issues with use of panel</li> <li>Add debug capabilities for advanced cases (call with DEBUG=sfdxhardis)</li> </ul>"},{"location":"CHANGELOG/#4372-2024-05-27","title":"[4.37.2] 2024-05-27","text":"<ul> <li>Half-automate the retrieve of default Grafana Dashboards</li> <li>Fix ticketing collection on PR with GitHub integration</li> <li>Fix monitoring bitbucket pipeline so the git pull works</li> </ul>"},{"location":"CHANGELOG/#4371-2024-05-26","title":"[4.37.1] 2024-05-26","text":"<ul> <li>Truncate logs sent to Grafana Loki in case they are too big, to avoid they are not taken in account<ul> <li>Default truncate size: 500</li> </ul> </li> <li>Add flowPositions in .sfdx-hardis.yml JSON Schema</li> <li>Add Grafana Cloud setup tutorial</li> </ul>"},{"location":"CHANGELOG/#4370-2024-05-21","title":"[4.37.0] 2024-05-21","text":"<ul> <li>New command hardis:project:clean:flowpositions to replace positions by 0 on AutoLayout Flows, in order to diminish conflicts<ul> <li>Can be automated at each hardis:work:save if <code>flowPositions</code> added in .sfdx-hardis.yml autoCleanTypes property</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#4360-2024-05-19","title":"[4.36.0] 2024-05-19","text":"<ul> <li>Update hardis:org:diagnose:unusedusers so it can also extract active users on a time period, thanks to option --returnactiveusers</li> <li>Add ACTIVE_USERS in weekly monitoring jobs</li> <li>Add JIRA variables to GitHub Workflows</li> </ul>"},{"location":"CHANGELOG/#4352-2024-05-15","title":"[4.35.2] 2024-05-15","text":"<ul> <li>Update monitoring default Gitlab, Azure &amp; GitHub Workflows</li> </ul>"},{"location":"CHANGELOG/#4351-2024-05-14","title":"[4.35.1] 2024-05-14","text":"<ul> <li>Fix unused users notification identifier</li> </ul>"},{"location":"CHANGELOG/#4350-2024-05-14","title":"[4.35.0] 2024-05-14","text":"<ul> <li>New command sfdx hardis:org:diagnose:unusedusers to find users that don't use their license !</li> </ul>"},{"location":"CHANGELOG/#4341-2024-05-13","title":"[4.34.1] 2024-05-13","text":"<ul> <li>Notifications org identifier: replace dot by __ to avoid mess with Grafana label filters</li> </ul>"},{"location":"CHANGELOG/#4340-2024-05-12","title":"[4.34.0] 2024-05-12","text":"<ul> <li>NotifProvider<ul> <li>Updates to also send metrics to Prometheus</li> <li>NOTIFICATIONS_DISABLE is now not applicable to ApiProvider who always sends notifs</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#4332-2024-05-06","title":"[4.33.2] 2024-05-06","text":"<ul> <li>hardis:org:test:apex : Always send coverageValue, coverageTarget and the list of failing classes to API logs</li> </ul>"},{"location":"CHANGELOG/#4331-2024-05-05","title":"[4.33.1] 2024-05-05","text":"<ul> <li>Api logs enhancements:<ul> <li>Add severity and severityIcon in all log elements details</li> <li>Add dateTime property (ISO format) in all API logs</li> </ul> </li> <li>Remove deprecated way to call MsTeams notifications</li> <li>hardis:org:monitor:limits : Fix bug when some values are not returned</li> </ul>"},{"location":"CHANGELOG/#4330-2024-05-04","title":"[4.33.0] 2024-05-04","text":"<ul> <li>New notifications provider: ApiProvider (beta), that allows to send notifications via HTTP/JSON to remote endpoints, like Grafana Loki, but also any custom one</li> <li>New notification severity level: log, to send notifications via ApiProvider even when there is no detected issue</li> <li>Update all existing notifications to add detailed log lines and additional log data</li> <li>hardis:org:diagnose:audittrail: Fix lastndays not taken in account in some contexts</li> <li>Complete refactoring of hardis:org:test:apex (same behavior but much organized code)</li> <li>Notifications: Display success logs in blue</li> <li>New monitoring command: sfdx hardis:org:monitor:limits to alert in case org limits are over 50% or 75% usage</li> <li>Fix gitlab-ci-config.yml: More restrictive regex for deployment branches</li> </ul>"},{"location":"CHANGELOG/#4322-2024-05-01","title":"[4.32.2] 2024-05-01","text":"<ul> <li>Fix GitHub Actions check deploy workflow</li> </ul>"},{"location":"CHANGELOG/#4321-2024-04-30","title":"[4.32.1] 2024-04-30","text":"<ul> <li>hardis:work:new : Replace all non alphanumeric characters in new git branch name</li> </ul>"},{"location":"CHANGELOG/#4320-2024-04-24","title":"[4.32.0] 2024-04-24","text":"<ul> <li> <p>Enhance BitBucket Integration, by @Alainbates in https://github.com/hardisgroupcom/sfdx-hardis/pull/584</p> <ul> <li>Deployment status in Pull Request comments</li> <li>Quick Deploy to enhance performance</li> </ul> </li> </ul> <ul> <li>Remove useless close WebSocket issue display</li> </ul>"},{"location":"CHANGELOG/#4312-2024-04-10","title":"[4.31.2] 2024-04-10","text":"<ul> <li>QuickFix Monitoring setup</li> </ul>"},{"location":"CHANGELOG/#4311-2024-04-10","title":"[4.31.1] 2024-04-10","text":"<ul> <li>Fix json output (remove other console logs that are not supposed to be here)</li> </ul>"},{"location":"CHANGELOG/#4310-2024-04-10","title":"[4.31.0] 2024-04-10","text":"<ul> <li>Add native Jenkins integration with Jenkinsfile for CI/CD Pipeline</li> <li>Update default pipelines to add JIRA variables</li> <li>Better handle of Jira API issues</li> </ul>"},{"location":"CHANGELOG/#4300-2024-04-02","title":"[4.30.0] 2024-04-02","text":"<ul> <li>Fix default package-no-overwrite.xml (typos on NamesCredential &amp; RemoteSiteSetting)</li> <li>Add links to FAQ in documentation</li> <li>Add two new PMD rules for quality pmd-ruleset-high.xml and pmd-ruleset-medium.xml</li> </ul>"},{"location":"CHANGELOG/#4290-2024-03-25","title":"[4.29.0] 2024-03-25","text":"<ul> <li>Handle manifest/preDestructiveChanges.xml to delete items before deployments if necessary</li> <li>Update documentation about integrations</li> <li>Upgrade dependencies</li> </ul>"},{"location":"CHANGELOG/#4284-2024-03-11","title":"[4.28.4] 2024-03-11","text":"<ul> <li>Allow to override default scratch org duration using .sfdx-hardis.yml property scratchOrgDuration</li> </ul>"},{"location":"CHANGELOG/#4283-2024-03-05","title":"[4.28.3] 2024-03-05","text":"<ul> <li>Audit trail check: Ignore change phone number events</li> </ul>"},{"location":"CHANGELOG/#4282-2024-02-27","title":"[4.28.2] 2024-02-27","text":"<ul> <li>Fix wrong upgrade version notification</li> <li>Update PMD bypassing rules doc</li> </ul>"},{"location":"CHANGELOG/#4281-2024-02-26","title":"[4.28.1] 2024-02-26","text":"<ul> <li>Fix issue when using email notifications with multiple recipients</li> </ul>"},{"location":"CHANGELOG/#4280-2024-02-21","title":"[4.28.0] 2024-02-21","text":"<ul> <li>Minimum Node.js version is now v18</li> <li>New notifications channel: EmailProvider (use variable NOTIF_EMAIL_ADDRESS that can contain a comma-separated list of e-mail addresses)</li> <li>Update existing call to notifications to add attached files when Email notif channel is active</li> <li>Audit trail suspect actions: add the number of occurences for each suspect action found</li> <li>Add more not suspect actions: dkimRotationPreparationSuccessful,createdReportJob,deletedReportJob,DeleteSandbox</li> <li>Get tickets info: also check in ticket ids in branch name</li> <li>Remove force config restDeploy=true</li> <li>Rename Provided by sfdx-hardis into Powered by sfdx-hardis</li> </ul>"},{"location":"CHANGELOG/#4271-2024-02-10","title":"[4.27.1] 2024-02-10","text":"<ul> <li>Skip post-deployment notifications if nothing was deployed in delta mode</li> <li>Simplify JIRA post deployment error output</li> </ul>"},{"location":"CHANGELOG/#4270-2024-02-09","title":"[4.27.0] 2024-02-09","text":"<ul> <li>Skip legacy notifications if NotifProvider has been used</li> <li>Allow to send warning, error and critical notifications to secondary Slack or Teams channel, using variables SLACK_CHANNEL_ID_ERRORS_WARNINGS or MS_TEAMS_WEBHOOK_URL_ERRORS_WARNINGS</li> </ul>"},{"location":"CHANGELOG/#4263-2024-02-02","title":"[4.26.3] 2024-02-02","text":"<ul> <li>Add bash to sfdx-hardis docker image</li> </ul>"},{"location":"CHANGELOG/#4262-2024-02-01","title":"[4.26.2] 2024-02-01","text":"<ul> <li>Display warning message when failed to upload connected app</li> <li>Update documentation about how to work on a dev sandbox / scratch org</li> </ul>"},{"location":"CHANGELOG/#4261-2024-01-31","title":"[4.26.1] 2024-01-31","text":"<ul> <li>Update Contributor User Guide</li> <li>Empty predefined list of packages to install</li> </ul>"},{"location":"CHANGELOG/#4260-2024-01-27","title":"[4.26.0] 2024-01-27","text":"<ul> <li>Detect JIRA tickets even if there is only their identifiers in commits / PR text (see Documentation)</li> <li>Fix PR comment ticket URL when detail has not been found on server</li> <li>Monitoring: run non-critical commands only weekly by default (on saturdays)</li> </ul>"},{"location":"CHANGELOG/#4251-2024-01-18","title":"[4.25.1] 2024-01-18","text":"<ul> <li>Fix Microsoft Teams notifications formatting</li> </ul>"},{"location":"CHANGELOG/#4250-2024-01-15","title":"[4.25.0] 2024-01-15","text":"<ul> <li>Integration with Azure Boards (Work Items) ticketing system<ul> <li>Enrich MR/PR comments by adding work items references and links</li> <li>Enrich notifications comments by adding work items references and links</li> <li>Post a comment and a tag on Azure Work Items when they are deployed in a major org</li> </ul> </li> <li>Enhance JIRA integration by posting labels once an issue is deployed in a major org</li> </ul>"},{"location":"CHANGELOG/#4241-2024-01-11","title":"[4.24.1] 2024-01-11","text":"<ul> <li>Improve display of Microsoft Teams notifications</li> </ul>"},{"location":"CHANGELOG/#4240-2024-01-09","title":"[4.24.0] 2024-01-09","text":"<ul> <li>Add generic ticketing provider, that can identify any ticket references using:<ul> <li>GENERIC_TICKETING_PROVIDER_REGEX (Example for EasyVista: <code>([R|I][0-9]+-[0-9]+)</code>)</li> <li>GENERIC_TICKETING_PROVIDER_URL_BUILDER (Example for EasyVista: <code>https://instance.easyvista.com/index.php?ticket={REF}</code>)</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#4233-2023-12-28","title":"[4.23.3] 2023-12-28","text":"<ul> <li>hardis:org:purge:flow: Ignore managed flows - Fixes #532</li> <li>hardis:work:new prevent parenthesis in branch name - Fixes #481</li> </ul>"},{"location":"CHANGELOG/#4232-2023-12-25","title":"[4.23.2] 2023-12-25","text":"<ul> <li>Catch errors when a JIRA comment has not been posted</li> <li>Simplify package-no-overwrite.xml management logs</li> </ul>"},{"location":"CHANGELOG/#4231-2023-12-25","title":"[4.23.1] 2023-12-25","text":"<ul> <li>Handle case when tickets have no content</li> </ul>"},{"location":"CHANGELOG/#4230-2023-12-25","title":"[4.23.0] 2023-12-25","text":"<ul> <li>Use jira-client package instead of jira.js to be compliant not only with JIRA Cloud, but also with Jira on-premise</li> <li>Improve delta logs</li> </ul>"},{"location":"CHANGELOG/#4220-2023-12-24","title":"[4.22.0] 2023-12-24","text":"<ul> <li>Add more info in pull requests comments<ul> <li>Commits summary</li> <li>Jira tickets</li> <li>Manual Actions</li> </ul> </li> <li>Integration with JIRA<ul> <li>Collect tickets info JIRA server</li> <li>Post comment on tickets once they are deployed</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#4216-2023-12-22","title":"[4.21.6] 2023-12-22","text":"<ul> <li>New task: Ask confirmation before updating selected sandbox</li> <li>Deployment tips<ul> <li>Visibility is not allowed for type</li> </ul> </li> <li>Audit trail, ignore more events<ul> <li>Holidays: holiday_insert</li> <li>loginasgrantedtopartnerbt</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#4215-2023-12-14","title":"[4.21.5] 2023-12-14","text":"<ul> <li>hardis:org:diagnose:audittrail<ul> <li>Display user name in logs &amp; notifications</li> <li>Add new excluded actions: changedemail, changedsenderemail, queueMembership, enableSIQUserNonEAC</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#4214-2023-12-12","title":"[4.21.4] 2023-12-12","text":"<ul> <li>Fix the output column in the metadata status report to distinguish between inactive flows and validation rules identified in the source</li> </ul>"},{"location":"CHANGELOG/#4213-2023-12-08","title":"[4.21.3] 2023-12-08","text":"<ul> <li>Add more variables in default azure-pipelines.yml monitoring</li> <li>Fix output file name of inactive metadatas audit</li> </ul>"},{"location":"CHANGELOG/#4212-2023-12-08","title":"[4.21.2] 2023-12-08","text":"<ul> <li>Downgrade base docker image to alpine:3.18</li> </ul>"},{"location":"CHANGELOG/#4211-2023-12-08","title":"[4.21.1] 2023-12-08","text":"<ul> <li>Update Azure Pipelines workflows to add more variables (+ error message giving this list of variables)</li> <li>Fix notifs from Azure when spaces in url</li> <li>Fix monitoring job on Azure</li> <li>Add link to troubleshooting page if backup fails</li> <li>Handle notification message when there is no apex in the project</li> <li>Do not write report log when there are no differences during monitoring backup step</li> <li>Do not try to post PR comments if not in check deploy job</li> <li>Check unused licenses: fix crash when no permission set group assignments</li> <li>Fix URL to Azure Pull Requests</li> <li>Fix display name of PR author on Azure</li> </ul>"},{"location":"CHANGELOG/#4210-2023-12-06","title":"[4.21.0] 2023-12-06","text":"<ul> <li>hardis:lint:access: Add feature in access command to verify if an object permission exist twice or more in the same permission set</li> <li>hardis:org:monitor:backup: Allow to exclude more metadata types using env variable MONITORING_BACKUP_SKIP_METADATA_TYPES (example: `MONITORING_BACKUP_SKIP_METADATA_TYPES=CustomLabel,StaticResource,Translation`)</li> <li>When prompt for login, Suggest custom login URL as first choice by default</li> <li>CICD: Update default gitlab-ci-config.yml</li> <li>Configure Org CI Auth: Do not prevent to use main or master as production branch</li> </ul>"},{"location":"CHANGELOG/#4201-2023-12-04","title":"[4.20.1] 2023-12-04","text":"<ul> <li>Handle errors while calling monitoring commands</li> <li>Increase jsforce Bulk API Timeout (60 seconds)</li> <li>Set default Bulk Query retries to 3 attempts</li> </ul>"},{"location":"CHANGELOG/#4200-2023-12-04","title":"[4.20.0] 2023-12-04","text":"<ul> <li>Add feature in metadatastatus command to verify if a validation rule is inactive in the source</li> <li>hardis:lint:metadatastatus<ul> <li>Check inactive validation rules</li> <li>Add js documentation</li> </ul> </li> <li>Monitoring: Fix crash when a package name contains a slash</li> </ul>"},{"location":"CHANGELOG/#4191-2023-12-03","title":"[4.19.1] 2023-12-03","text":"<ul> <li>Output CSV mirror XLS files reports in a xls folder for easier browsing</li> <li>hardis:org:diagnose:unusedlicenses<ul> <li>Add more Profile &amp; Permission Set Licenses relationships</li> <li>Handle special cases where license is not stored on the permission set, like Sales User !</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#4190-2023-12-02","title":"[4.19.0] 2023-12-02","text":"<ul> <li>New command sfdx hardis:org:diagnose:unusedlicenses to detect unused Permission Set Licenses (that you pay for anyway !)</li> </ul>"},{"location":"CHANGELOG/#4183-2023-11-29","title":"[4.18.3] 2023-11-29","text":"<ul> <li>Improve test cases notification</li> <li>Enhance monitoring documentation with more descriptions and screenshots</li> </ul>"},{"location":"CHANGELOG/#4182-2023-11-29","title":"[4.18.2] 2023-11-29","text":"<ul> <li>hardis:work:save enhancements<ul> <li>Display more output during cleaning jobs</li> <li>Keep userPermissions in Profiles when they are defined to <code>false</code></li> </ul> </li> </ul>"},{"location":"CHANGELOG/#4181-2023-11-29","title":"[4.18.1] 2023-11-29","text":"<ul> <li>Improve backup notifications display</li> </ul>"},{"location":"CHANGELOG/#4180-2023-11-29","title":"[4.18.0] 2023-11-29","text":"<ul> <li>Delta deployments is no more beta but Generally available</li> <li>Org Monitoring is no more beta but Generally available</li> <li>Generate CSV reports also in XSLX format for easier opening</li> </ul>"},{"location":"CHANGELOG/#4171-2023-11-28","title":"[4.17.1] 2023-11-28","text":"<ul> <li>Generate CSV output for hardis:org:monitor:backup</li> <li>Refactor git detection of created/updated/deleted files</li> </ul>"},{"location":"CHANGELOG/#4170-2023-11-28","title":"[4.17.0] 2023-11-28","text":"<ul> <li>hardis:org:backup: Monitor installed packages</li> <li>hardis:org:diagnose:audittrail: Add more ignored events<ul> <li>Email Administration: dkimRotationSuccessful</li> <li>Manage Users: PermSetGroupAssign</li> <li>Manage Users: PermSetGroupUnassign</li> </ul> </li> <li>Complete factorization of notification related methods</li> <li>Do not remove applicationVisibilities and recordTypeVisibilities from Profiles if they are defined to false (allow to hide applications)</li> </ul>"},{"location":"CHANGELOG/#4161-2023-11-27","title":"[4.16.1] 2023-11-27","text":"<ul> <li>Core: Factorize CSV generation</li> </ul>"},{"location":"CHANGELOG/#4160-2023-11-27","title":"[4.16.0] 2023-11-27","text":"<ul> <li>Allow to run commands but disable notifications, using NOTIFICATIONS_DISABLE env var or notificationsDisable .sfdx-hardis.yml property.</li> <li>Update JSON schema to add <code>notificationsDisable</code> and <code>monitoringDisable</code> properties</li> </ul>"},{"location":"CHANGELOG/#4151-2023-11-26","title":"[4.15.1] 2023-11-26","text":"<ul> <li>Improve notifs display with hardis:lint:access</li> </ul>"},{"location":"CHANGELOG/#4150-2023-11-24","title":"[4.15.0] 2023-11-24","text":"<ul> <li>Allow to disable not monitoring checks using monitoringDisable config file property, or MONITORING_DISABLE env var</li> <li>Add new feature to identify custom fields without description<ul> <li>hardis:lint:missingattributes : New command to identify custom field without description</li> </ul> </li> <li>Add new feature to identify custom metadata (flows) inactive in project<ul> <li>hardis:lint:metadatastatus : New command to identify custom metadata (Labels and custom permissions) not used in source code</li> </ul> </li> <li>Rework generate csv file : generateReportPath and generateCsvFile</li> <li>Update monitoring and slack documentation</li> <li>Fix slack, teams &amp; Azure notifications</li> </ul>"},{"location":"CHANGELOG/#4140-2023-11-23","title":"[4.14.0] 2023-11-23","text":"<ul> <li>Add new feature to identify custom metadata (Labels and custom permissions) not used in source code</li> <li>hardis:lint:unusedmetadata : New command to identify custom metadata (Labels and custom permissions) not used in source code</li> <li>Add two function getNotificationButtons and getBranchMarkdown in notifUtils.ts class to factorize code</li> <li>Video explaining how to setup sfdx-hardis monitoring</li> <li>Improve notifications display of lists</li> </ul>"},{"location":"CHANGELOG/#4134-2023-11-22","title":"[4.13.4] 2023-11-22","text":"<ul> <li>Upgrade ms-teams-webhook library so it works again !</li> <li>hardis:org:diagnose:audittrail: Add changedmanager to not suspect setup actions</li> </ul>"},{"location":"CHANGELOG/#4132-2023-11-21","title":"[4.13.2] 2023-11-21","text":"<ul> <li>hardis:lint:access: Do not display empty metadata types in notification.</li> <li>hardis:work:new: Improve prompt messages when asked if you want to refresh your sandbox</li> </ul>"},{"location":"CHANGELOG/#4131-2023-11-21","title":"[4.13.1] 2023-11-21","text":"<ul> <li>hardis:lint:access<ul> <li>Exclude custom settings, custom metadata and data cloud from fields access check</li> </ul> </li> <li>hardis:org:diagnose:audittrail<ul> <li>Add changedUserEmailVerifiedStatusUnverified and useremailchangesent to not suspect setup actions</li> </ul> </li> <li>Output info in case Ms Teams notification failed to be sent</li> </ul>"},{"location":"CHANGELOG/#4130-2023-11-19","title":"[4.13.0] 2023-11-19","text":"<ul> <li>Monitoring<ul> <li>Display package.xml content in logs when backup failed</li> <li>Update default package-skip-items.xml</li> <li>Call hardis:lint:access by default</li> <li>Handle empty sections</li> </ul> </li> <li>hardis:org:diagnose:audittrail enhancements:<ul> <li>Add PerSetUnassign in not suspect monitored actions in Setup Audit Trail</li> <li>Allow to append more allowed Setup Audit Trail sections &amp; actions using <code>.sfdx-hardis.yml</code> property monitoringAllowedSectionsActions</li> </ul> </li> <li>hardis:lint:access enhancements:<ul> <li>Exclude required fields and MasterDetails, that can not be defined on Permission Sets</li> <li>Output report file</li> <li>Send slack notification</li> <li>Add it by default in the monitoring commands</li> </ul> </li> <li>Doc<ul> <li>Update contributing infos (use <code>sf plugins link</code>)</li> </ul> </li> <li>hardis:files:export : Make the command compliant with Email attachments</li> </ul>"},{"location":"CHANGELOG/#4122-2023-11-15","title":"[4.12.2] 2023-11-15","text":"<ul> <li>Add user prompts for setup audit trail monitoring in interactive mode</li> </ul>"},{"location":"CHANGELOG/#4121-2023-11-15","title":"[4.12.1] 2023-11-15","text":"<ul> <li>Allow to exclude more usernames from monitoring using .sfdx-hardis.yml property monitoringExcludeUsernames</li> </ul>"},{"location":"CHANGELOG/#4120-2023-11-14","title":"[4.12.0] 2023-11-14","text":"<ul> <li>New command sfdx hardis:org:diagnose:audittrail to detect suspect actions in major orgs<ul> <li>Run by default in org monitoring</li> </ul> </li> <li>Fix notifications bulletpoints</li> <li>Fix Gitlab provider token collections when in monitoring mode</li> </ul>"},{"location":"CHANGELOG/#4110-2023-11-14","title":"[4.11.0] 2023-11-14","text":"<ul> <li>If QuickDeploy failed, by default do not use delta for a deployment after a merge between a minor and a major branch</li> <li>Allow to tweak delta deployments configuration (but it's really better to use default opinionated default config !)</li> </ul>"},{"location":"CHANGELOG/#4103-2023-11-12","title":"[4.10.3] 2023-11-12","text":"<ul> <li>Allow to configure monitoring on deployment repositories (Fix #477)</li> <li>Forbid to configure CI authentication on main or master branch</li> <li>Do not send legacy API notifications when there are no issues (Fix #478)</li> <li>Upgrade dependencies</li> </ul>"},{"location":"CHANGELOG/#4102-2023-11-07","title":"[4.10.2] 2023-11-07","text":"<ul> <li>If you want to force the use full deployment on a delta project Pull Request/ Merge Request, add nodelta in your latest commit title or text.</li> <li>Display FULL / DELTA / Quick Deploy info at the bottom of the logs.</li> <li>sfdx hardis:org:retrieve:packageconfig: Do not replace Ids when updating the .sfdx-hardis.yml list of packages using packages listed from an org</li> </ul>"},{"location":"CHANGELOG/#4101-2023-11-06","title":"[4.10.1] 2023-11-06","text":"<ul> <li>Improve delta display in logs</li> <li>Display Quick Deploy icon in slack notifications</li> <li>Update Azure Pipelines default pipelines for delta deployments compliance</li> <li>Update slack integration documentation</li> <li>Add tutorials for authentication configuration on CI/CD servers</li> </ul>"},{"location":"CHANGELOG/#410o-2023-11-04","title":"[4.10.O] 2023-11-04","text":"<ul> <li>Allow to deploy in delta during PR checks between minor and major branches<ul> <li>To activate it, define <code>useDeltaDeployment: true</code> in <code>.sfdx-hardis.yml</code>, or set env variable USE_DELTA_DEPLOYMENT with value <code>true</code></li> <li>Make sure your GitHub, Gitlab, Azure or Bitbucket yaml workflows are up to date</li> </ul> </li> <li>Overwrite management: Rename packageDeployOnce.xml into package-no-overwrite.xml (compatibility with packageDeployOnce.xml file name is kept)</li> </ul>"},{"location":"CHANGELOG/#492-2023-10-31","title":"[4.9.2] 2023-10-31","text":"<ul> <li>Improve GitHub monitoring Workflow</li> <li>Enhance monitoring documentation</li> </ul>"},{"location":"CHANGELOG/#491-2023-10-31","title":"[4.9.1] 2023-10-31","text":"<ul> <li>New deployment error tips:<ul> <li>Invalid custom summary formula definition</li> </ul> </li> <li>Add artifacts config on bitbucket-pipelines.yml</li> <li>Add more comments in Monitoring workflows</li> </ul>"},{"location":"CHANGELOG/#490-2023-10-30","title":"[4.9.0] 2023-10-30","text":"<ul> <li>Refactor Monitoring configuration and execution (beta)<ul> <li>If you already have a monitoring v1 repository, deprecate it and create a new one with the new monitoring setup and pipelines</li> <li>Send slack notifications<ul> <li>Latest updates detected in org</li> <li>Failing apex tests, or insufficient code coverage</li> <li>Deprecated API calls detected</li> </ul> </li> <li>Full setup documentation<ul> <li>GitHub Actions</li> <li>Gitlab CI</li> <li>Azure Pipelines</li> <li>Bitbucket Pipelines</li> </ul> </li> <li>Totally rewritten command sfdx hardis:org:configure:monitoring</li> <li>New command sfdx hardis:org:monitor:backup</li> <li>New command sfdx hardis:org:monitor:all</li> </ul> </li> <li>Simplify <code>sfdx hardis:project:configure:auth</code> (Configure Org CI Authentication)</li> <li>Disable auto-update for .gitignore &amp; .forceignore</li> <li>Improve documentation related to pull and commit</li> </ul>"},{"location":"CHANGELOG/#481-2023-10-28","title":"[4.8.1] 2023-10-28","text":"<ul> <li>Catch \"Cannot start the OAuth redirect server on port 1717\" and give instructions to user to kill the process</li> </ul>"},{"location":"CHANGELOG/#480-2023-10-25","title":"[4.8.0] 2023-10-25","text":"<ul> <li>Allow to use Device login for Code Builder compatibility</li> <li>New option to clear cache if an authenticated org does not appear in the choices</li> </ul>"},{"location":"CHANGELOG/#470-2023-10-24","title":"[4.7.0] 2023-10-24","text":"<ul> <li>hardis:org:files:export: New configuration available to export files: outputFileNameFormat, with available values:<ul> <li>title (default)</li> <li>title_id</li> <li>id_title</li> <li>id</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#466-2023-10-20","title":"[4.6.6] 2023-10-20","text":"<ul> <li>Fix crash when converting orgCoverage to string</li> </ul>"},{"location":"CHANGELOG/#465-2023-10-17","title":"[4.6.5] 2023-10-17","text":"<ul> <li>Do not use direct call to jsforce dependency to avoid crash ! ( related to https://github.com/forcedotcom/cli/issues/2508#issuecomment-1760274510 )</li> <li>Update documentation</li> <li>Update comparative table in doc</li> </ul>"},{"location":"CHANGELOG/#464-2023-09-28","title":"[4.6.4] 2023-09-28","text":"<ul> <li>hardis:work:save : Fix issue when there is an empty commit because of pre-commit hooks</li> </ul>"},{"location":"CHANGELOG/#463-2023-09-27","title":"[4.6.3] 2023-09-27","text":"<ul> <li>Add installation video tutorial: https://www.youtube.com/watch?v=LA8m-t7CjHA</li> </ul>"},{"location":"CHANGELOG/#462-2023-09-26","title":"[4.6.2] 2023-09-26","text":"<ul> <li>Fix return code for wrapper commands force:source:deploy, force:source:push and force:mdapi:deploy</li> <li>Fix --skipauth not taken in account with @salesforce/cli</li> <li>Fixed PR coverage to use float over string</li> </ul>"},{"location":"CHANGELOG/#461-2023-09-26","title":"[4.6.1] 2023-09-26","text":"<ul> <li>Fix auth issue with force:source &amp; force:mdapi wrapper sfdx-hardis commands</li> </ul>"},{"location":"CHANGELOG/#460-2023-09-20","title":"[4.6.0] 2023-09-20","text":"<ul> <li> <p>sfdx-hardis &amp; Slack Integration</p> <ul> <li>Easy configuration</li> <li>Deployment notifications to a common channel, and also to git branch dedicated channel</li> </ul> </li> </ul> <ul> <li> <p>Native BitBucket CI/CD Pipeline for PR deployment checks and deployments to major orgs after merge</p> <ul> <li>PR comments are not implemented yet but BitBucket can already be used for production</li> </ul> </li> </ul> <ul> <li> <p>hardis:project:deploy:dx enhancements:</p> <ul> <li>Added new option --testlevel RunRepositoryTests which will dynamically detect all GIT repository test classes and runs the deployment with found tests. This will speed up the validation/deployment on cases where GIT repository module contains subset of all tests found in the org</li> <li>Added --runtests support in order to pass certain APEX test classes when --testlevel RunSpecifiedTests is used</li> </ul> </li> </ul> <ul> <li>Embed Dreamforce 23 slides in documentation</li> </ul>"},{"location":"CHANGELOG/#451-2023-09-11","title":"[4.5.1] 2023-09-11","text":"<ul> <li>GitHub Integration: Fix Quick Deploy on Pull Requests</li> </ul>"},{"location":"CHANGELOG/#450-2023-09-11","title":"[4.5.0] 2023-09-11","text":"<ul> <li>GitHub Integration: Implement automated comments &amp; Quick Deploy on Pull Requests</li> </ul>"},{"location":"CHANGELOG/#440-2023-09-10","title":"[4.4.0] 2023-09-10","text":"<ul> <li>Make sfdx-hardis CI/CD Pipelines natively compliant with GitHub Actions , by @legetz</li> <li>Create sfdx project: Change defaut first major branch name to <code>integration</code> (it was previously <code>develop</code>)</li> <li>Update default API version to 58.0</li> <li>Fix bug when user email is input the first time</li> </ul>"},{"location":"CHANGELOG/#432-2023-09-08","title":"[4.3.2] 2023-09-08","text":"<ul> <li>Updates new task, commit &amp; save task documentation &amp; screenshots</li> </ul>"},{"location":"CHANGELOG/#431-2023-09-07","title":"[4.3.1] 2023-09-07","text":"<ul> <li>Improve message when deploying metadata to org from local sfdx-hardis</li> <li>Improve documentation to handle merge requests and display links at the end of hardis:work:save</li> </ul>"},{"location":"CHANGELOG/#430-2023-09-05","title":"[4.3.0] 2023-09-05","text":"<ul> <li>Back to normal since https://github.com/forcedotcom/cli/issues/2445 is fixed</li> </ul>"},{"location":"CHANGELOG/#425-2023-09-05","title":"[4.2.5] 2023-09-05","text":"<ul> <li>Downgrade to sfdx-cli until https://github.com/forcedotcom/cli/issues/2445 is solved.</li> </ul>"},{"location":"CHANGELOG/#424-2023-09-05","title":"[4.2.4] 2023-09-05","text":"<ul> <li>Downgrade @salesforce/plugin-deploy-retrieve to v1.17.6 as workaround for SF cli bug https://github.com/forcedotcom/cli/issues/2445</li> </ul>"},{"location":"CHANGELOG/#423-2023-09-04","title":"[4.2.3] 2023-09-04","text":"<ul> <li>Fix issues with Org monitoring when there are issues with Legacy API</li> </ul>"},{"location":"CHANGELOG/#422-2023-09-01","title":"[4.2.2] 2023-09-01","text":"<ul> <li>Fix upgrade warning message that should not appear when there is no upgrade to perform (detected by @mamasse19)</li> </ul>"},{"location":"CHANGELOG/#421-2023-08-30","title":"[4.2.1] 2023-08-30","text":"<ul> <li>Fix issue in sfdx commands wrapping following the use of @salesforce/cli</li> <li>Config auth: phrases in bold when needing to relaunch the same command after org selection</li> </ul>"},{"location":"CHANGELOG/#420-2023-08-30","title":"[4.2.0] 2023-08-30","text":"<ul> <li>Simplify UX of hardis:project:configure:auth</li> <li>Factorize prompting of email</li> <li>Expire sfdx-hardis connected app token after 3h</li> <li>Update documentation to add workaround in case there is a crash when retrieving all sources when initializing a DX project from an existing org</li> <li>Add output to explain how to not use QuickDeploy if not wanted</li> <li>Update Quick Deploy documentation</li> </ul>"},{"location":"CHANGELOG/#412-2023-08-24","title":"[4.1.2] 2023-08-24","text":"<ul> <li>When there is a crash in forceinstalled:list , do not crash but return empty array and display an error message</li> </ul>"},{"location":"CHANGELOG/#411-2023-08-23","title":"[4.1.1] 2023-08-23","text":"<ul> <li>Improve error message when Git Provider not available</li> <li>Update default azure-pipelines-deployment.yml to add mandatory variables for QuickDeploy</li> </ul> <pre><code>SYSTEM_ACCESSTOKEN: $(System.AccessToken)\nCI_SFDX_HARDIS_AZURE_TOKEN: $(System.AccessToken)\nSYSTEM_COLLECTIONURI: $(System.CollectionUri)\nBUILD_REPOSITORY_ID: $(Build.Repository.ID)\n</code></pre>"},{"location":"CHANGELOG/#410-2023-08-22","title":"[4.1.0] 2023-08-22","text":"<ul> <li>Manage QuickDeploy when available (disable by defining env var <code>SFDX_HARDIS_QUICK_DEPLOY=false</code>)</li> </ul>"},{"location":"CHANGELOG/#401-2023-08-18","title":"[4.0.1] 2023-08-18","text":"<p>BREAKING CHANGE: If you are not using sfdx-hardis docker images, you need to manually update your CI/CD pipelines scripts using sfdx-hardis (gitlab-ci.yml, azure-pipelines.yml...) to:</p> <ul> <li>replace <code>sfdx-cli</code> by <code>@salesforce/cli</code></li> <li>Add <code>sf plugins install @salesforce/plugin-packaging</code> just after <code>npm install @salesforce/cli --global</code></li> </ul> <p>Other upgrades</p> <ul> <li>Upgrade CI/CD scripts and sfdx-hardis docker images from sfdx-cli to @salesforce/cli (sfdx commands remain called in background), and add <code>@salesforce/plugin-packaging</code> by default</li> <li>Now also release sfdx-hardis images on GitHub Packages (ghcr.io)</li> <li>Internal CI refactorization<ul> <li>Secure releases with GitHub Actions permissions &amp; environments</li> <li>Switch to official docker build &amp; push action</li> <li>Upgrade MegaLinter</li> <li>Upgrade npm dependencies</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#3194-2023-07-18","title":"[3.19.4] 2023-07-18","text":"<ul> <li>Add confirmation before resetting a git branch from VsCode command \"Reset selected list of items to merge\" (from an original idea of @derroman)</li> </ul>"},{"location":"CHANGELOG/#3193-2023-07-10","title":"[3.19.3] 2023-07-10","text":"<ul> <li>Allow to disable red colors for force:source:deploy output using env variable SFDX_HARDIS_DEPLOY_ERR_COLORS=false</li> </ul>"},{"location":"CHANGELOG/#3192-2023-07-06","title":"[3.19.2] 2023-07-06","text":"<ul> <li>Add packaging in online doc menu</li> </ul>"},{"location":"CHANGELOG/#3191-2023-07-05","title":"[3.19.1] 2023-07-05","text":"<ul> <li>Add Hotfix management (BUILD vs RUN) in CI/CD documentation</li> <li>Add Packaging &amp; package version instructions in documentation</li> </ul>"},{"location":"CHANGELOG/#3190-2023-07-03","title":"[3.19.0] 2023-07-03","text":"<ul> <li>Monitoring: Do not exclude custom fields on managed objects   -ex: Remove <code>Ns__Object__c.Ns__Field__c</code>, but keep <code>Ns__Object__c.Field__c</code></li> </ul>"},{"location":"CHANGELOG/#3181-2023-06-13","title":"[3.18.1] 2023-06-13","text":"<ul> <li>QuickFix hardis:work:save when branch has not been created on the computer</li> </ul>"},{"location":"CHANGELOG/#3180-2023-06-07","title":"[3.18.0] 2023-06-07","text":"<ul> <li>Clean entitlement items, by @yamioliva in https://github.com/hardisgroupcom/sfdx-hardis/pull/381</li> </ul>"},{"location":"CHANGELOG/#3170-2022-05-30","title":"[3.17.0] 2022-05-30","text":"<ul> <li>New command hardis:org:generate:packagexmlfull to generate the full package.xml of a selected Salesforce org</li> </ul>"},{"location":"CHANGELOG/#3161-2022-05-29","title":"[3.16.1] 2022-05-29","text":"<ul> <li>Also remove standard fields when running hardis:project:clean:standarditems</li> <li>New Deployment tips<ul> <li>Wrong api Version of a Metadata</li> <li>Unknown user</li> </ul> </li> <li>Upgrade to MegaLinter v7</li> </ul>"},{"location":"CHANGELOG/#3160-2022-05-24","title":"[3.16.0] 2022-05-24","text":"<ul> <li>New ENV variables to override default wait on retrieve/deploy/test commands<ul> <li>SFDX_RETRIEVE_WAIT_MINUTES</li> <li>SFDX_DEPLOY_WAIT_MINUTES</li> <li>SFDX_TEST_WAIT_MINUTES</li> </ul> </li> <li>Update default .forceignore content</li> </ul>"},{"location":"CHANGELOG/#3150-2022-05-11","title":"[3.15.0] 2022-05-11","text":"<ul> <li>Allow to define property availableProjects so when user clicks on New task (hardis:work:new), he/she is asked to select a project, that will be used to build the new git branch name</li> <li>When creating new task, store the target branch so it is not prompted again when waiting to save/publish the task.</li> </ul>"},{"location":"CHANGELOG/#3142-2022-05-03","title":"[3.14.2] 2022-05-03","text":"<ul> <li>More explicit text to ask user if he/she wants to update its selected sandbox while creating a new task</li> <li>Do not ask to change default target branch if there are multiple available branches</li> </ul>"},{"location":"CHANGELOG/#3141-2022-04-19","title":"[3.14.1] 2022-04-19","text":"<ul> <li>Allow to override the default deployment wait time (60) using variable SFDX_DEPLOY_WAIT_MINUTES</li> <li>Update JSON schema to add customOrgColors</li> </ul>"},{"location":"CHANGELOG/#3140-2022-04-14","title":"[3.14.0] 2022-04-14","text":"<ul> <li>Fix breaking change of sfdx-git-delta (many thanks @scolladon !)</li> <li>Deploy tips<ul> <li>Invalid report type</li> <li>Missing report</li> <li>Update missing email template message</li> </ul> </li> <li>Add more space between error lines in PR/MR comments</li> <li>Upgrade xml2js dependency</li> <li>Update call to MegaLinter in Azure integrations</li> </ul>"},{"location":"CHANGELOG/#3131-2022-04-12","title":"[3.13.1] 2022-04-12","text":"<ul> <li>Fix missing sfdx-git-delta in Docker image</li> </ul>"},{"location":"CHANGELOG/#3130-2022-04-06","title":"[3.13.0] 2022-04-06","text":"<ul> <li>Change defaut package install mode to AdminsOnly</li> <li>When minimizing Profiles, do not remove the personAccountDefault=true elements</li> <li>Add new deploy tip: Error parsing file</li> </ul>"},{"location":"CHANGELOG/#3123-2022-04-04","title":"[3.12.3] 2022-04-04","text":"<ul> <li>Do not add EmailTemplate and Flows as separate items in deploymentPlan, as metadata API now can handle their deployment with the rest of the sources</li> <li>Add new deployTip: Missing multi-currency field</li> <li>Update label when creating a new task using an existing sandbox</li> </ul>"},{"location":"CHANGELOG/#3122-2022-03-30","title":"[3.12.2] 2022-03-30","text":"<ul> <li>New deployment error tips<ul> <li>SortOrder must be in sequential order from 1. (Duplicate Rules issue)</li> <li>Invalid field:ACCOUNT.NAME in related list:RelatedContactAccountRelationList</li> </ul> </li> <li>Add more matchers for duplicate detector</li> </ul>"},{"location":"CHANGELOG/#3121-2022-03-29","title":"[3.12.1] 2022-03-29","text":"<ul> <li>Fix false positive error in deployment job when there is no related Pull/Merge request</li> </ul>"},{"location":"CHANGELOG/#3120-2022-03-23","title":"[3.12.0] 2022-03-23","text":"<ul> <li>Integration with Azure Pipelines Pull Request threads</li> <li>hardis:work:new: Allow to select no org even of sandbox or scratch is forced on the project using config property allowedOrgTypes</li> <li>Doc: rename User Guide into Contributor Guide</li> </ul>"},{"location":"CHANGELOG/#3111-2022-03-20","title":"[3.11.1] 2022-03-20","text":"<ul> <li>Better fix for root path issues (internal error)</li> </ul>"},{"location":"CHANGELOG/#3110-2022-03-20","title":"[3.11.0] 2022-03-20","text":"<ul> <li>Fix root path issues (internal error)</li> </ul>"},{"location":"CHANGELOG/#3102-2022-03-16","title":"[3.10.2] 2022-03-16","text":"<ul> <li>Fix sandbox check when calling hardis:source:push</li> </ul>"},{"location":"CHANGELOG/#3101-2022-03-15","title":"[3.10.1] 2022-03-15","text":"<ul> <li>Quick fix Gitlab integration when there is no MR associated to a deployment</li> </ul>"},{"location":"CHANGELOG/#3100-2022-03-15","title":"[3.10.0] 2022-03-15","text":"<ul> <li>Post a Gitlab Merge Request note when checking a deployment (beta)<ul> <li>Deployment errors with resolution tips</li> <li>Failing test classes</li> <li>Code coverage</li> </ul> </li> <li>Do not remove then restore lookup filters when source:push on a source-tracked sandbox</li> <li>Catch and display errors when caused by internet connection issue</li> </ul>"},{"location":"CHANGELOG/#392-2022-03-09","title":"[3.9.2] 2022-03-09","text":"<ul> <li>Update deploy tips for error Unknown user permission: SendExternalEmailAvailable</li> </ul>"},{"location":"CHANGELOG/#391-2022-03-08","title":"[3.9.1] 2022-03-08","text":"<ul> <li>Improve logs for false positive after package installation failure</li> <li>Remove useless and scary log after a successful login :)</li> <li>Remove npm cache from Docker image</li> </ul>"},{"location":"CHANGELOG/#390-2022-03-08","title":"[3.9.0] 2022-03-08","text":"<ul> <li>New task with source tracked sandbox:<ul> <li>Do not allow to select a major org for dev or config</li> <li>Open SF org if selected from the already connected list</li> <li>Init packages only if defined in config</li> <li>Enhance labels</li> </ul> </li> <li>Save task: Notify that once the merge request is merged, you must create a new task that will create a new branch</li> <li>Improve login error messages</li> <li>Use latest version of MegaLinter</li> </ul>"},{"location":"CHANGELOG/#380-2022-03-03","title":"[3.8.0] 2022-03-03","text":"<ul> <li>Manage deprecation of force:mdapi:legacy:deploy, replaced by force:mdapi:deploy</li> <li>Update default packageDeployOnce.xml when creating a new project (related to Overwrite management)</li> <li>Update CI/CD documentation<ul> <li>Initialize orgs</li> </ul> </li> <li>Update labels of prompts when creating a new sfdx-hardis project</li> </ul>"},{"location":"CHANGELOG/#371-2022-02-27","title":"[3.7.1] 2022-02-27","text":"<ul> <li>Use tooling API to retrieve ApexLogs for deletion, by @thvd in https://github.com/hardisgroupcom/sfdx-hardis/pull/321</li> </ul>"},{"location":"CHANGELOG/#370-2022-02-27","title":"[3.7.0] 2022-02-27","text":"<ul> <li>Add demo video about configuring authentication between CI and Salesforce orgs</li> <li>Update CI/CD documentation</li> <li>Update branding</li> </ul>"},{"location":"CHANGELOG/#360-2022-02-23","title":"[3.6.0] 2022-02-23","text":"<ul> <li>Add sfdx sources to monitoring for better readability</li> <li>Change example of email addresses for prompts</li> <li>Update CI/CD recommendations in documentation</li> </ul>"},{"location":"CHANGELOG/#350-2022-02-22","title":"[3.5.0] 2022-02-22","text":"<ul> <li>Update default overwrite config (<code>packageDeployOnce.xml</code>)</li> <li>Setup CI: Define default Azure pipelines YML files</li> <li>Fix notification logs for Azure Pipelines</li> </ul>"},{"location":"CHANGELOG/#340-2022-02-21","title":"[3.4.0] 2022-02-21","text":"<ul> <li>Move documentation to https://sfdx-hardis.cloudity.com</li> </ul>"},{"location":"CHANGELOG/#332-2022-02-17","title":"[3.3.2] 2022-02-17","text":"<ul> <li>Fix default monitoring for Azure pipelines</li> <li>Update CI documentation (Azure)</li> </ul>"},{"location":"CHANGELOG/#331-2022-02-16","title":"[3.3.1] 2022-02-16","text":"<ul> <li>Fix check of newer package installed</li> </ul>"},{"location":"CHANGELOG/#330-2022-02-14","title":"[3.3.0] 2022-02-14","text":"<ul> <li>Compliance of monitoring setup with Azure Pipelines</li> <li>hardis:org:retrieve:source:metadata enhancements<ul> <li>new option --includemanaged, disabled by default, to avoid having too many items to retrieve during monitoring job</li> <li>allow to force monitoring additional tasks using env var SFDX_HARDIS_MONITORING set to \"true\"</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#320-2022-02-10","title":"[3.2.0] 2022-02-10","text":"<ul> <li>Fix issue when logging to a new org during command hardis:source:retrieve</li> <li>Implement check of code coverage when calling sfdx hardis:project:deploy:sources:dx --check<ul> <li>75% minimum by default, overridable in property apexTestsMinCoverageOrgWide in .sfdx-hardis.yml, or using env var APEX_TESTS_MIN_COVERAGE_ORG_WIDE</li> </ul> </li> <li>Add --checkcoverage option to wrapper command hardis:source:deploy<ul> <li>Example: <code>sfdx hardis:source:deploy -x manifest/package.xml --wait 60 --ignorewarnings --testlevel RunLocalTests --postdestructivechanges ./manifest/destructiveChanges.xml --targetusername nicolas.vuillamy@cloudity.com --checkonly --checkcoverage --verbose --coverageformatters json-summary</code></li> </ul> </li> </ul>"},{"location":"CHANGELOG/#310-2022-02-07","title":"[3.1.0] 2022-02-07","text":"<ul> <li>Reset local sfdx tracking when reusing a sandbox for a new task</li> </ul>"},{"location":"CHANGELOG/#300-2022-02-07","title":"[3.0.0] 2022-02-07","text":"<ul> <li>Breaking change: SFDX_HARDIS_DEPLOY_IGNORE_SPLIT_PACKAGES is now \"true\" by default. If you want to apply the deploymentPlan in .sfdx-hardis, you need to define variable SFDX_HARDIS_DEPLOY_IGNORE_SPLIT_PACKAGES=\"false\"</li> </ul>"},{"location":"CHANGELOG/#21000-2022-02-07","title":"[2.100.0] 2022-02-07","text":"<ul> <li>hardis:work:new:: When creating a new task and using a source-tracked sandbox, ask user to push sources, assign permission sets and load data to initialize it.</li> <li>Add explicit error message when scratch org creation is caused by a limit reach</li> <li>Update default API version to 56.0</li> <li>Improve labels when prompting to select an org</li> <li>Update CI/CD documentation</li> </ul>"},{"location":"CHANGELOG/#2991-2022-01-31","title":"[2.99.1] 2022-01-31","text":"<ul> <li>Fix <code>hardis:project:clean:hiddenitems</code> when multiple files in the same folder match the same glob pattern</li> <li>Update documentation, fix typos and dead links</li> </ul>"},{"location":"CHANGELOG/#2990-2022-01-30","title":"[2.99.0] 2022-01-30","text":"<ul> <li>Replace prompts library by inquirer, because prompts is buggy</li> <li>Dockerfile: Workaround for https://github.com/forcedotcom/salesforcedx-apex/issues/213 (force:apex:test:run with code coverage crashing on some Gitlab runners with Invalid time value)</li> <li>Allow to override the proposed branch names when calling hardis:work:new, using property branchPrefixChoices</li> <li>hardis:project:clean:hiddenitems: Also clean LWC with hidden content</li> <li>Add yarn in dockerfile</li> </ul>"},{"location":"CHANGELOG/#2981-2022-01-23","title":"[2.98.1] 2022-01-23","text":"<ul> <li>Fix hardis:org:purge:flow when flow prompt selection is <code>all</code></li> </ul>"},{"location":"CHANGELOG/#2980-2022-01-23","title":"[2.98.0] 2022-01-23","text":"<ul> <li>Documentation: Add CI/CD user guide and release manager guide, available at https://sfdx-hardis.cloudity.com/salesforce-ci-cd-home/</li> <li>New .sfdx-hardis.yml config property allowedOrgTypes, allowing to define the type(s) or org that can be used for implementation: (sandbox and/or scratch)</li> </ul>"},{"location":"CHANGELOG/#2973-2022-11-30","title":"[2.97.3] 2022-11-30","text":"<ul> <li>QuickFix System.debug removal</li> </ul>"},{"location":"CHANGELOG/#2972-2022-11-30","title":"[2.97.2] 2022-11-30","text":"<ul> <li>QuickFix</li> </ul>"},{"location":"CHANGELOG/#2971-2022-11-30","title":"[2.97.1] 2022-11-30","text":"<ul> <li>QuickFix hardis:lint:access</li> </ul>"},{"location":"CHANGELOG/#2970-2022-11-30","title":"[2.97.0] 2022-11-30","text":"<ul> <li>New command hardis:lint:access to analyze of items in sources are not present within profiles and/or permission sets</li> </ul>"},{"location":"CHANGELOG/#2961-2022-11-17","title":"[2.96.1] 2022-11-17","text":"<ul> <li>Fix error when assigning already existing PS</li> <li>Update default CI config</li> </ul>"},{"location":"CHANGELOG/#2960-2022-11-09","title":"[2.96.0] 2022-11-09","text":"<ul> <li>Replace <code>sfdx force:package:install</code> with <code>sfdx force:package:beta:install</code></li> <li>Do not cause deployment to fail when a deploying an older managed package version<ul> <li>Instead, deployment will assume the newer version meets the requirement</li> </ul> </li> <li>hardis:scratch:create : Avoid error in case of already existing assignment of PermissionSet SfdxHardisDeferSharingRecalc</li> <li>Update Node.js minimum version to 16.x</li> </ul>"},{"location":"CHANGELOG/#2952-2022-10-19","title":"[2.95.2] 2022-10-19","text":"<ul> <li>Replace use of sfpowerkit by default command <code>sfdx force:source:manifest:create</code></li> <li>Manage cache for listing orgs</li> <li>Update hardisversion:create to allow to<ul> <li>install it later on an org</li> <li>immediately delete it</li> </ul> </li> <li>New command hardis:project:metadata:findduplicates to detect when git messed during an automated merging of conflicts</li> <li>Factorize check of sfdx project existence</li> <li>Fix default gitlab-ci default pipeline</li> <li>Replace supportsDevhubUsername by requiresDevhubUsername in command classes when necessary</li> <li>Add parameters <code>skipauth</code> and <code>websocket</code> on <code>sfdx hardis:project:metadata:duplicate</code></li> <li>Add missing parameter <code>skipauth</code> on <code>sfdx hardis:package:install</code></li> </ul>"},{"location":"CHANGELOG/#2943-2022-09-15","title":"[2.94.3] 2022-09-15","text":"<ul> <li>Automate SSL certificate generation + force:source:deploy replaced by force:source:legacy:deploy</li> </ul>"},{"location":"CHANGELOG/#2942-2022-09-09","title":"[2.94.2] 2022-09-09","text":"<ul> <li>hardis:project:clean:minimizeprofiles: Do not strip tabVisibilities from Profiles</li> </ul>"},{"location":"CHANGELOG/#2941-2022-09-01","title":"[2.94.1] 2022-09-01","text":"<ul> <li>Lock sfpowerkit dependency to 4.2.13 to avoid error caused by deprecation of sfpowerkit:org:build:manifest</li> </ul>"},{"location":"CHANGELOG/#2940-2022-08-31","title":"[2.94.0] 2022-08-31","text":"<ul> <li>Update documentation to initialize scratch org</li> <li>Update JSON schema to add <code>scratchOrgInitApexScripts</code></li> <li>Fix execution of scripts defined in <code>scratchOrgInitApexScripts</code></li> </ul>"},{"location":"CHANGELOG/#2930-2022-08-02","title":"[2.93.0] 2022-08-02","text":"<ul> <li>Fix handling of new sfdx error format so we can again identify deployment tips</li> <li>New deployment tips:<ul> <li>Cannot update a field to a Summary from something else</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2920-2022-07-29","title":"[2.92.0] 2022-07-29","text":"<ul> <li>New command hardis:org:retrieve:source:analytics to retrieve all analytics (CRM Analytics/TCRM) sources</li> <li>New deployment tips (Wave analytics)</li> <li>Fix writePackageXml method when there is not an existing file</li> </ul>"},{"location":"CHANGELOG/#2910-2022-07-15","title":"[2.91.0] 2022-07-15","text":"<ul> <li>Fix issue when force:source command wrappers arguments contain spaces (#269))</li> <li>Upgrade MegaLinter to v6</li> <li>Upgrade yarn dependencies</li> </ul>"},{"location":"CHANGELOG/#2900-2022-06-24","title":"[2.90.0] 2022-06-24","text":"<ul> <li>Events to open generated files when called from VsCode SFDX Hardis</li> <li>New deployTips</li> </ul>"},{"location":"CHANGELOG/#2893-2022-06-21","title":"[2.89.3] 2022-06-21","text":"<ul> <li>Fix exported file extension (#266)</li> </ul>"},{"location":"CHANGELOG/#2892-2022-06-17","title":"[2.89.2] 2022-06-17","text":"<ul> <li>Build full manifest using sfpowerkit excluding <code>ManagedContentTypeBundle</code> because it is not managed by retrieve</li> </ul>"},{"location":"CHANGELOG/#2891-2022-06-16","title":"[2.89.1] 2022-06-16","text":"<ul> <li>Auto-update gitlab-ci.yml only if variable <code>AUTO_UPDATE_GITLAB_CI_YML</code> is set</li> </ul>"},{"location":"CHANGELOG/#2890-2022-06-12","title":"[2.89.0] 2022-06-12","text":"<ul> <li>hardismergexml: New command to merge package.Xml files</li> </ul>"},{"location":"CHANGELOG/#2880-2022-06-11","title":"[2.88.0] 2022-06-11","text":"<ul> <li>hardis:project:clean:systemdebug: New command to comment or remove all System.debug from apex and triggers</li> </ul>"},{"location":"CHANGELOG/#2875-2022-05-18","title":"[2.87.5] 2022-05-18","text":"<ul> <li>toml2csv: Allow <code>hardcoded</code> values for concat</li> <li>Refactor internal CI to use 7.148.3 as recommended version</li> </ul>"},{"location":"CHANGELOG/#2874-2022-05-18","title":"[2.87.4] 2022-05-18","text":"<ul> <li>Fix configure org CI</li> <li>Hide auth info from console logs</li> <li>Fix Bulk Update job not closed</li> </ul>"},{"location":"CHANGELOG/#2873-2022-05-12","title":"[2.87.3] 2022-05-12","text":"<ul> <li>Auto-update <code>.gitlab-ci.yml</code> if a newest version exists</li> </ul>"},{"location":"CHANGELOG/#2872-2022-05-11","title":"[2.87.2] 2022-05-11","text":"<ul> <li>Refactor report directory management</li> </ul>"},{"location":"CHANGELOG/#2871-2022-05-11","title":"[2.87.1] 2022-05-11","text":"<ul> <li>Fix monitoring default pipeline</li> </ul>"},{"location":"CHANGELOG/#2870-2022-05-08","title":"[2.87.0] 2022-05-08","text":"<ul> <li>New command hardis:project:clean:xml allowing to automate the manual cleaning in the XML files using glob pattern and xPath</li> <li>Reorganize work:save command code + add auto mode</li> <li>Call Save command from Retrofit command to update package.xml files and make sure sources have been cleaned</li> </ul>"},{"location":"CHANGELOG/#2861-2022-05-06","title":"[2.86.1] 2022-05-06","text":"<ul> <li>hardis:work:new : Propose to reuse current scratch org when it is not in the local list</li> <li>hardis:work:save : Propose to push git branch on server when it is still untracked</li> </ul>"},{"location":"CHANGELOG/#2860-2022-05-03","title":"[2.86.0] 2022-05-03","text":"<ul> <li>New wrapper command: sfdx hardis:source:retrieve</li> <li>Quickfix toml2csv</li> </ul>"},{"location":"CHANGELOG/#2852-2022-05-02","title":"[2.85.2] 2022-05-02","text":"<ul> <li>Fix toml2csv error log</li> <li>Deployment tips<ul> <li>Allow deployment with pending Apex Jobs</li> <li>Update Can not find folder</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2851-2022-04-27","title":"[2.85.1] 2022-04-27","text":"<ul> <li>Enhance sfdx hardis:org:retrieve:sources:retrofit command + JSON schema updates</li> </ul>"},{"location":"CHANGELOG/#2850-2022-04-27","title":"[2.85.0] 2022-04-27","text":"<ul> <li>Enhance sfdx hardis:org:retrieve:sources:retrofit command</li> <li>Ad deployment tip: Invalid field in related list</li> </ul>"},{"location":"CHANGELOG/#2840-2022-04-27","title":"[2.84.0] 2022-04-27","text":"<ul> <li>Update deployTips: improve unknown custom field message</li> <li>New command sfdx hardis:doc:extract:permsetgroups to generate permission set groups documentation</li> </ul>"},{"location":"CHANGELOG/#2836-2022-04-26","title":"[2.83.6] 2022-04-26","text":"<ul> <li>Fix hardis:work:save who sometimes forgot to ask to push commits</li> </ul>"},{"location":"CHANGELOG/#2835-2022-04-24","title":"[2.83.5] 2022-04-24","text":"<ul> <li>Update deployment tips</li> </ul>"},{"location":"CHANGELOG/#2830-2022-04-20","title":"[2.83.0] 2022-04-20","text":"<ul> <li>New deployment tips:<ul> <li>Not valid sharing model</li> </ul> </li> <li>Improve purge flows for manual users</li> <li>Improve badwords detector</li> <li>Open scratch org when reusing one</li> <li>Hide prompt result when it contains sensitive information</li> </ul>"},{"location":"CHANGELOG/#2822-2022-04-19","title":"[2.82.2] 2022-04-19","text":"<ul> <li>New deployTip: Can not change type due to existing data</li> <li>Do not replace ListView Everything by Mine when we are just simulating deployment</li> </ul>"},{"location":"CHANGELOG/#2821-2022-04-16","title":"[2.82.1] 2022-04-16","text":"<ul> <li>QuickFix platform compatibility for <code>sfdx hardis:org:fix:listviewmine</code></li> </ul>"},{"location":"CHANGELOG/#2820-2022-04-16","title":"[2.82.0] 2022-04-16","text":"<ul> <li>New command <code>sfdx hardis:org:fix:listviewmine</code> as a workaround to force:source:deploy not allowing ListView with scope Mine</li> </ul>"},{"location":"CHANGELOG/#2810-2022-04-15","title":"[2.81.0] 2022-04-15","text":"<ul> <li>New property <code>autoRetrieveWhenPull</code> to always retrieve some sources when calling hardis:source:pull (useful when sfdx tracking forgets some updates)</li> </ul>"},{"location":"CHANGELOG/#2800-2022-04-15","title":"[2.80.0] 2022-04-15","text":"<ul> <li>Simplify and document more hardis:work:new , hardis:work:pull and hardis:work:save</li> <li>Open org in browser when fetched from scratch org pool</li> <li>More deploymentTips</li> <li>Add <code>customPlugins</code> definition in json schema</li> </ul>"},{"location":"CHANGELOG/#2790-2022-04-10","title":"[2.79.0] 2022-04-10","text":"<ul> <li>New property <code>extends</code> in <code>.sfdx-hardis.yml</code>, to allow local config file to extend from remote file</li> <li>Add <code>customCommands</code> definition in json schema</li> </ul>"},{"location":"CHANGELOG/#2784-2022-04-09","title":"[2.78.4] 2022-04-09","text":"<ul> <li>Update documentation</li> </ul>"},{"location":"CHANGELOG/#2783-2022-04-08","title":"[2.78.3] 2022-04-08","text":"<ul> <li>Add a retrofit command to retrieve changes made directly in an org</li> </ul>"},{"location":"CHANGELOG/#2782-2022-04-08","title":"[2.78.2] 2022-04-08","text":"<ul> <li>Fix legacy API command display (#225)</li> </ul>"},{"location":"CHANGELOG/#2781-2022-04-07","title":"[2.78.1] 2022-04-07","text":"<ul> <li>Fix CI &amp; remove docker image with sfdx-cli@stable as it does not exists anymore</li> </ul>"},{"location":"CHANGELOG/#2780-2022-04-07","title":"[2.78.0] 2022-04-07","text":"<ul> <li>New parameter --skipauth on all hardis commands, to allow the auth check when a default username is required (allows advanced users to improve performances)</li> <li>Set user email when fetching a scratch org from scratch org pool</li> </ul>"},{"location":"CHANGELOG/#2772-2022-04-07","title":"[2.77.2] 2022-04-07","text":"<ul> <li>Fix bug when subtracting a package.xml from another</li> </ul>"},{"location":"CHANGELOG/#2771-2022-04-07","title":"[2.77.1] 2022-04-07","text":"<ul> <li>Fix error in packageDeployOnce.xml document (sfdx hardis:project:deploy:sources:dx)</li> </ul>"},{"location":"CHANGELOG/#2770-2022-04-05","title":"[2.77.0] 2022-04-05","text":"<ul> <li>Generate deployment tips documentation</li> <li>hardis:org:user:activateinvalid : new --profiles argument</li> <li>Update MsTeams WebHooks ENV variables<ul> <li>MS_TEAMS_WEBHOOK_URL_CRITICAL</li> <li>MS_TEAMS_WEBHOOK_URL_SEVERE</li> <li>MS_TEAMS_WEBHOOK_URL_WARNING</li> <li>MS_TEAMS_WEBHOOK_URL_INFO</li> </ul> </li> <li>Allow to install packages during deployment check using INSTALL_PACKAGES_DURING_CHECK_DEPLOY=true env variable</li> <li>Enhance prompt org labels</li> </ul>"},{"location":"CHANGELOG/#2762-2022-04-04","title":"[2.76.2] 2022-04-04","text":"<ul> <li>Improve activate invalid users commands (allow to select by profile(s))</li> </ul>"},{"location":"CHANGELOG/#2761-2022-04-04","title":"[2.76.1] 2022-04-04","text":"<ul> <li>Improve activate invalid users commands</li> </ul>"},{"location":"CHANGELOG/#2760-2022-04-03","title":"[2.76.0] 2022-04-03","text":"<ul> <li>New command sfdx hardis:org:user:activateinvalid to activate invalid emails in sandbox</li> <li>Fix CI org authentication in case the default username is not the org that we want to configure</li> <li>Bypass error with force:source:legacy:pull / push</li> <li>hardis:work:save : Propose to manually commit files</li> <li>Fix hardis:org:select alias &amp; user config</li> <li>Colorize command lines in logs</li> <li>Enhance new task with sandbox (not fully stable yet)</li> <li>New deployTips<ul> <li>Please choose a different name</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2750-2022-03-28","title":"[2.75.0] 2022-03-28","text":"<ul> <li>Property <code>availableTargetBranches</code> can be defined in <code>.sfdx-hardis.yml</code> to list the possible target branches for merge requests</li> <li>fix hardis:work:save to propose a git push when the current branch is ahead of origin branch</li> <li>New deployTips<ul> <li>XML item appears more than once</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2742-2022-03-26","title":"[2.74.2] 2022-03-26","text":"<ul> <li>Update legacy API detection labels</li> </ul>"},{"location":"CHANGELOG/#2741-2022-03-25","title":"[2.74.1] 2022-03-25","text":"<ul> <li>Manage crash when retrieving metadatas from CI jobs</li> </ul>"},{"location":"CHANGELOG/#2740-2022-03-24","title":"[2.74.0] 2022-03-24","text":"<ul> <li>Enhance hardis:work:save to request if the files has already been staged and committed</li> <li>Deploy manifest and destructive change in the same sfdx force:source:deploy call thanks to new argument postdestructivechanges</li> <li>More deployTips</li> <li>Improve MsTeams notifications management</li> </ul>"},{"location":"CHANGELOG/#2730-2022-03-21","title":"[2.73.0] 2022-03-21","text":"<ul> <li>Improve tips about how to fix deployments directly within error messages</li> <li>Wrapper commands to display tips in error logs<ul> <li>force:source:deploy can be wrapped using hardis:source:deploy</li> <li>force:source:push can be wrapped using hardis:source:push</li> <li>force:mdapi:deploy can be wrapped using hardis:mdapi:deploy</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2720-2022-03-21","title":"[2.72.0] 2022-03-21","text":"<ul> <li>Include tips about how to fix deployments directly within error messages</li> </ul>"},{"location":"CHANGELOG/#2712-2022-03-17","title":"[2.71.2] 2022-03-17","text":"<ul> <li>Update JSON schema for customCommands (used by VsCode SFDX Hardis)</li> <li>New property for scratch org pool config: maxScratchOrgsNumberToCreateOnce (max number of scratch orgs to create during one CI job)</li> </ul>"},{"location":"CHANGELOG/#2710-2022-03-15","title":"[2.71.0] 2022-03-15","text":"<ul> <li>New command hardis:org:data:delete to manage delete data workspaces of sfdmu</li> <li>New command hardis:scratch:pool:reset to delete all scratch orgs from a scratch orgs pool (like when a new project-scratch-def is delivered)</li> </ul>"},{"location":"CHANGELOG/#2700-2022-03-10","title":"[2.70.0] 2022-03-10","text":"<ul> <li>hardis:org:apex:test : allow command to succeed when no tests are present in the project, useful for new environments initialization</li> </ul>"},{"location":"CHANGELOG/#2690-2022-03-02","title":"[2.69.0] 2022-03-02","text":"<ul> <li>Scratch org pool: add history (fetch,auth) on ActiveScratchOrg devhub record</li> </ul>"},{"location":"CHANGELOG/#2686-2022-02-22","title":"[2.68.6] 2022-02-22","text":"<ul> <li>remove <code>DEPLOY PROGRESS</code> noisy lines from logs</li> </ul>"},{"location":"CHANGELOG/#2685-2022-02-18","title":"[2.68.5] 2022-02-18","text":"<ul> <li>Update mkdocs</li> <li>fix commit of files with spaces</li> </ul>"},{"location":"CHANGELOG/#2684-2022-02-18","title":"[2.68.4] 2022-02-18","text":"<ul> <li>hardisinstall<ul> <li>Add -k, --installationkey CLI param and prompts user for it if not supplied</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2683-2022-02-18","title":"[2.68.3] 2022-02-18","text":"<ul> <li>Fix hardisversion:promote --auto</li> </ul>"},{"location":"CHANGELOG/#2682-2022-02-15","title":"[2.68.2] 2022-02-15","text":"<ul> <li>Fix minimize profiles command</li> </ul>"},{"location":"CHANGELOG/#2681-2022-02-02","title":"[2.68.1] 2022-02-02","text":"<ul> <li>Allow property autoRemoveUserPermissions in .sfdx-hardis.yml to clean profiles</li> <li>toml2csv:<ul> <li>Add concatComposite option for column</li> <li>Add recordType option for column</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2680-2022-01-31","title":"[2.68.0] 2022-01-31","text":"<ul> <li>Do not create log files in the current directory if it is empty</li> <li>More deployTips</li> <li>Clean MDAPI output logs from progression lines</li> <li>Add listViewMine in cleaning references</li> <li>toml2csv updates</li> </ul>"},{"location":"CHANGELOG/#2671-2022-01-20","title":"[2.67.1] 2022-01-20","text":"<ul> <li>Enhance documentation for hardis:scratch:pool:create command</li> <li>Fixes and enhancements on toml2csv command</li> </ul>"},{"location":"CHANGELOG/#2670-2022-01-18","title":"[2.67.0] 2022-01-18","text":"<ul> <li>hardis:misc:toml2csv enhancements (rename and copy files)</li> <li>fix minimizing of profiles</li> <li>new command hardis:project:clean:listview</li> </ul>"},{"location":"CHANGELOG/#2662-2022-01-13","title":"[2.66.2] 2022-01-13","text":"<ul> <li>hardis:misc:toml2csv enhancements</li> </ul>"},{"location":"CHANGELOG/#2661-2022-01-11","title":"[2.66.1] 2022-01-11","text":"<ul> <li>minimizeProfiles: do not remove userPermissions if profile is default Admin profile</li> </ul>"},{"location":"CHANGELOG/#2660-2022-01-07","title":"[2.66.0] 2022-01-07","text":"<ul> <li>Check deployment with metadata project</li> </ul>"},{"location":"CHANGELOG/#2650-2022-01-05","title":"[2.65.0] 2022-01-05","text":"<ul> <li>Fix contribution install by upgrading dependencies</li> <li>Use soqlQuery method everywhere</li> <li>Set devhub alias when available</li> </ul>"},{"location":"CHANGELOG/#2641-2021-12-29","title":"[2.64.1] 2021-12-29","text":"<ul> <li>Update default apiVersion to 53.0</li> <li>Option to not remove empty types when subtracting package.xml</li> </ul>"},{"location":"CHANGELOG/#2640-2021-12-24","title":"[2.64.0] 2021-12-24","text":"<ul> <li>New command hardis:clean:minimizeprofiles</li> <li>New deployTip <code>duplicate-value-platform-action-id-list</code></li> <li>Apply packageDeployOnce.xml and packageDeployOnChange.xml in all contexts</li> <li>Package.xml mixing: fix wildcard <code>&lt;members&gt;*&lt;/members&gt;</code> management</li> <li>List metadatas of target org: complete with what sfpowerkit commands does not return (ListView,CustomLabel)</li> </ul>"},{"location":"CHANGELOG/#2630-2021-12-21","title":"[2.63.0] 2021-12-21","text":"<ul> <li>New event message refreshPlugins (used by VsCodeSFDX Hardis)</li> <li>Display Error message when unable to delete a temporary directory</li> </ul>"},{"location":"CHANGELOG/#2620-2021-12-14","title":"[2.62.0] 2021-12-14","text":"<ul> <li>Fix hardis:work:save crash when rebuilding deploymentPlan</li> <li>Fix XML indentation (#51). Can also be overridden by using env variable <code>SFDX_XML_INDENT</code> (ex: <code>SFDX_INDENT='  '</code>)</li> </ul>"},{"location":"CHANGELOG/#2610-2021-12-02","title":"[2.61.0] 2021-12-02","text":"<ul> <li>Use same XML indentation than Salesforce (#51) (requires also upgrade of sfdx-essentials, using <code>sfdx plugins:install sfdx-essentials</code>)</li> </ul>"},{"location":"CHANGELOG/#2603-2021-11-08","title":"[2.60.3] 2021-11-08","text":"<ul> <li>Fix hardis:source:pull when there are errors</li> </ul>"},{"location":"CHANGELOG/#2602-2021-11-06","title":"[2.60.2] 2021-11-06","text":"<ul> <li>Allow to input URL to use to login</li> </ul>"},{"location":"CHANGELOG/#2601-2021-11-05","title":"[2.60.1] 2021-11-05","text":"<ul> <li>Fix hardis:scratch:pool:view when DevHub authentication is expired</li> </ul>"},{"location":"CHANGELOG/#2600-2021-11-03","title":"[2.60.0] 2021-11-03","text":"<ul> <li>Deployment failure: Tuning of error message + display of direct link to Deployment Status page in console logs</li> <li>When not in CI, prompt for the org to use to simulate deployments</li> </ul>"},{"location":"CHANGELOG/#2590-2021-11-03","title":"[2.59.0] 2021-11-03","text":"<ul> <li>(ALPHA,not really usable yet) Allow to use sandboxes for new task (create from production org, or clone from other sandbox)</li> <li>Fixes about scratch org initialization and JWT auth configuration</li> </ul>"},{"location":"CHANGELOG/#2583-2021-10-23","title":"[2.58.3] 2021-10-23","text":"<ul> <li>hardis:org:files:export: Fix file paths in logs</li> </ul>"},{"location":"CHANGELOG/#2582-2021-10-18","title":"[2.58.2] 2021-10-18","text":"<ul> <li>org:user:freeze : Prevent to freeze all profiles and current user profile</li> </ul>"},{"location":"CHANGELOG/#2581-2021-10-18","title":"[2.58.1] 2021-10-18","text":"<ul> <li>org:retrieve:sources:metadata : Manage locally defined <code>remove-items-package.xml</code> (that can handle wildcard members)</li> </ul>"},{"location":"CHANGELOG/#2580-2021-10-16","title":"[2.58.0] 2021-10-16","text":"<ul> <li>org:retrieve:sources:metadata : Run apex tests and legacy api check if we are in CI and in a repository named with <code>monitoring</code></li> <li>Teams notifications for apex tests and legacy api failure</li> </ul>"},{"location":"CHANGELOG/#2572-2021-10-13","title":"[2.57.2] 2021-10-13","text":"<ul> <li>hardis:org:files:export<ul> <li>Add file extension when missing</li> <li>replace .snote by .txt</li> <li>replace special characters in parent folder name and file name</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2571-2021-10-12","title":"[2.57.1] 2021-10-12","text":"<ul> <li>Retry when BULK API Query returns a timeout</li> <li>hardis:org:files:export<ul> <li>Use node-fetch-retry for direct downloads (retry up to 30 seconds by default)</li> <li>New argument <code>--startchunknumber</code> to start files extraction from a chunk position</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2570-2021-10-11","title":"[2.57.0] 2021-10-11","text":"<ul> <li>Make hardis:org:user:freeze and hardis:org:user:unfreeze can now handle large volume of users, using Bulk API</li> </ul>"},{"location":"CHANGELOG/#2560-2021-10-10","title":"[2.56.0] 2021-10-10","text":"<ul> <li>Update auto-generated documentation to add a commands.md + its link in the menu</li> </ul>"},{"location":"CHANGELOG/#2553-2021-10-05","title":"[2.55.3] 2021-10-05","text":"<ul> <li>When not in CI, disable auto-update of .gitignore and .forceignore files because of a prompt library issue. To enable it, define AUTO_UPDATE env variable to \"true\"</li> </ul>"},{"location":"CHANGELOG/#2552-2021-10-03","title":"[2.55.2] 2021-10-03","text":"<ul> <li>Fix link to https://nicolas.vuillamy.fr/handle-salesforce-api-versions-deprecation-like-a-pro-335065f52238</li> </ul>"},{"location":"CHANGELOG/#2551-2021-10-01","title":"[2.55.1] 2021-10-01","text":"<ul> <li>SFDX_HARDIS_DEBUG_ENV. If set to true, display env vars at startup</li> </ul>"},{"location":"CHANGELOG/#2550-2021-10-01","title":"[2.55.0] 2021-10-01","text":"<ul> <li>Manage env var SFDX_HARDIS_DEPLOY_IGNORE_SPLIT_PACKAGES. If \"true\", package.xmls are not split with deploymentPlan</li> </ul>"},{"location":"CHANGELOG/#2540-2021-09-27","title":"[2.54.0] 2021-09-27","text":"<ul> <li>Allow to override force:org:create waiting time using SCRATCH_ORG_WAIT en variable (default: 15mn)</li> <li>hardis:org:select : new parameter <code>--scratch</code> to allow to list only scratch orgs related to current Dev Hub</li> <li>hardis:org:retrieve:sources:dx2 : New parameter <code>--template</code> to use default package.xml files (ex: <code>wave</code>)</li> <li>Scratch org pool: automatically delete too old ready-to-use scratch orgs</li> <li>Deploy Tips<ul> <li>Wave deployment error</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2531-2021-09-14","title":"[2.53.1] 2021-09-14","text":"<ul> <li>Update Object deployed when configuring scratch org pool (replace Html by LongTextArea)</li> </ul>"},{"location":"CHANGELOG/#2530-2021-09-14","title":"[2.53.0] 2021-09-14","text":"<ul> <li>Additional docker images, to use when stable and latest sfdx-cli versions arr broken<ul> <li>hardisgroupcom/sfdx-hardis:latest-sfdx-recommended</li> <li>hardisgroupcom/sfdx-hardis:beta-sfdx-recommended</li> <li>hardisgroupcom/sfdx-hardis:alpha-sfdx-recommended</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2520-2021-09-14","title":"[2.52.0] 2021-09-14","text":"<ul> <li>New command hardis:project:fix:v53flexipages to fix v53.0 broken ascending compatibility</li> <li>New command hardis:project:audit:duplicatefiles to detect doubling files in wrong sfdx folders</li> </ul>"},{"location":"CHANGELOG/#2516-2021-09-10","title":"[2.51.6] 2021-09-10","text":"<ul> <li>Take in account parameter <code>--ignore-whitespace</code> of sfdx-git-delta for packageOnChange.xml</li> </ul>"},{"location":"CHANGELOG/#2515-2021-09-10","title":"[2.51.5] 2021-09-10","text":"<ul> <li>hardis:org:diagnose:legacyapi: Provide additional report with unique list of ips, hostnames (when available) , and number of calls</li> <li>Fix hardisversion:promote</li> </ul>"},{"location":"CHANGELOG/#2514-2021-09-03","title":"[2.51.4] 2021-09-03","text":"<ul> <li>hardis:org:diagnose:legacyapi: Allow to override default output reportfile with <code>--outputfile</code> argument</li> </ul>"},{"location":"CHANGELOG/#2513-2021-09-02","title":"[2.51.3] 2021-09-02","text":"<ul> <li>Improve authentication log + less cases when launching again the same command can be necessary</li> <li>if you define <code>forceRestDeploy: true</code> in config, <code>restDeploy: false</code> won't be set automatically anymore</li> </ul>"},{"location":"CHANGELOG/#2512-2021-08-31","title":"[2.51.2] 2021-08-31","text":"<ul> <li>Quick fixes hardis:doc:plugin:generate<ul> <li>Fix crash when there are no license &amp; changelog</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2511-2021-08-31","title":"[2.51.1] 2021-08-31","text":"<ul> <li>Quick fixes hardis:doc:plugin:generate<ul> <li>Handle when command.title or command.description is empty</li> <li>Add <code># Commands</code> to the README.md truncate markers</li> </ul> </li> <li>Fix hardis:org:retrieve:sources:dx<ul> <li>Empty temp directories at the beginning of the command</li> <li>Add ForecastingType in the list of ignored metadatas for conversion to sfdx sources</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2510-2021-08-31","title":"[2.51.0] 2021-08-31","text":"<ul> <li>Update hardis:doc:plugin:generate so main README part is displayed on doc index.md</li> </ul>"},{"location":"CHANGELOG/#2500-2021-08-30","title":"[2.50.0] 2021-08-30","text":"<ul> <li>New commands to freeze users before deployment then unfreeze users after deployment<ul> <li>sfdx hardis:org:user:freeze</li> <li>sfdx hardis:org:user:unfreeze</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2491-2021-08-30","title":"[2.49.1] 2021-08-30","text":"<ul> <li>QuickFix scratch org auth during CI</li> </ul>"},{"location":"CHANGELOG/#2490-2021-08-30","title":"[2.49.0] 2021-08-30","text":"<ul> <li>Manage scratch org pools to enhance performances<ul> <li>Initialize configuration with hardis:scratch:pool:configure</li> <li>Fetch a new scratch org from the pool when requesting creation of a new scratch org</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2481-2021-08-27","title":"[2.48.1] 2021-08-27","text":"<ul> <li>QuickFix hardis:org:files:export</li> </ul>"},{"location":"CHANGELOG/#2480-2021-08-27","title":"[2.48.0] 2021-08-27","text":"<ul> <li>New command hardis:org:files:export to download all files (ContentVersion) attached to records (ex: Opportunity)</li> <li>Generate text log file in hardis-report/commands when sfdx-hardis is not run from CI</li> <li>hardis:org:diagnose:legacyapi : simpler logs</li> </ul>"},{"location":"CHANGELOG/#2473-2021-08-23","title":"[2.47.3] 2021-08-23","text":"<ul> <li>hardis:org:diagnose:legacyapi: Add more summary and statistics</li> </ul>"},{"location":"CHANGELOG/#2472-2021-08-23","title":"[2.47.2] 2021-08-23","text":"<ul> <li>Fix hardis:org:diagnose:legacyapi (display raw logs when CSV builder is crashing) , using papaparse instead of objects-to-csv package</li> </ul>"},{"location":"CHANGELOG/#2471-2021-08-19","title":"[2.47.1] 2021-08-19","text":"<ul> <li>Use --permissivediff to call sfdx-git-delta if the argument is available</li> <li>Manage env vars SKIP_PACKAGE_DEPLOY_ON_CHANGE and SKIP_PACKAGE_DEPLOY_ONCE . If set to true, related packageDeployOnChange.xml and packageDeployOnce.xml are ignored</li> <li>Define locally method to remove package.xml from another, to improve performances</li> </ul>"},{"location":"CHANGELOG/#2470-2021-08-19","title":"[2.47.0] 2021-08-19","text":"<ul> <li>New feature: use packageDeployOnChange.xml, to skip deployment of items that has not been updated since last update</li> <li>Create docker images with sfdx-cli@stable version<ul> <li>alpha-sfdx-stable</li> <li>beta-sfdx-stable</li> <li>latest-sfdx-stable</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2460-2021-08-16","title":"[2.46.0] 2021-08-16","text":"<ul> <li>Allow to run git delta command on local updates</li> <li>Update labels of hardis:data commands</li> <li>New technical command: hardis:work:ws , to call VsCode Extension refresh from CLI</li> </ul>"},{"location":"CHANGELOG/#2450-2021-08-15","title":"[2.45.0] 2021-08-15","text":"<ul> <li>Refactor hardis:org:diagnose:legacyapi with jsforce to handle more log entries</li> <li>Do not display <code>git branch -v</code> in logs</li> </ul>"},{"location":"CHANGELOG/#2440-2021-08-14","title":"[2.44.0] 2021-08-14","text":"<ul> <li>New command hardis:org:diagnose:legacyapi : Detect use of deprecated API versions in production org</li> </ul>"},{"location":"CHANGELOG/#2431-2021-07-23","title":"[2.43.1] 2021-07-23","text":"<ul> <li>Update deployTips</li> <li>Update json schema</li> </ul>"},{"location":"CHANGELOG/#2430-2021-07-22","title":"[2.43.0] 2021-07-22","text":"<ul> <li>Better split of elements during hardis:work:save</li> <li>Display elapsed time for long running commands</li> </ul>"},{"location":"CHANGELOG/#2422-2021-07-20","title":"[2.42.2] 2021-07-20","text":"<ul> <li>Use relative path for sfdmu data import/export</li> </ul>"},{"location":"CHANGELOG/#2421-2021-07-19","title":"[2.42.1] 2021-07-19","text":"<ul> <li>Fix data import &amp; export commands when spaces in folder names</li> </ul>"},{"location":"CHANGELOG/#2420-2021-07-12","title":"[2.42.0] 2021-07-12","text":"<ul> <li>New command sfdx hardis:project:lint</li> <li>Update .sfdx-hardis.yml configuration JsonSchema</li> </ul>"},{"location":"CHANGELOG/#2412-2021-07-12","title":"[2.41.2] 2021-07-12","text":"<ul> <li>QuickFix case when title is not set (use first line of description)</li> </ul>"},{"location":"CHANGELOG/#2411-2021-07-12","title":"[2.41.1] 2021-07-12","text":"<ul> <li>Quickfix default mkdocs.yml</li> </ul>"},{"location":"CHANGELOG/#2410-2021-07-12","title":"[2.41.0] 2021-07-12","text":"<ul> <li>Add JSON Schema for <code>.sfdx-hardis.yml</code> configuration files</li> <li>Automatic SFDX Plugin documentation generation for any SFDX Plugin</li> </ul>"},{"location":"CHANGELOG/#2400-2021-07-08","title":"[2.40.0] 2021-07-08","text":"<ul> <li>hardis:scratch:create: Initialize data using SFDMU, if defined in .sfdx-hardis.json <code>dataPackages</code> property with <code>importInScratchOrgs: true</code><ul> <li>Example</li> </ul> </li> </ul> <pre><code>dataPackages:\n  - dataPath: scripts/data/LightningSchedulerConfig\n    importInScratchOrgs: true\n</code></pre> <ul> <li>Propose to update or not default target git branch</li> <li>List target git branches if defined in .sfdx-hardis.json <code>availableTargetBranches</code> property</li> <li>hardis:scratch:delete: Propose only scratch orgs related to currently selected Dev Hub</li> <li>New command hardis:org:configure:data to initialize a SFDMU project, sfdx-hardis flavored</li> <li>Display data package label &amp; description, from SFDMU folder config.json properties <code>sfdxHardisLabel</code> and <code>sfdxHardisDescription</code></li> <li>hardis:org:data:import &amp; hardis:org:data:import: Allow to select current org or another when running data import/export commands</li> <li>Display Dev Hub username when listing orgs for selection</li> </ul>"},{"location":"CHANGELOG/#2311-2021-07-02","title":"[2.31.1] 2021-07-02","text":"<ul> <li>hardis:scratch:delete : Display instanceUrl &amp; last usage of scratch orgs displayed before deletion</li> </ul>"},{"location":"CHANGELOG/#2310-2021-07-02","title":"[2.31.0] 2021-07-02","text":"<ul> <li>New command hardis:scratch:delete to delete scratch orgs locally referenced.</li> </ul>"},{"location":"CHANGELOG/#2301-2021-06-30","title":"[2.30.1] 2021-06-30","text":"<ul> <li>hardis:org:connect : Propose user to open org in browser if not in CI</li> </ul>"},{"location":"CHANGELOG/#2300-2021-06-30","title":"[2.30.0] 2021-06-30","text":"<ul> <li>Update hardis:org:retrieve:packageconfig so it allows to select an org, and to update sfdx-hardis configuration</li> </ul>"},{"location":"CHANGELOG/#2290-2021-06-29","title":"[2.29.0] 2021-06-29","text":"<ul> <li>New command hardis:org:retrieve:sources:dx2 to assist call to force:source:retrieve using a package.xml file</li> <li>Improve hardis:project:generate:gitdelta by allowing to select commits from their description</li> <li>Use magenta to display config file updates</li> </ul>"},{"location":"CHANGELOG/#2280-2021-06-23","title":"[2.28.0] 2021-06-23","text":"<ul> <li>CI: Check Docker image security with trivy</li> <li>Avoid git error when development branch is updated</li> </ul>"},{"location":"CHANGELOG/#2271-2021-06-21","title":"[2.27.1] 2021-06-21","text":"<ul> <li>Fix CountryCode when updating scratch org user. Default FR - France, can be updated with config defaultCountry and defaultCountryCode in .sfdx-hardis.yml</li> </ul>"},{"location":"CHANGELOG/#2270-2021-06-20","title":"[2.27.0] 2021-06-20","text":"<ul> <li>Clean Lookup filters before force:source:push, then restore them and push again</li> <li>Manage <code>gitRootFolderPrefix</code> config property, in case the root of git repository is at a parent level than sfdx project root</li> <li>Allow to override separate deployments using config property <code>separateDeploymentsConfig</code></li> <li>Set git config core.quotepath to false to manage special characters in git files / folders</li> <li>Run sfdx git delta at the root of the git repository</li> <li>Rename DeferSharingCalc permission set into SfdxHardisDeferSharingCalc</li> <li>New Deployment tips</li> <li>Contributing documentation</li> </ul>"},{"location":"CHANGELOG/#2264-2021-06-18","title":"[2.26.4] 2021-06-18","text":"<ul> <li>Do not write user config when current folder is empty</li> </ul>"},{"location":"CHANGELOG/#2261-2021-06-17","title":"[2.26.1] 2021-06-17","text":"<ul> <li>Take in account testLevel from <code>.sfdx-hardis.yml</code> in deployments</li> </ul>"},{"location":"CHANGELOG/#2260-2021-06-16","title":"[2.26.0] 2021-06-16","text":"<ul> <li>New command hardis:project:generate:gitdelta to generate the package.xml calculated between two commits</li> <li>New command hardis:org:connect to connect to an org without selecting it (can be used to refresh expired token)</li> <li>Propose choice to to skip .gitignore &amp; .forceignore files auto-update</li> <li>Define triggerNotification on Command class to trigger MsTeams notifs</li> <li>Update org type selection message</li> </ul>"},{"location":"CHANGELOG/#2253-2021-06-14","title":"[2.25.3] 2021-06-14","text":"<ul> <li>Fix bug when selecting an org from outside a SFDX project folder</li> </ul>"},{"location":"CHANGELOG/#2252-2021-06-14","title":"[2.25.2] 2021-06-14","text":"<ul> <li>Refresh VsCode Sfdx Hardis UI when creating / loading a SFDX Project</li> </ul>"},{"location":"CHANGELOG/#2251-2021-06-13","title":"[2.25.1] 2021-06-13","text":"<ul> <li>Check if folder is a git repo before updating git config</li> </ul>"},{"location":"CHANGELOG/#2250-2021-06-12","title":"[2.25.0] 2021-06-12","text":"<ul> <li>New parameter keepmetadatatypes for hardis:org:retrieve:sources:dx</li> <li>Check dependencies<ul> <li>Improve performances</li> <li>Check application dependencies (git,openssl)</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2240-2021-06-10","title":"[2.24.0] 2021-06-10","text":"<ul> <li>New command hardis:org:purge:apexlog to purge all Apex Logs of selected org</li> </ul>"},{"location":"CHANGELOG/#2230-2021-06-07","title":"[2.23.0] 2021-06-07","text":"<ul> <li>Manage installation key for unlocked packages installation</li> <li>Deployment: manage --canmodify SFDMU argument (define sfdmuCanDeploy in sfdx-hardis branch config file)</li> </ul>"},{"location":"CHANGELOG/#2220-2021-06-03","title":"[2.22.0] 2021-06-03","text":"<ul> <li>New command hardis:project:clean:orgmissingitems : Remove elements that are not existing in target org (only in ReportType for now)</li> <li>hardis:project:clean:references : Remove cleaned items from package.xml files</li> <li>Externalization of method to select an org (+ reorder of list of displayed orgs)</li> </ul>"},{"location":"CHANGELOG/#2210-2021-06-02","title":"[2.21.0] 2021-06-02","text":"<ul> <li>hardis:project:clean:references: Improve performances for removing files</li> <li>hardis:scratch:create : Shorten scratch org auto-generated name</li> <li>Authenticate to an org: Request user to set alias if not provided</li> <li>Update default gitlab-ci.yml</li> <li>New method promptProfiles</li> </ul>"},{"location":"CHANGELOG/#2203-2021-05-26","title":"[2.20.3] 2021-05-26","text":"<ul> <li>Set prompt UI timeout to 2h instead of 5mn</li> </ul>"},{"location":"CHANGELOG/#2202-2021-05-25","title":"[2.20.2] 2021-05-25","text":"<ul> <li>Fix call to sfdmu (add --noprompt)</li> </ul>"},{"location":"CHANGELOG/#2201-2021-05-23","title":"[2.20.1] 2021-05-23","text":"<ul> <li>Fix scratch org listing</li> </ul>"},{"location":"CHANGELOG/#2200-2021-05-21","title":"[2.20.0] 2021-05-21","text":"<ul> <li>hardis:work:save : Prompt user to pull from scratch org or not before saving</li> <li>Do not update package.json anymore</li> <li>hardis:scratch:create : Fix reuse scratch org prompt</li> </ul>"},{"location":"CHANGELOG/#2190-2021-05-20","title":"[2.19.0] 2021-05-20","text":"<ul> <li>Detect when auth token is expired</li> <li>More deploy tips</li> <li>Clean ProductRequest items</li> </ul>"},{"location":"CHANGELOG/#2180-2021-05-18","title":"[2.18.0] 2021-05-18","text":"<ul> <li> <p>New commands</p> <ul> <li>hardis:org:retrieve:packageconfig: Retrieves .sfdx-hardis.yml property installedPackaged from an existing org</li> <li>hardis:project:clean:emptyitems: Delete empty items from SFD project</li> <li>hardis:project:clean:hiddenitems: Delete hidden items (from managed packages) from SFDX project</li> </ul> </li> </ul> <ul> <li>Update default values for JWT connected app creation</li> <li>Manage <code>--targetusername</code> to be taken in account for all sfdx hardis commands</li> <li>More deployment tips</li> <li>hardis:project:clean:manageditems: New <code>--namespace</code> argument</li> <li>org:retrieve:source:dx : Do not erase .gitignore, .forceignore , README.md and project-scratch-def is already existing locally</li> <li>Remove shape temp folder to avoid a force:org:create bug</li> </ul>"},{"location":"CHANGELOG/#2173-2021-05-18","title":"[2.17.3] 2021-05-18","text":"<ul> <li>Fix .gitignore automatic update constraint</li> </ul>"},{"location":"CHANGELOG/#2172-2021-05-10","title":"[2.17.2] 2021-05-10","text":"<ul> <li>Default init scratch org using push and not deploy</li> <li>QuickFix mergeRequest links local storage</li> </ul>"},{"location":"CHANGELOG/#2170-2021-05-10","title":"[2.17.0] 2021-05-10","text":"<ul> <li>New command hardis:project:convert:profilestopermsets to convert all profiles into permission sets</li> <li>hardis:scratch:create : Fix permission set auto assignment when creating a scratch org (use property initPermissionSets in .sfdx-hardis.yml)</li> </ul>"},{"location":"CHANGELOG/#2161-2021-05-09","title":"[2.16.1] 2021-05-09","text":"<ul> <li>hardis:work:save : Fix storage in config file of Merge Request info</li> <li>Update deploy tips</li> </ul>"},{"location":"CHANGELOG/#2160-2021-05-08","title":"[2.16.0] 2021-05-08","text":"<ul> <li>hardis:project:clean:manageditems : Clean SFDX project from managed classes</li> <li>hardis:project:clean:retrievefolders: Clean/Complete SFDX project with missing folders (dashboard,email,reports)</li> <li>hardis:project:clean:standarditems : Clean SFDX project from objects with no custom within</li> <li>More deployment error tips</li> <li>New parameter websocket for all commands</li> <li>Indicating in logs when deployment is a simulation</li> </ul>"},{"location":"CHANGELOG/#2151-2021-05-02","title":"[2.15.1] 2021-05-02","text":"<ul> <li>QuickFix hardis:work:save</li> </ul>"},{"location":"CHANGELOG/#2150-2021-04-30","title":"[2.15.0] 2021-04-30","text":"<ul> <li>hardis:project:clean:references : New cleaning module dashboards removing reference to users in Dashboards sources</li> </ul>"},{"location":"CHANGELOG/#2140-2021-04-29","title":"[2.14.0] 2021-04-29","text":"<ul> <li>Manage manifest/packageDeployOnce.xml : all its items that are already present in target org will not be deployed again</li> </ul>"},{"location":"CHANGELOG/#2134-2021-04-26","title":"[2.13.4] 2021-04-26","text":"<ul> <li>New deploy tips</li> <li>Do not update local files when calling configure commands</li> <li>hardis:work:save : Fix branch update issue</li> </ul>"},{"location":"CHANGELOG/#2133-2021-04-23","title":"[2.13.3] 2021-04-23","text":"<ul> <li>Remove PMD rule :<ul> <li>CyclomaticComplexity</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#2132-2021-04-22","title":"[2.13.2] 2021-04-22","text":"<ul> <li>QuickFix hardisversion:promote --auto</li> </ul>"},{"location":"CHANGELOG/#2130-2021-04-21","title":"[2.13.0] 2021-04-21","text":"<ul> <li>hardis:work:save<ul> <li>New parameter --nogit for expert developers who want to manage git operations themselves</li> <li>New parameter --noclean for expert developers who want to manage clean operations themselves</li> </ul> </li> <li>Update default Mega-Linter config</li> </ul>"},{"location":"CHANGELOG/#2120-2021-04-19","title":"[2.12.0] 2021-04-19","text":"<ul> <li>New variable CI_DEPLOY_QUICK_ACTIONS_DUMMY<ul> <li>set to \"true\" in CI variables when there are QuickActions dependent of Flows that are later in publication plan</li> <li>then set again to \"false\" and the deployment will pass :)</li> </ul> </li> <li>hardis:project:clean:references : now deletes obsolete objects and objectTranslations</li> <li>hardis:work:save : More categories in interactive git add</li> <li>Improve authentication check performances</li> <li>New command hardis:config:get to return all config for project, branch or user</li> <li>New deployment errors tips</li> </ul>"},{"location":"CHANGELOG/#2110-2021-04-15","title":"[2.11.0] 2021-04-15","text":"<ul> <li>Delete scratch org when its initialization has failed during CI</li> <li>Clean obsolete object fields and objectTranslations</li> </ul>"},{"location":"CHANGELOG/#2104-2021-04-15","title":"[2.10.4] 2021-04-15","text":"<ul> <li>Provide password to user when creating new scratch org</li> <li>Update CI default config to allow to not delete scratch orgs (define <code>CI_DELETE_SCRATCH_ORG: \"true\"</code> in gitlab-ci-config.yml)</li> <li>New deploy tips: record type not found, picklist value not found</li> </ul>"},{"location":"CHANGELOG/#2103-2021-04-14","title":"[2.10.3] 2021-04-14","text":"<ul> <li>Allow advanced user to bypass auth check (set <code>skipAuthCheck:true</code> in config/user/***.sfdx-hardis.yml)</li> <li>Optimize check of <code>force:config:set restDeploy: false</code></li> <li>hardisversion:create : Store package installation password in project config + fixes</li> </ul>"},{"location":"CHANGELOG/#2102-2021-04-14","title":"[2.10.2] 2021-04-14","text":"<ul> <li>hardis:work:refresh : Make sure the user saved his work (commit) before merging another branch in current branch</li> </ul>"},{"location":"CHANGELOG/#2101-2021-04-11","title":"[2.10.1] 2021-04-11","text":"<ul> <li>hardis:org:test:apex : Fix regex to new Apex Test results stdout format</li> </ul>"},{"location":"CHANGELOG/#2100-2021-04-11","title":"[2.10.0] 2021-04-11","text":"<ul> <li>hardis:work:save : Automatic generation of split package.xml and deploymentPlan in .sfdx-hardis.yml</li> <li>hardis:work:save : Propose to export data when saving</li> <li>Remove duplicates from .gitignore and .forceignore</li> <li>Add chromium in dockerfile</li> </ul>"},{"location":"CHANGELOG/#294-2021-04-09","title":"[2.9.4] 2021-04-09","text":"<ul> <li>Fix refresh</li> <li>Update project cleaning references</li> </ul>"},{"location":"CHANGELOG/#293-2021-04-08","title":"[2.9.3] 2021-04-08","text":"<ul> <li>hardis:work:refresh : allow to refresh from another branch</li> </ul>"},{"location":"CHANGELOG/#292-2021-04-08","title":"[2.9.2] 2021-04-08","text":"<ul> <li>hardis:work:save : Fix issue when trying to stage &amp; commit ignored files after project cleaning</li> <li>hardis:project:configure:auth Improve error message when unable to upload ConnectedApp on production environment</li> <li>Update default Apex PMD ruleset</li> <li>Use replace and not replaceAll for node14 compatibility</li> </ul>"},{"location":"CHANGELOG/#291-2021-04-07","title":"[2.9.1] 2021-04-07","text":"<ul> <li>Clean git reset before save</li> <li>Clean git stash before new task</li> </ul>"},{"location":"CHANGELOG/#290-2021-04-06","title":"[2.9.0] 2021-04-06","text":"<ul> <li>New command hardis:project:create</li> <li>Refactor project cleaning and allow to use external config files (destructiveChanges-like.xml or json)</li> <li>Fixes<ul> <li>hardis:work:save : Create destructiveChanges.xml if not existing</li> <li>hardis:work:save : call forceSourcePull method to propose to update .forceignore if errors are found</li> <li>hardis:project:configure:auth: call mdapi:deploy with RunLocalTests to manage production environments</li> <li>authentication: auth only to devHub if --devhub sent</li> <li>Disable spinner for restDeploy check</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#285-2021-04-06","title":"[2.8.5] 2021-04-06","text":"<ul> <li>QuickFix question icon</li> </ul>"},{"location":"CHANGELOG/#284-2021-04-06","title":"[2.8.4] 2021-04-06","text":"<ul> <li>Allow to skip pull before save</li> <li>New deployTip: code coverage items with 0%</li> <li>Fix DevHub auth when credential out of date</li> <li>Use latest sfdx-cli package</li> <li>Init git config only if we are not in CI</li> </ul>"},{"location":"CHANGELOG/#283-2021-04-01","title":"[2.8.3] 2021-04-01","text":"<ul> <li>Fix package creation</li> <li>When using VsCode UI via WebSocket, display selected values in console logs</li> </ul>"},{"location":"CHANGELOG/#282-2021-04-01","title":"[2.8.2] 2021-04-01","text":"<ul> <li>hardis:work:save : reset ongoing merge if existing</li> <li>Fix git reset call</li> </ul>"},{"location":"CHANGELOG/#280-2021-03-31","title":"[2.8.0] 2021-03-31","text":"<ul> <li>Define git user.name and user.email if not set</li> <li>Define VsCode as git merge/diff tool if none is defined</li> <li>Unstash changes (git reset) at the beginning of hardis:work:save</li> <li>Deploy destructive changes after real deployment</li> <li>hardis:project:clean:references now works also to remove references to content of manifest/destructiveChanges.xml</li> <li>hardis:work:save: Clean sfdx project while saving it</li> <li>Factorize temp directory creation</li> </ul>"},{"location":"CHANGELOG/#272-2021-03-30","title":"[2.7.2] 2021-03-30","text":"<ul> <li>Check user is sure to want to reuse an existing scratch org</li> <li>Fix hardis:work:refresh</li> </ul>"},{"location":"CHANGELOG/#271-2021-03-29","title":"[2.7.1] 2021-03-29","text":"<ul> <li>Fix auto-fix of .gitignore and .forceignore</li> <li>Propose to auto-update .force ignore when there is a pull issue</li> </ul>"},{"location":"CHANGELOG/#270-2021-03-29","title":"[2.7.0] 2021-03-29","text":"<ul> <li>Communicate with VsCode SFDX Hardis extension via WebSocket if server is found</li> <li>Send user input prompts to VsCode UI if WebSocket server found</li> <li>Send refreshStatus notifications when context is updated</li> <li>Arrange some messages for better display on UI</li> </ul>"},{"location":"CHANGELOG/#260-2021-03-28","title":"[2.6.0] 2021-03-28","text":"<ul> <li>New command hardis:project:clean:references to clean SFDX project from data.com license references</li> <li>hardis:scratch:create: Load sfdmu workspace <code>scripts/data/ScratchInit</code> if existing in , to initialize scratch org data</li> </ul>"},{"location":"CHANGELOG/#250-2021-03-28","title":"[2.5.0] 2021-03-28","text":"<ul> <li>New command hardis:source:push</li> <li>New command hardis:source:pull</li> <li>Various mini-fixes</li> <li>Move deploymentPlan.json within .sfdx-hardis.json</li> <li>Retry management for execCommand function. ex: <code>retry: {retryDelay: 30,retryStringConstraint: 'some string present in output', retryMaxAttempts: 5}</code></li> </ul>"},{"location":"CHANGELOG/#240-2021-03-27","title":"[2.4.0] 2021-03-27","text":"<ul> <li>Add sfdmu &amp; sfdx-git-delta in dependencies &amp; Dockerfile</li> <li>Import data with sfdmu</li> <li>Manage data import steps in <code>deploymentPlan.json</code></li> <li>New command hardis:org:data:export</li> <li>New command hardis:org:data:import</li> </ul>"},{"location":"CHANGELOG/#230-2021-03-26","title":"[2.3.0] 2021-03-26","text":"<ul> <li>hardis:work:save: Do not git add manifest files when they have not been updated</li> <li>Select type of org to connect: enhance label</li> <li>Multi-Select default to 9999 items displayed</li> <li>Display tips about deployment failures when they happen</li> <li>Create scratch org: When DeferSharingCalc in features, suspend and resume sharing calc during force:source:push</li> <li>Allow to define a file <code>manifest/deploymentPlan.json</code> to split the deployment into separate package.xml files</li> </ul> <p>Example:</p> <pre><code>{\n  \"packages\": [\n    {\n      \"label\": \"SharingRulesAccount\",\n      \"packageXmlFile\": \"splits/packageXmlSharingRulesAccount.xml\",\n      \"order\": 10,\n      \"waitAfter\": 60\n    },\n    {\n      \"label\": \"SharingRulesVisit__c\",\n      \"packageXmlFile\": \"splits/packageXmlSharingRulesAccountVisit__c.xml\",\n      \"order\": 10\n    }\n  ]\n}\n</code></pre>"},{"location":"CHANGELOG/#221-2021-03-23","title":"[2.2.1] 2021-03-23","text":"<ul> <li>QuickFix 2.2.1</li> <li>Use RunLocalTests when deploying ConnectedApp metadata to production org</li> </ul>"},{"location":"CHANGELOG/#220-2021-03-23","title":"[2.2.0] 2021-03-23","text":"<ul> <li>Enhance security by encrypting SSH private key</li> </ul>"},{"location":"CHANGELOG/#217-2021-03-22","title":"[2.1.7] 2021-03-22","text":"<ul> <li>More categories for Interactive Git Add (Aura,LWC, Tech Config)</li> <li>Auto-update .forceignore</li> <li>Fix <code>hardis:org:test:apex</code></li> </ul>"},{"location":"CHANGELOG/#216-2021-03-20","title":"[2.1.6] 2021-03-20","text":"<ul> <li>Fix org authentication check</li> </ul>"},{"location":"CHANGELOG/#215-2021-03-19","title":"[2.1.5] 2021-03-19","text":"<ul> <li>Unlimited list of items displayed during interactive git add</li> <li>Uniformize prompts to user</li> </ul>"},{"location":"CHANGELOG/#214-2021-03-17","title":"[2.1.4] 2021-03-17","text":"<ul> <li>Deploy with --ignorewarnings</li> </ul>"},{"location":"CHANGELOG/#213-2021-03-17","title":"[2.1.3] 2021-03-17","text":"<ul> <li>Fix hardis:retrieve:sources:dx when not in a DX project</li> <li>Fix deloyment of Connected App in production</li> <li>Display more options by page during interactive git add</li> <li>Sort files to git add by group and manage preselection</li> </ul>"},{"location":"CHANGELOG/#212-2021-03-14","title":"[2.1.2] 2021-03-14","text":"<ul> <li>Improve package installation<ul> <li>Allow to install a package not listed in sfdx-hardis</li> <li>Allow to configure automatic installation during deployments, or not</li> <li>Allow to configure automatic installation during scratch org initialisation, or not</li> </ul> </li> <li>Reformat strings when no spaces are allowed in a user input</li> </ul>"},{"location":"CHANGELOG/#211-2021-03-12","title":"[2.1.1] 2021-03-12","text":"<ul> <li>Fix hardis:scratch:create when initDataRequests</li> </ul>"},{"location":"CHANGELOG/#210-2021-03-10","title":"[2.1.0] 2021-03-10","text":"<ul> <li>New command hardis:data:tree:export</li> <li>scratch:create: Import init data using .sfdx-hardis.yml <code>initDataRequests</code> property</li> <li>scratch:create: Assign to permission set (or PS groups) using .sfdx-hardis.yml <code>initPermissionSets</code> property</li> </ul>"},{"location":"CHANGELOG/#200-2021-03-09","title":"[2.0.0] 2021-03-09","text":"<ul> <li>New command hardiscreate to create Managed and Unlocked packages</li> <li>Migrate from tslint to eslint</li> <li>Fix dependencies hell</li> <li>Fix hardis:org:purge:flow with new result format (#49)</li> </ul>"},{"location":"CHANGELOG/#161-2021-03-09","title":"[1.6.1] 2021-03-09","text":"<ul> <li>Update sfdx-project.json when installing a package</li> <li>Refresh env &amp; scratch org if same scratch org is reused</li> <li>Update default files for CI &amp; monitoring projects</li> <li>Do not deploy packages from hardis:project:deploy:sources:dx when we are in --check mode !</li> <li>Better output display for hardis:org:test:apex</li> </ul>"},{"location":"CHANGELOG/#160-2021-03-08","title":"[1.6.0] - 2021-03-08","text":"<ul> <li>New package commands<ul> <li>hardisinstall</li> <li>hardisversion:create</li> <li>hardisversion:list</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#151-2021-03-07","title":"[1.5.1] - 2021-03-07","text":"<ul> <li>Use shared Mega-Linter configuration</li> </ul>"},{"location":"CHANGELOG/#150-2021-03-05","title":"[1.5.0] 2021-03-05","text":"<ul> <li>New command hardis:org:select</li> <li>New command hardis:work:resetselection</li> <li>hardis:work:save: Upgrade package.xml and destructiveChanges.xml from git diff</li> <li>Improve console logging of git operations</li> </ul>"},{"location":"CHANGELOG/#141-2021-03-03","title":"[1.4.1] 2021-03-03","text":"<ul> <li>Update default gitlab-ci.yml</li> <li>rename commands:<ul> <li>hardis:work:new</li> <li>hardis:work:refresh</li> <li>hardis:work:save</li> </ul> </li> <li>cosmetic enhancements</li> </ul>"},{"location":"CHANGELOG/#140-2021-02-28","title":"[1.4.0] 2021-02-28","text":"<ul> <li>New work commands to make easier non technical users to use Hardis CI<ul> <li>hardis:work:task:new</li> <li>hardis:work:task:save</li> <li>hardis:work:task:refresh</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#136-2021-02-26","title":"[1.3.6] 2021-02-26","text":"<ul> <li>Quick fix hardis:org:configure:monitoring + colors</li> </ul>"},{"location":"CHANGELOG/#135-2021-02-26","title":"[1.3.5] 2021-02-26","text":"<ul> <li>Workaround when --soapdeploy argument is not available</li> </ul>"},{"location":"CHANGELOG/#134-2021-02-25","title":"[1.3.4] 2021-02-25","text":"<ul> <li>Reuse msTeamsWebhookUrl during sfdx:org:configure:monitoring prompts</li> <li>Allow to override CONFIG_BRANCH to get forced .sfdx.hardis.BRANCH.yml</li> </ul>"},{"location":"CHANGELOG/#133-2021-02-24","title":"[1.3.3] 2021-02-24","text":"<ul> <li>Soap option for force:mdapi:deploy</li> </ul>"},{"location":"CHANGELOG/#132-2021-02-24","title":"[1.3.2] 2021-02-24","text":"<ul> <li>Guide user to assign rights to Connected App in sfdx:org:configure:monitoring</li> </ul>"},{"location":"CHANGELOG/#131-2021-02-24","title":"[1.3.1] 2021-02-24","text":"<ul> <li>Manage git clone &amp; push for sfdx:org:configure:monitoring</li> <li>Manage upload of connected app metadata for sfdx:org:configure:monitoring</li> </ul>"},{"location":"CHANGELOG/#130-2021-02-23","title":"[1.3.0] 2021-02-23","text":"<ul> <li>New command sfdx:project:deploy:sources:metadata</li> <li>Generate .cache folder only when necessary</li> <li>New command sfdx:org:configure:monitoring</li> </ul>"},{"location":"CHANGELOG/#30-remove-use-of-sfdx-node","title":"30: Remove use of sfdx-node","text":""},{"location":"CHANGELOG/#120-2021-02-21","title":"[1.2.0] 2021-02-21","text":"<ul> <li>Auto-generate alpha version of plugin package and associated docker image when publishing from branch alpha</li> <li>Manage cache storage for CI dependent jobs (cache, artifacts)<ul> <li>.cache/sfdx-hardis/.sfdx</li> <li>.sfdx</li> <li>config/user</li> </ul> </li> <li>Improve org authentication</li> <li>New command hardis:org:test<ul> <li>Test org coverage and fail if &lt; 75%</li> </ul> </li> <li>Installed package management<ul> <li>Factorize method</li> <li>Install packages during hardis:project:deploy:sources:dx</li> </ul> </li> <li>Allow to reuse scratch org if previous creation failed. Force using --forcenew</li> <li>Improve auto-update of local project sfdx-hardis files</li> <li>Improve console logs</li> <li>Allow to store DevHubSfdxClientId in user sfdx-hardis.yml ( in /user folder)</li> </ul>"},{"location":"CHANGELOG/#24-change-the-way-of-listing-installed-packages","title":"24: Change the way of listing installed packages","text":""},{"location":"CHANGELOG/#26-new-command-sfdx-hardisprojectconfiguredeployments-to-configure-connected-app","title":"26: New command sfdx hardis:project:configure:deployments to configure Connected app","text":""},{"location":"CHANGELOG/#27-check-in-manifest-folder-for-packagexml","title":"27: Check in manifest folder for package.xml","text":""},{"location":"CHANGELOG/#113-2021-02-17","title":"[1.1.3] 2021-02-17","text":"<ul> <li>Fix cases when directory is not git</li> </ul>"},{"location":"CHANGELOG/#110-2021-02-17","title":"[1.1.0] 2021-02-17","text":"<ul> <li>New command hardis:project:deploy:sources:dx (alpha)</li> <li>New command hardis:project:audit:apiversion</li> </ul>"},{"location":"CHANGELOG/#101-2021-02-15","title":"[1.0.1] 2021-02-15","text":"<ul> <li>Fix auth:login to avoid DevHub auth when not necessary</li> </ul>"},{"location":"CHANGELOG/#100-2021-02-15","title":"[1.0.0] 2021-02-15","text":"<ul> <li>New command hardis:scratch:create</li> <li>Advanced project initialization using <code>--shape</code> argument for <code>sfdx hardis:org:retrieve:sources:dx</code></li> <li>Automatic generation of .sfdx-hardis*.yml configuration files</li> <li>Automatic update of project package.json to add sfdx-hardis utilities</li> </ul>"},{"location":"CHANGELOG/#0510-2021-02-12","title":"[0.5.10] 2021-02-12","text":"<ul> <li>Allow purges to fail without making sfdx command fail</li> </ul>"},{"location":"CHANGELOG/#055-2021-02-10","title":"[0.5.5] 2021-02-10","text":"<ul> <li>Check if installed sfdx-hardis is the latest version, else display a message to advise the user to upgrade to latest</li> </ul>"},{"location":"CHANGELOG/#054-2021-02-09","title":"[0.5.4] 2021-02-09","text":"<ul> <li>Fixes:<ul> <li><code>hardis:org:purge:flow</code>: Do not crash in case the Flow is not deletable</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#052-2021-02-07","title":"[0.5.2] 2021-02-07","text":"<ul> <li>Fixes:<ul> <li><code>--no-prompt</code> argument is ignored</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#051-2021-02-04","title":"[0.5.1] 2021-02-04","text":"<ul> <li>Fixes:<ul> <li>Add more items to metadatas not convertible to sfdx sources</li> <li>Issue when using --sandbox argument</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#050-2021-02-03","title":"[0.5.0] 2021-02-03","text":"<ul> <li>New command <code>hardis:project:audit:callincallout</code>: Audit sfdx project (or metadatas) sources to list all CallIns and CallOuts from Apex / Triggers code parsing</li> <li>New command <code>hardis:project:audit:remotesites</code>: Audit sfdx project (or metadatas) sources to list all remote site settings of an org</li> </ul>"},{"location":"CHANGELOG/#041-2021-02-01","title":"[0.4.1] 2021-02-01","text":"<ul> <li>Fix: Manage Hooks only from hardis namespace commands</li> </ul>"},{"location":"CHANGELOG/#040-2021-02-01","title":"[0.4.0] 2021-02-01","text":"<ul> <li>Send MS Teams notifications if set environment variable MS_TEAMS_WEBHOOK_URL or msTeamsWebhookUrl in .sfdx-hardis.yml</li> </ul>"},{"location":"CHANGELOG/#031-2021-01-31","title":"[0.3.1] 2021-01-31","text":"<ul> <li>Always regenerate full package.xml before retrieving metadatas</li> </ul>"},{"location":"CHANGELOG/#030-2021-01-31","title":"[0.3.0] 2021-01-31","text":"<ul> <li>Build and upload nvuillam/sfdx-hardis docker image when releasing a new version</li> <li>New command force:auth:login + manage login using JWT for CI</li> </ul>"},{"location":"CHANGELOG/#020-2021-01-31","title":"[0.2.0] 2021-01-31","text":"<ul> <li>New command sfdx hardis:org:retrieve:sources:metadata : Retrieve all metadata from an org</li> </ul>"},{"location":"CHANGELOG/#011-2021-01-31","title":"[0.1.1] 2021-01-31","text":"<ul> <li>New command sfdx hardis:org:retrieve:sources:dx : Create SFDX project from remote org</li> </ul>"},{"location":"CHANGELOG/#001-2021-01-26","title":"[0.0.1] 2021-01-26","text":"<ul> <li>New command sfdx hardis:org:purge:flow : Purge Obsolete flow versions to avoid the 50 max versions limit</li> </ul>"},{"location":"SECURITY/","title":"Security Policy","text":""},{"location":"SECURITY/#introduction","title":"Introduction","text":"<p>Salesforce orgs contain critical data, so we are very serious regarding the security around the use of sfdx-hardis locally or from CI/CD servers.</p>"},{"location":"SECURITY/#supported-versions","title":"Supported Versions","text":"<p>Always use the latest sfdx-hardis version to be up to date with security updates.</p>"},{"location":"SECURITY/#supply-chain-security","title":"Supply Chain Security","text":""},{"location":"SECURITY/#continuous-scanning","title":"Continuous Scanning","text":"<p>All development and release workflows contain security checks using Trivy</p> <ul> <li>Scan npm package files</li> </ul> <ul> <li>Scan docker images</li> </ul> <p>Some exceptions has been added in .trivyignore config file, with comments explaining why these CVE are not risky within sfdx-hardis usage.</p> <p>You can find security scan results and SBOM (Software Build Of Materials) in CycloneDX and SPDX formats in the artifacts of release workflows or directly at the end of the Release notes.</p> <p></p>"},{"location":"SECURITY/#dependencies","title":"Dependencies","text":"<p>We are using dependabot to keep dependencies up to date.</p>"},{"location":"SECURITY/#architecture","title":"Architecture","text":"<ul> <li>sfdx-hardis plugin is built using the latest sfdx-plugin framework provided by Salesforce, including the use of official CI/CD workflows used by official Salesforce CLI plugins.</li> </ul> <ul> <li>Authentication between sfdx-hardis and Salesforce orgs are performed using a Connect App created during configuration. Each connection requires 2 secured environment variables: one with the connected app Client Id, and one used to decrypt \"on the fly\" an encrypted self-signed certificate stored in the repository.</li> </ul> <ul> <li>There is no embedded telemetry: sfdx-hardis maintainers have 0 information about sfdx-hardis command line usage, and it is by design.</li> </ul>"},{"location":"SECURITY/#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<p>In case of detected vulnerability, please write directly to Nicolas Vuillamy on LinkedIn</p>"},{"location":"cloudity-consulting-partner/","title":"Work with Cloudity","text":""},{"location":"cloudity-consulting-partner/#your-expert-salesforce-partner","title":"Your Expert Salesforce Partner","text":"<p>At Cloudity, we love sharing our technical expertise, such as sfdx-hardis as Open-Source, but that's just a small part of everything we do !</p> <p>We provide end-to-end digitalization services for companies, combining technical skills and business expertise to deliver solutions that set the bar high for quality. With the backing of our talented people, we\u2019re aiming to grow our influence and spread our culture based on trust, ambition and empowerment.</p> <p>By end-2025, our goal is to grow our workforce to more than 500 employees, to sustain profitability and to make Cloudity a go-to market player for top companies and for our partners, Salesforce and Meta.</p> <p>With experts from Hardis Group, Carrenet and Cloudity having joined forces, we now have more than 350 employees in four countries, serving customers across 30 countries (Europe + US).</p> <p>Want to know more ? Contact us on our WebSite !</p>"},{"location":"commands/","title":"Commands","text":""},{"location":"commands/#hardisauth","title":"hardis:auth","text":"Command Title hardis:auth:login"},{"location":"commands/#hardiscache","title":"hardis:cache","text":"Command Title hardis:cache:clear"},{"location":"commands/#hardisconfig","title":"hardis:config","text":"Command Title hardis:config:get"},{"location":"commands/#hardisdeploy","title":"hardis:deploy","text":"Command Title hardis:deploy:quick hardis:deploy:start hardis:deploy:validate"},{"location":"commands/#hardisdoc","title":"hardis:doc","text":"Command Title hardis:doc:extract:permsetgroups hardis:doc:fieldusage hardis:doc:flow2markdown hardis:doc:mkdocs-to-cf hardis:doc:mkdocs-to-salesforce hardis:doc:packagexml2markdown hardis:doc:plugin:generate hardis:doc:project2markdown"},{"location":"commands/#hardisgit","title":"hardis:git","text":"Command Title hardis:git:pull-requests:extract"},{"location":"commands/#hardislint","title":"hardis:lint","text":"Command Title hardis:lint:access hardis:lint:metadatastatus hardis:lint:missingattributes hardis:lint:unusedmetadatas"},{"location":"commands/#hardismdapi","title":"hardis:mdapi","text":"Command Title hardis:mdapi:deploy"},{"location":"commands/#hardismisc","title":"hardis:misc","text":"Command Title hardis:misc:purge-references hardis:misc:toml2csv"},{"location":"commands/#hardisorg","title":"hardis:org","text":"Command Title hardis:org:community:update hardis:org:configure:data hardis:org:configure:files hardis:org:configure:monitoring hardis:org:connect hardis:org:create hardis:org:data:delete hardis:org:data:export hardis:org:data:import hardis:org:diagnose:audittrail hardis:org:diagnose:instanceupgrade hardis:org:diagnose:legacyapi hardis:org:diagnose:licenses hardis:org:diagnose:releaseupdates hardis:org:diagnose:unused-apex-classes hardis:org:diagnose:unused-connected-apps hardis:org:diagnose:unusedlicenses hardis:org:diagnose:unusedusers hardis:org:files:export hardis:org:files:import hardis:org:fix:listviewmine hardis:org:generate:packagexmlfull hardis:org:monitor:all hardis:org:monitor:backup hardis:org:monitor:limits hardis:org:multi-org-query hardis:org:purge:apexlog hardis:org:purge:flow hardis:org:retrieve:packageconfig hardis:org:retrieve:sources:analytics hardis:org:retrieve:sources:dx hardis:org:retrieve:sources:dx2 hardis:org:retrieve:sources:metadata hardis:org:retrieve:sources:retrofit hardis:org:select hardis:org:test:apex hardis:org:user:activateinvalid hardis:org:user:freeze hardis:org:user:unfreeze"},{"location":"commands/#hardispackage","title":"hardis:package","text":"Command Title hardiscreate hardisinstall hardismergexml hardisversion:create hardisversion:list hardisversion:promote"},{"location":"commands/#hardispackagexml","title":"hardis:packagexml","text":"Command Title hardis:packagexml:append hardis:packagexml:remove"},{"location":"commands/#hardisproject","title":"hardis:project","text":"Command Title hardis:project:audit:apiversion hardis:project:audit:callincallout hardis:project:audit:duplicatefiles hardis:project:audit:remotesites hardis:project:clean:emptyitems hardis:project:clean:filter-xml-content hardis:project:clean:flowpositions hardis:project:clean:hiddenitems hardis:project:clean:listviews hardis:project:clean:manageditems hardis:project:clean:minimizeprofiles hardis:project:clean:orgmissingitems hardis:project:clean:references hardis:project:clean:retrievefolders hardis:project:clean:sensitive-metadatas hardis:project:clean:standarditems hardis:project:clean:systemdebug hardis:project:clean:xml hardis:project:configure:auth hardis:project:convert:profilestopermsets hardis:project:create hardis:project:deploy:notify hardis:project:deploy:quick hardis:project:deploy:simulate hardis:project:deploy:smart hardis:project:deploy:sources:dx hardis:project:deploy:sources:metadata hardis:project:deploy:start hardis:project:deploy:validate hardis:project:fix:profiletabs hardis:project:fix:v53flexipages hardis:project:generate:bypass hardis:project:generate:flow-git-diff hardis:project:generate:gitdelta hardis:project:lint hardis:project:metadata:findduplicates"},{"location":"commands/#hardisscratch","title":"hardis:scratch","text":"Command Title hardis:scratch:create hardis:scratch:delete hardis:scratch:pool:create hardis:scratch:pool:localauth hardis:scratch:pool:refresh hardis:scratch:pool:reset hardis:scratch:pool:view hardis:scratch:pull hardis:scratch:push"},{"location":"commands/#hardissource","title":"hardis:source","text":"Command Title hardis:source:deploy hardis:source:push hardis:source:retrieve"},{"location":"commands/#hardiswork","title":"hardis:work","text":"Command Title hardis:work:new hardis:work:refresh hardis:work:resetselection hardis:work:save hardis:work:ws"},{"location":"commands/#helloworld","title":"hello:world","text":"Command Title hello:world"},{"location":"license/","title":"License","text":"<pre><code>                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007\n</code></pre> <p>Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.</p> <pre><code>                        Preamble\n</code></pre> <p>The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.</p> <p>The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.</p> <p>When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.</p> <p>Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.</p> <p>A secondary benefit of defending all users' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate.  Many developers of free software are heartened and encouraged by the resulting cooperation.  However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.</p> <p>The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community.  It requires the operator of a network server to provide the source code of the modified version running there to the users of that server.  Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.</p> <p>An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals.  This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.</p> <p>The precise terms and conditions for copying, distribution and modification follow.</p> <pre><code>                   TERMS AND CONDITIONS\n</code></pre> <p>0. Definitions.</p> <p>\"This License\" refers to version 3 of the GNU Affero General Public License.</p> <p>\"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.</p> <p>\"The Program\" refers to any copyrightable work licensed under this License.  Each licensee is addressed as \"you\".  \"Licensees\" and \"recipients\" may be individuals or organizations.</p> <p>To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work.</p> <p>A \"covered work\" means either the unmodified Program or a work based on the Program.</p> <p>To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.</p> <p>To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.</p> <p>An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.</p> <p>1. Source Code.</p> <p>The \"source code\" for a work means the preferred form of the work for making modifications to it.  \"Object code\" means any non-source form of a work.</p> <p>A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.</p> <p>The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.</p> <p>The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.</p> <p>The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.</p> <p>The Corresponding Source for a work in source code form is that same work.</p> <p>2. Basic Permissions.</p> <p>All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.</p> <p>You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.</p> <p>Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.</p> <p>3. Protecting Users' Legal Rights From Anti-Circumvention Law.</p> <p>No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.</p> <p>When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.</p> <p>4. Conveying Verbatim Copies.</p> <p>You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.</p> <p>You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.</p> <p>5. Conveying Modified Source Versions.</p> <p>You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:</p> <pre><code>a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\n</code></pre> <p>A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.</p> <p>6. Conveying Non-Source Forms.</p> <p>You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:</p> <pre><code>a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\n</code></pre> <p>A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.</p> <p>A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.</p> <p>\"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.</p> <p>If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).</p> <p>The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.</p> <p>Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.</p> <p>7. Additional Terms.</p> <p>\"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.</p> <p>When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.</p> <p>Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:</p> <pre><code>a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\n</code></pre> <p>All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.</p> <p>If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.</p> <p>Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.</p> <p>8. Termination.</p> <p>You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).</p> <p>However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.</p> <p>Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.</p> <p>Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.</p> <p>9. Acceptance Not Required for Having Copies.</p> <p>You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.</p> <p>10. Automatic Licensing of Downstream Recipients.</p> <p>Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.</p> <p>An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.</p> <p>You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.</p> <p>11. Patents.</p> <p>A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor's \"contributor version\".</p> <p>A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.</p> <p>Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.</p> <p>In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.</p> <p>If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.</p> <p>If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.</p> <p>A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.</p> <p>Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.</p> <p>12. No Surrender of Others' Freedom.</p> <p>If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.</p> <p>13. Remote Network Interaction; Use with the GNU General Public License.</p> <p>Notwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software.  This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph.</p> <p>Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.</p> <p>14. Revised Versions of this License.</p> <p>The Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.</p> <p>Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU Affero General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation.</p> <p>If the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.</p> <p>Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.</p> <p>15. Disclaimer of Warranty.</p> <p>THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</p> <p>16. Limitation of Liability.</p> <p>IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</p> <p>17. Interpretation of Sections 15 and 16.</p> <p>If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.</p> <pre><code>                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs\n</code></pre> <p>If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.</p> <p>To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.</p> <pre><code>&lt;one line to give the program's name and a brief idea of what it does.&gt;\nCopyright (C) &lt;year&gt;  &lt;name of author&gt;\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.\n</code></pre> <p>Also add information on how to contact you by electronic and paper mail.</p> <p>If your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source.  For example, if your program is a web application, its interface could display a \"Source\" link that leads users to an archive of the code.  There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements.</p> <p>You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see https://www.gnu.org/licenses/.</p>"},{"location":"salesforce-ai-setup/","title":"Sfdx-hardis AI assistant setup","text":""},{"location":"salesforce-ai-setup/#setup-ai-for-sfdx-hardis","title":"Setup AI for sfdx-hardis","text":""},{"location":"salesforce-ai-setup/#security-considerations","title":"Security considerations","text":"<p>sfdx-hardis uses prompt via API to collect analysis: only Metadata XML or JSON deployment errors are sent in the prompts.</p> <p>If you follow Flows best practices and do not hardcode credentials / tokens in variables, there is no serious risk to send metadata XML to an external LLM (but be aware that you do !)</p> <p>You can see the prompts content if you set env variable <code>DEBUG_PROMPTS=true</code>.</p> <p>The list of prompts used by sfdx-hardis is defined in this source file.</p>"},{"location":"salesforce-ai-setup/#main-configuration","title":"Main configuration","text":"<p>You're lost ? Contact Cloudity, we can do it for you :)</p>"},{"location":"salesforce-ai-setup/#common-variables","title":"Common variables","text":"Variable Description Default AI_MAXIMUM_CALL_NUMBER Maximum allowed number of calls to OpenAi API during a single sfdx-hardis command <code>10000</code> PROMPTS_LANGUAGE Language to use for prompts results (<code>en</code>,<code>fr</code>, or any ISO Language code) <code>en</code> DEBUG_PROMPTS Set to true if you want prompts requests and responses in logs <code>false</code> MAX_DEPLOYMENT_TIPS_AI_CALLS Maximum number of errors that will be analyzed by AI for a single Pull Request <code>20</code> DISABLE_AI In case you want to disable API calls to API without removing your configuration, set to true <code>false</code> IGNORE_AI_CACHE Some processes like Flow description use AI cache files to save calls to prompts API, disable by setting to true <code>false</code>"},{"location":"salesforce-ai-setup/#with-agentforce","title":"With Agentforce","text":"<ul> <li>Agentforce must be activated on the default org used when you call the sfdx-hardis command</li> </ul> <p>You can do that with Salesforce Freemium feature Salesforce Foundations, that offers 200000 Einstein Prompts</p> <p></p> <ul> <li>A prompt template SfdxHardisGenericPrompt (type <code>Flex</code>) must exist in the default org, with input variable PromptText (type <code>FreeText</code>)</li> <li>The connected used must be assigned to permission set Prompt Template User</li> </ul> Variable Description Default USE_AGENTFORCE Set to true to activate the use of Agentforce prompts false GENERIC_AGENTFORCE_PROMPT_TEMPLATE Set this variable to override default prompt template <code>SfdxHardisGenericPrompt</code> GENERIC_AGENTFORCE_PROMPT_URL Set this variable to override default prompt url <code>/services/data/v{{API_VERSION}}/einstein/prompt-templates/{{GENERIC_AGENTFORCE_PROMPT_TEMPLATE}}/generations</code> <p></p> <p></p>"},{"location":"salesforce-ai-setup/#with-openai","title":"With OpenAI","text":"<p>You need to define env variable OPENAI_API_KEY and make it available to your CI/CD workflow.</p> <p>To get an OpenAi API key , register on OpenAi Platform.</p> Variable Description Default OPENAI_API_KEY Your openai account API key OPENAI_MODEL OpenAi model used to perform prompts (see models list) <code>gpt-4o-mini</code>"},{"location":"salesforce-ai-setup/#templates","title":"Templates","text":"<p>You can override default prompts by defining the following environment variables.</p> Prompt Template Description Variables PROMPT_SOLVE_DEPLOYMENT_ERROR Ask AI about how to solve a deployment error ERROR PROMPT_DESCRIBE_FLOW Describe a flow from its XML FLOW_XML PROMPT_DESCRIBE_FLOW_DIFF Describe the differences between 2 flow versions by comparing their XML FLOW_XML_NEW, FLOW_XML_PREVIOUS PROMPT_DESCRIBE_OBJECT Describe Object using sfdx-hardis generated info based on project metadatas OBJECT_NAME, OBJECT_XML, ALL_OBJECTS_LIST, ALL_OBJECT_LINKS PROMPT_COMPLETE_OBJECT_ATTRIBUTES_MD Complete fields and validation rules descriptions in input markdown tables generated by sfdx-hardis OBJECT_NAME, MARKDOWN PROMPT_DESCRIBE_APEX Describe an Apex class from its code CLASS_NAME, APEX_CODE"},{"location":"salesforce-ci-cd-clone-repository/","title":"Clone git repository of a Salesforce project","text":"<ul> <li>Pre-requisites</li> <li>Clone the repository<ul> <li>From the Git server UI</li> <li>From Visual Studio Code</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-clone-repository/#pre-requisites","title":"Pre-requisites","text":"<p>You need to access to a Git repository and the url of the repository to clone.</p> <p>The release manager of the project can provide it.</p> <p>It looks like the following: <code>https://github.com/trailheadapps/dreamhouse-lwc.git</code></p>"},{"location":"salesforce-ci-cd-clone-repository/#clone-the-repository","title":"Clone the repository","text":"<p>If you don't have a folder for your git repositories, create a C:\\git folder and use it as destination for your git clones !</p>"},{"location":"salesforce-ci-cd-clone-repository/#from-the-git-server-ui","title":"From the Git server UI","text":"<p>Git providers UIs sometimes have a button Clone -&gt; Open In VsCode</p> <p>If you can use it, use it :)</p>"},{"location":"salesforce-ci-cd-clone-repository/#gitlab","title":"Gitlab","text":"<p>If later you are prompted for username and password, you might need to create a Personal Access Token (video tuto here) and use it as password.</p> <p>If later, it prompts several times the same password in VsCode, run the following command line</p> <p><code>git config --global credential.helper store</code></p>"},{"location":"salesforce-ci-cd-clone-repository/#azure","title":"Azure","text":""},{"location":"salesforce-ci-cd-clone-repository/#from-visual-studio-code","title":"From Visual Studio Code","text":"<ul> <li>In Visual Studio Code, hit CTRL+Shirt+P then look for command Git clone then click to select it.</li> </ul> <ul> <li>Paste the url of your git repository then hit ENTER<ul> <li>If you are asked for a directory and you don't have one yet, create an empty directory at the root of your hard drive, and select it (examples: <code>C:/git</code> or <code>D:/git</code> )</li> </ul> </li> </ul> <ul> <li>Click on the <code>Open</code> notification in VsCode</li> </ul> <ul> <li>You are now ready to create a new task !</li> </ul>"},{"location":"salesforce-ci-cd-config-cleaning/","title":"Configure a Salesforce CI/CD Cleaning using sfdx-hardis","text":"<ul> <li>Why cleaning sources ?</li> <li>Dashboards</li> <li>Destructive Changes</li> <li>List Views Mine</li> <li>Minimize Profiles</li> <li>System.debug</li> <li>Named metadatas<ul> <li>Case Entitlement</li> <li>DataDotCom</li> <li>Local Field</li> <li>Product Request</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-config-cleaning/#why-cleaning-sources","title":"Why cleaning sources ?","text":"<p>Salesforce CI/CD Pipelines does not natively work without many manual operations to update the XML... so the deployments passes !</p> <p>sfdx-hardis provides a set of commands to automate those boring XML updates that can be called every time a user prepares a merge request using command sf hardis:work:save</p> <p>Here is the list of available automated cleanings, that can also be called manually using command </p> <p>Example of cleaning config in a .sfdx-hardis.yml config file:</p> <pre><code>autoCleanTypes:\n  - destructivechanges\n  - datadotcom\n  - minimizeProfiles\n  - listViewsMine\n</code></pre>"},{"location":"salesforce-ci-cd-config-cleaning/#dashboards","title":"Dashboards","text":"<p>Property: dashboards</p> <p>Removes hardcoded user ids from Dashboards</p>"},{"location":"salesforce-ci-cd-config-cleaning/#destructive-changes","title":"Destructive Changes","text":"<p>Property: destructivechanges</p> <p>Any file corresponding to an element existing in manifest/destructiveChanges.xml is deleted.</p>"},{"location":"salesforce-ci-cd-config-cleaning/#list-views-mine","title":"List Views Mine","text":"<p>Property: listViewsMine</p> <p>List views with scope Mine can not be deployed.</p> <p>As a workaround, scope is set back to Everything in XML, but the list view reference is kept in a property listViewsToSetToMine in .sfdx-hardis.yml, and after deployment, manual clicks are simulated to set back their scope to Mine !</p>"},{"location":"salesforce-ci-cd-config-cleaning/#minimize-profiles","title":"Minimize Profiles","text":"<p>Property: minimizeProfiles</p> <p>It is a bad practice to define on Profiles elements that can be defined on Permission Sets.</p> <p>Salesforce will deprecate such capability in Spring 26.</p> <p>Don't wait for that, and use minimizeProfiles cleaning to automatically remove from Profiles any permission that exists on a Permission Set !</p> <p>The following XML tags are removed automatically:</p> <ul> <li>classAccesses</li> <li>customMetadataTypeAccesses</li> <li>externalDataSourceAccesses</li> <li>fieldPermissions</li> <li>objectPermissions</li> <li>pageAccesses</li> <li>userPermissions (except on Admin Profile)</li> </ul> <p>You can override this list by defining a property minimizeProfilesNodesToRemove in your .sfdx-hardis.yml config file.</p> <p>__</p>"},{"location":"salesforce-ci-cd-config-cleaning/#systemdebug","title":"System.debug","text":"<p>Property: systemDebug</p> <p>System.debug are useless, as explained in this article</p> <p>Comments automatically all System.debug in the code to enhance performances.</p>"},{"location":"salesforce-ci-cd-config-cleaning/#named-metadatas","title":"Named metadatas","text":"<p>Cleaning can remove files related to named elements.</p>"},{"location":"salesforce-ci-cd-config-cleaning/#case-entitlement","title":"Case Entitlement","text":"<p>Property: caseentitlement</p> <p>Removes all Case Entitlement related fields, like Case.EntitlementId and Case.MilestoneStatus</p>"},{"location":"salesforce-ci-cd-config-cleaning/#datadotcom","title":"DataDotCom","text":"<p>Property: datadotcom</p> <p>Removes all Case Data.com related fields, like Account.DandbCompanyId and Account.Jigsaw</p>"},{"location":"salesforce-ci-cd-config-cleaning/#local-field","title":"Local Field","text":"<p>Property: localfields</p> <p>Removes all Local fields, like Account.NameLocal and Lead.CompanyLocal</p>"},{"location":"salesforce-ci-cd-config-cleaning/#product-request","title":"Product Request","text":"<p>Property: productrequest</p> <p>Removes all Local fields, like ProductRequest.ShipToAddress and ProductRequest.ShipmentType</p>"},{"location":"salesforce-ci-cd-config-delta-deployment/","title":"Configure delta deployments on a Salesforce CI/CD Project","text":"<ul> <li>Delta deployments<ul> <li>Full mode</li> <li>Delta mode</li> </ul> </li> <li>Configuration<ul> <li>Base</li> <li>Advanced</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-config-delta-deployment/#delta-deployments","title":"Delta deployments","text":""},{"location":"salesforce-ci-cd-config-delta-deployment/#full-mode","title":"Full mode","text":"<p>By default, all deployments job (check deploy &amp; process deploy) deploy the full content of the <code>package.xml</code> minus what is matching <code>package-no-overwrite.xml</code> (formerly <code>packageDeployOnce.xml</code>)</p> <p></p> <p>This is the safest way to deploy at each level</p> <ul> <li>major to major</li> <li>minor to major</li> </ul>"},{"location":"salesforce-ci-cd-config-delta-deployment/#delta-mode","title":"Delta mode","text":"<p>In order to improve performances on project with large metadata base, you can activate delta deployments for Pull Request/Merge Requests from a minor branch (examples: <code>feature/xxx</code>, <code>debug/xxx</code>) to a major branch (ex: <code>integration</code>, <code>uat</code>, <code>preprod</code>, <code>production</code>: sfdx-hardis will deploy only updated metadatas in the Pull Request / Merge Request.</p> <p></p> <p></p> <p>Merge Requests / Pull Request between major branches (ex: uat to preprod) remains in full deployment mode, to avoid issues with configuration which would have been done directly in the orgs (whereas it shouldn't be, except for Reports, Dashboards and a few metadata types)</p> <p>Examples:</p> <ul> <li>features/config/my-work to integration will be DELTA DEPLOYMENT</li> <li>integration to uat will be FULL DEPLOYMENT</li> <li>hotfixes/fix-stuff to preprod will be DELTA DEPLOYMENT</li> <li>preprod to production will be FULL DEPLOYMENT</li> </ul> <p>\ud83d\udca1 If you want to force the use of full deployment for a PR/MR on a delta project, add \"nodelta\" in your latest commit title or text.</p>"},{"location":"salesforce-ci-cd-config-delta-deployment/#configuration","title":"Configuration","text":""},{"location":"salesforce-ci-cd-config-delta-deployment/#base","title":"Base","text":"<p>To activate delta deployments,you can:</p> <ul> <li>define <code>useDeltaDeployment: true</code> in config/.sfdx-hardis.yml</li> <li>define env variable <code>USE_DELTA_DEPLOYMENT=true</code></li> </ul> <p>In case of temporary deactivation of delta deployments, you can set variable <code>DISABLE_DELTA_DEPLOYMENT=true</code>, it has priority on other configurations.</p> <p>\ud83d\udca1If your sfdx-hardis installation is from before 4.10.0, you might need to update your CI/CD workflows</p> <p>Check updated versions in sfdx-hardis sources</p> <p>It is recommended to use opinionated default sfdx-hardis delta deployment configuration, but if you want to tweak the config you can use the following variables:</p>"},{"location":"salesforce-ci-cd-config-delta-deployment/#advanced","title":"Advanced","text":"<ul> <li>USE_DELTA_DEPLOYMENT_AFTER_MERGE<ul> <li>By default, after a merge sfdx-hardis will try to use QuickDeploy. If not available, it will perform a full deployment. If you want to use a delta deployment anyway, define <code>USE_DELTA_DEPLOYMENT_AFTER_MERGE=true</code></li> </ul> </li> </ul> <ul> <li>ALWAYS_ENABLE_DELTA_DEPLOYMENT<ul> <li>By default, delta deployment is allowed only from minor to major branches. You can force it for PR/MRs between major branches by defining variable <code>ALWAYS_ENABLE_DELTA_DEPLOYMENT=true</code></li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-config-home/","title":"Configure a Salesforce CI/CD Project using sfdx-hardis","text":"<ul> <li>New task Options(#new-task-options)</li> <li>package.xml<ul> <li>Overwrite Management</li> <li>Delta deployments</li> </ul> </li> <li>destructiveChanges.xml</li> <li>Automated sources cleaning</li> <li>Source retrieve issues</li> <li>All configuration properties</li> </ul>"},{"location":"salesforce-ci-cd-config-home/#new-task-options","title":"New task options","text":"<p>Look at all the Overwrite properties of new task command to define the appropriate values of your project.</p>"},{"location":"salesforce-ci-cd-config-home/#packagexml","title":"package.xml","text":"<p>A Salesforce CI/CD repository contains a file manifest/package.xml.</p> <ul> <li>It contains all metadatas that will be deployed by the CI server.</li> </ul> <ul> <li>It is automatically updated when preparing merge requests by command hardis:work:save</li> </ul>"},{"location":"salesforce-ci-cd-config-home/#overwrite-management","title":"Overwrite Management","text":"<ul> <li> <p>It is highly recommended to configure overwrite management, to avoid to overwrite metadatas that are maintained directly in production on purpose</p> <ul> <li>Dashboards</li> <li>Reports</li> <li>Remote site settings</li> <li>Named credentials</li> <li>...</li> </ul> <p>See Overwrite management configuration documentation</p> </li> </ul>"},{"location":"salesforce-ci-cd-config-home/#delta-deployments","title":"Delta deployments","text":"<ul> <li>You can also use delta deployments if your project is big and you have performances issues.</li> </ul>"},{"location":"salesforce-ci-cd-config-home/#source-retrieve-issues","title":"Source retrieve issues","text":"<p>Handle cases when force:source:pull does not retrieve every updated source.</p> <p>See how to force the retrieve of named sources</p>"},{"location":"salesforce-ci-cd-config-home/#destructivechangesxml","title":"destructiveChanges.xml","text":"<p>A Salesforce CI/CD repository contains a file manifest/destructiveChanges.xml.</p> <ul> <li>It contains all metadatas that will be deleted by the CI server.</li> </ul> <ul> <li>It is automatically updated when preparing merge requests by command hardis:work:save</li> </ul>"},{"location":"salesforce-ci-cd-config-home/#automated-sources-cleaning","title":"Automated sources cleaning","text":"<p>You can configure automated cleaning of sources before creating merge requests, using command hardis:work:save</p> <p>Those cleanings can be:</p> <ul> <li>Deletion of sources existing in <code>destructiveChanges.xml</code></li> <li>Remove from Profiles elements that are existing in Permission Sets, like Objects access configuration.</li> <li> <p>etc ...</p> <p>See Overwrite cleaning configuration documentation</p> </li> </ul>"},{"location":"salesforce-ci-cd-config-home/#all-configuration-properties","title":"All configuration properties","text":"<p>.sfdx-hardis.yml allows to make your project highly configuration. Have a look at its list of configuration properties !</p>"},{"location":"salesforce-ci-cd-config-overwrite/","title":"Configure overwrite management on a Salesforce CI/CD Project","text":"<ul> <li>package-no-overwrite.xml<ul> <li>Definition</li> <li>Example</li> </ul> </li> <li>packageDeployOnChange.xml</li> </ul>"},{"location":"salesforce-ci-cd-config-overwrite/#package-no-overwritexml","title":"package-no-overwrite.xml","text":""},{"location":"salesforce-ci-cd-config-overwrite/#definition","title":"Definition","text":"<p>For different reasons, many metadatas are maintained manually, using production Salesforce org Setup</p> <p>To avoid to overwrite manual updates in setup, you must define at least a manifest/package-no-overwrite.xml file. (formerly named <code>packageDeployOnce.xml)</code></p> <p>The rule is simple and must be learnt by heart:</p> <p>Every item which is existing in package.xml AND matching package-no-overwrite.xml AND existing in the target deployment org will NOT be deployed.</p> <p>This means that an item matching package-no-overwrite.xml will be deployed the first time, but never overwritten, so has to be manually maintained in org using Setup.</p> <ul> <li>This file must be located at <code>manifest/package-no-overwrite.xml</code> (formerly packageDeployOnce.xml)</li> <li>It has the same format than a package.xml, but must be written manually</li> <li>It can contain named items, or wildcards <code>*</code></li> <li>Theoretically, any metadata can be added in package-no-overwrite.xml, but here are the most commonly present:<ul> <li>Connected apps</li> <li>Dashboards</li> <li>Named Credentials</li> <li>Profiles</li> <li>Remote Site Settings</li> <li>Reports</li> <li>SAML SSO Configuration</li> <li>Wave items (CRM Analytics)</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-config-overwrite/#example","title":"Example","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?&gt;\n&lt;Package xmlns=\"http://soap.sforce.com/2006/04/metadata\"&gt;\n  &lt;!-- Approval processes can contain reference to usernames --&gt;\n  &lt;types&gt;\n      &lt;members&gt;*&lt;/members&gt;\n      &lt;name&gt;ApprovalProcess&lt;/name&gt;\n  &lt;/types&gt;\n  &lt;!-- Connected apps contain org unique auth info so must never be overwritten --&gt;\n  &lt;types&gt;\n      &lt;members&gt;*&lt;/members&gt;\n      &lt;name&gt;ConnectedApp&lt;/name&gt;\n  &lt;/types&gt;\n  &lt;types&gt;\n    &lt;!-- Apps that contain hardcoded dashboard its must be managed directly in production --&gt;\n    &lt;members&gt;DeclareWork&lt;/members&gt;\n    &lt;members&gt;Facturation&lt;/members&gt;\n    &lt;members&gt;SomeApp2&lt;/members&gt;\n    &lt;name&gt;CustomApplication&lt;/name&gt;\n  &lt;/types&gt;\n  &lt;types&gt;\n    &lt;!-- Once a dashboard is published, it is always managed directly in production --&gt;\n    &lt;members&gt;*&lt;/members&gt;\n    &lt;name&gt;Dashboard&lt;/name&gt;\n  &lt;/types&gt;\n  &lt;types&gt;\n    &lt;!-- flexipages that contain Dashboard ids --&gt;\n    &lt;members&gt;Accueil_administrateur&lt;/members&gt; \n    &lt;members&gt;Accueil_administratif&lt;/members&gt;\n    &lt;members&gt;Accueil_Commerciaux&lt;/members&gt;\n    &lt;members&gt;Accueil_Direction&lt;/members&gt;\n    &lt;members&gt;Accueil_Recrutement&lt;/members&gt;\n    &lt;name&gt;Flexipage&lt;/name&gt;\n  &lt;/types&gt; \n  &lt;types&gt;\n    &lt;!-- Name Credentials can contain auth info that are different between dev, uat, preprod and prod: let's not overwrite them ! --&gt;\n    &lt;members&gt;*&lt;/members&gt;\n    &lt;name&gt;NamedCredential&lt;/name&gt;\n  &lt;/types&gt;  \n  &lt;types&gt;\n    &lt;!-- Use permission sets --&gt;\n    &lt;members&gt;*&lt;/members&gt;\n    &lt;name&gt;Profile&lt;/name&gt;\n  &lt;/types&gt;\n  &lt;types&gt;\n    &lt;!-- Remote site settings can be different between dev, uat, preprod and prod: let's not overwrite them ! --&gt;\n    &lt;members&gt;*&lt;/members&gt;\n    &lt;name&gt;RemoteSiteSetting&lt;/name&gt;\n  &lt;/types&gt;  \n  &lt;types&gt;\n    &lt;!-- Reports are maintained directly in production --&gt;\n    &lt;members&gt;*&lt;/members&gt;\n    &lt;name&gt;Report&lt;/name&gt;\n  &lt;/types&gt;\n    &lt;!-- SSO Config must be performed directly in org setup --&gt;  \n  &lt;types&gt;\n      &lt;members&gt;*&lt;/members&gt;\n      &lt;name&gt;SamlSsoConfig&lt;/name&gt;\n  &lt;/types&gt;\n  &lt;!-- Wave items in case you want to manage them directly in production --&gt;\n  &lt;types&gt;\n    &lt;members&gt;*&lt;/members&gt;\n    &lt;name&gt;WaveApplication&lt;/name&gt;\n  &lt;/types&gt;\n  &lt;types&gt;\n    &lt;members&gt;*&lt;/members&gt;\n    &lt;name&gt;WaveDashboard&lt;/name&gt;\n  &lt;/types&gt;\n  &lt;types&gt;\n    &lt;members&gt;*&lt;/members&gt;\n    &lt;name&gt;WaveDataflow&lt;/name&gt;\n  &lt;/types&gt;\n  &lt;types&gt;\n    &lt;members&gt;*&lt;/members&gt;\n    &lt;name&gt;WaveDataset&lt;/name&gt;\n  &lt;/types&gt;\n  &lt;types&gt;\n    &lt;members&gt;*&lt;/members&gt;\n    &lt;name&gt;WaveRecipe&lt;/name&gt;\n  &lt;/types&gt;\n  &lt;types&gt;\n    &lt;members&gt;*&lt;/members&gt;\n    &lt;name&gt;WaveXmd&lt;/name&gt;\n  &lt;/types&gt;\n  &lt;version&gt;53.0&lt;/version&gt;\n&lt;/Package&gt;\n</code></pre>"},{"location":"salesforce-ci-cd-config-overwrite/#packagedeployonchangexml","title":"packageDeployOnChange.xml","text":"<p>packageDeployOnChange.xml is slightly different from package-no-overwrite.xml: it will deploy only if the target metadata XML is different from the source metadata XML that we want to deploy</p> <ul> <li>This file must be located at <code>manifest/packageDeployOnChange.xml</code></li> <li>It can contain named items, or wildcards <code>*</code></li> <li>Is has much lower performances than package-no-overwrite.xml, so must be used wisely</li> <li>Theoretically, any metadata can be added in packageDeployOnChange.xml, but here are the most commonly present:<ul> <li>Sharing Rules</li> <li>Sharing Owner Rules</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-conga/","title":"Configure overwrite management on a Salesforce CI/CD Project","text":""},{"location":"salesforce-ci-cd-conga/#conga-deployments","title":"Conga deployments","text":"<p>It's easy to handle the deployment of Conga Composer configuration with sfdx-hardis.</p> <p>Please see how in the following article.</p> <p></p>"},{"location":"salesforce-ci-cd-create-new-task/","title":"Create new task on a Salesforce DX project","text":"<ul> <li>Use cases</li> <li>Sandbox or scratch org ?</li> <li>Source-tracked sandbox mode<ul> <li>Pre-requisites (sandbox)</li> <li>Start new task on sandbox<ul> <li>Select sandbox</li> <li>Update your sandbox ?</li> <li>Work !</li> </ul> </li> </ul> </li> <li>Scratch Org mode<ul> <li>Pre-requisites (scratch org)</li> <li>Start new task on scratch org</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-create-new-task/#use-cases","title":"Use cases","text":"<p>You use this command when you want to :</p> <ul> <li>Create a dedicated new branch</li> <li>Create a scratch org linked to the branch OR assign a dedicated sandbox to the newly created branch</li> </ul>"},{"location":"salesforce-ci-cd-create-new-task/#sandbox-or-scratch-org","title":"Sandbox or scratch org ?","text":"<p>With SFDX, usually each member of the teams has its own sandbox or scratch org to work on it.</p> <p>The release manager of the project can tell you if you work with scratch orgs or source-tracked sandboxes, and which sandbox to use if you are in sandbox mode.</p>"},{"location":"salesforce-ci-cd-create-new-task/#source-tracked-sandbox-mode","title":"Source-tracked sandbox mode","text":""},{"location":"salesforce-ci-cd-create-new-task/#pre-requisites-sandbox","title":"Pre-requisites (sandbox)","text":"<p>You need credentials to login on the source-tracked sandbox you'll work with. It can be:</p> <ul> <li>An existing source-tracked sandbox<ul> <li>Existing source-tracked sandboxes must be refreshed from time to time to avoid too many conflicts, discuss with your Release Manager !</li> <li>Release managers: When you create or refresh a sandbox, you can easily activate invalid users with a few clicks</li> </ul> </li> <li>A new source-tracked sandbox that you can create from production org</li> </ul> <p>It is recommended to create sandbox from the org that is related to the target git branch.</p> <p></p>"},{"location":"salesforce-ci-cd-create-new-task/#start-new-task-on-sandbox","title":"Start new task on sandbox","text":""},{"location":"salesforce-ci-cd-create-new-task/#select-sandbox","title":"Select sandbox","text":"<ul> <li>Open VsCode SFDX Hardis extension by clicking on  in VsCode left bar (loading can task several seconds)</li> </ul> <ul> <li>Click on </li> </ul> <ul> <li>Answer the questions then select Sandbox when prompted<ul> <li>If the sandbox is not proposed in the list, select the option to authenticate to your desired sandbox</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-create-new-task/#update-your-sandbox","title":"Update your sandbox ?","text":"<ul> <li>When prompted if you want to update your sandbox:<ul> <li>Select <code>yes</code> only if you have NO pending work in your sandbox that you'll want to publish later<ul> <li>If the update script fails, you can manually deploy single metadatas using <code>Right click -&gt; Deploy to org</code> (see screenshot below)</li> </ul> </li> <li>Otherwise, select <code>no</code></li> </ul> </li> </ul> <p>Example of manual deploy of a metadata that you think could have been updated in parent branch, after an Update sandbox failure</p> <p></p>"},{"location":"salesforce-ci-cd-create-new-task/#work","title":"Work","text":"<ul> <li> <p>At the end of the script execution:</p> <ul> <li>If you want to reset the sandbox tracking (meaning you don't care about the previous updates in your sandbox), you can click on command </li> <li>Click on  and you can start working in it :)</li> </ul> </li> </ul> <p> Under the hood</p> <p>See details in hardis:work:new command documentation</p>"},{"location":"salesforce-ci-cd-create-new-task/#scratch-org-mode","title":"Scratch Org mode","text":""},{"location":"salesforce-ci-cd-create-new-task/#pre-requisites-scratch-org","title":"Pre-requisites (scratch org)","text":"<p>You need the credentials to login on the Dev Hub Org (usually the production environment)</p>"},{"location":"salesforce-ci-cd-create-new-task/#start-new-task-on-scratch-org","title":"Start new task on scratch org","text":"<ul> <li>Open VsCode SFDX Hardis extension by clicking on  in VsCode left bar</li> </ul> <ul> <li>Click on </li> </ul> <ul> <li>Answer the questions then select Scratch Org when prompted<ul> <li>If the sandbox is not proposed in the list, select the option to authenticate to your desired sandbox</li> </ul> </li> </ul> <ul> <li>Wait for the sandbox creation script to be completed, and you can start working in it :)<ul> <li>If you see errors while creating the sandbox, request support from the project release manager</li> </ul> </li> </ul> <p> Under the hood</p> <p>See details in hardis:work:new command documentation</p>"},{"location":"salesforce-ci-cd-deploy-major-branches/","title":"Deploy to major branches and orgs with Salesforce CI/CD","text":"<ul> <li>Minor and Major branches</li> <li>Merge requests between major branches</li> </ul>"},{"location":"salesforce-ci-cd-deploy-major-branches/#minor-and-major-branches","title":"Minor and Major branches","text":"<p>Minor branches are individual git branches that do not have a CI/CD associated org</p> <p>Major branches are git branches that have a CI/CD associated org, and each new commit in a major branch automatically triggers a deployment to the associated org.</p> <p></p> <p>Examples:</p> <ul> <li>Minor to major: When a merge request from <code>dev_nico</code> to <code>\u00ecntegration</code> (1) is validated and merged, a new state (commit) is detected in branch <code>integration</code>, so CI server automatically deploys to <code>associated Salesforce org Integration</code> (2)</li> </ul> <ul> <li>Major to Major: When a merge request from <code>integration</code> to <code>uat</code> (3) is validated and merged, a new state (commit) is detected in branch <code>uat</code>, so CI server automatically deploys to <code>associated Salesforce org UAT</code> (4)</li> </ul> <ul> <li>Major to Major: When a merge request from <code>preprod</code> to <code>production</code> (5) is validated and merged, a new state (commit) is detected in branch <code>production</code>, so CI server automatically deploys to <code>associated Salesforce org Production</code> (6)</li> </ul>"},{"location":"salesforce-ci-cd-deploy-major-branches/#merge-requests-between-major-branches","title":"Merge requests between major branches","text":"<ul> <li>Create a New Merge request<ul> <li>Set a meaningful title, like MAJOR: recette to uat or MAJOR: uat to production</li> <li>Make sure that Delete source after merge and Squash commits are UNCHECKED</li> </ul> </li> <li>Click on Submit merge request</li> </ul> <ul> <li>Controlling jobs are automatically launched, and should pass as merge requests from minor branches has been in success<ul> <li>If jobs fail, it means that you need to perform manual actions in target org, like activating features or manually rename elements if metadatas API Names has been renamed (which is a bad practice but happens)</li> </ul> </li> </ul> <ul> <li>Once all jobs are in success, merge the merge request<ul> <li>It will automatically trigger the deployment to the associated Salesforce org</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-handle-merge-request-results/","title":"Handle Merge Request Results","text":"<ul> <li>Conflicts detection</li> <li>Deployment simulation</li> <li>Quality gate</li> </ul>"},{"location":"salesforce-ci-cd-handle-merge-request-results/#conflicts-detection","title":"Conflicts detection","text":"<p>If you are about to overwrite the work of one of your colleagues, a conflicts message will appear.</p> <p></p> <ul> <li>If you are trained with git, you can merge conflicts by merging the target branch in your own branch</li> <li>Otherwise, call your release manager !</li> </ul>"},{"location":"salesforce-ci-cd-handle-merge-request-results/#deployment-simulation","title":"Deployment simulation","text":"<p>When you create a Merge Request to a major git branch, for example <code>integration</code>, sfdx-hardis will simulate a deployment to the related major Salesforce org, for example Integration org.</p> <p>It will also run Apex test classes and Apex code coverage.</p> <p>The result will be displayed in a message on the Merge Request UI</p> <p></p> <p>If you see errors, please check Solve deployment errors documentation</p>"},{"location":"salesforce-ci-cd-handle-merge-request-results/#quality-gate","title":"Quality gate","text":"<p>Any Merge Request will trigger a technical quality gate, that will check for:</p> <ul> <li>Apex best practices using PMD</li> <li>LWC best practices using eslint</li> <li>Security issues</li> <li>Excessive copy-pastes</li> </ul> <p>The result will be displayed in a message on the Merge Request UI</p> <p></p> <p>If you see errors, please check Solve MegaLinter errors documentation</p>"},{"location":"salesforce-ci-cd-home/","title":"Salesforce CI/CD with sfdx-hardis","text":"<ul> <li>Introduction</li> <li>Use sfdx-hardis CI/CD</li> <li>Release Management</li> <li>Setup sfdx-hardis CI/CD</li> </ul>"},{"location":"salesforce-ci-cd-home/#introduction","title":"Introduction","text":"<p>There are many ways to do DevOps with Salesforce, each of them have their advantages and inconveniences, like showed in the following comparison table.</p> <p></p> <p>You can setup and use a full CI/CD pipeline for your Salesforce projects using sfdx-hardis, with advanced features:</p> <ul> <li>Admins are autonomous to build their pull requests with clicks on VsCode Extension, no command lines</li> <li>Delta Deployments: Improve performances by deploying only updated metadatas</li> <li>Overwrite Management: Define which metadatas will never be overwritten if they are already existing in the target org of a deployment</li> <li>Smart Apex Test Runs: If your Pull Request to a sandbox can not break Apex Tests, just don't run them to improve performances.</li> <li>Automated sources cleaning: Clean profiles from attributes existing on permission sets, clean flow positions...</li> <li>Integration with Messaging platforms: Receive detailed deployment notifications on Slack, Microsoft Teams and Emails</li> <li>Integration with ticketing systems: JIRA, Azure Boards, or any other tool</li> </ul> <p>We provide ready to use CI/CD pipeline workflows for the following Git platforms, with results of Deployment simulation jobs as comments on Pull Requests:</p> <ul> <li>Gitlab</li> <li>Azure</li> <li>Github</li> <li>BitBucket</li> </ul> <p>Pipelines can easily be adapted to other platforms like Jenkins or TeamCity</p> <p>If you speak fluently git, sfdx &amp; DevOps, you can be fully autonomous to setup and use Salesforce CI/CD, otherwise you can contact us at Cloudity (or your favorite Salesforce integrator) and we'll be glad to assist you :)</p> <p></p> <p>As everything is open-source, there is no license costs !</p> <p>See presentation of sfdx-hardis at Dreamforce !</p> <p>See Slides of Dreamforce 23 session</p> <p>Here is an advanced example of a Salesforce CI/CD Pipeline that you can easily define using sfdx-hardis. You can define much simpler branch/orgs models, to manage only RUN operations.</p> <p></p> <p>See detailed article on SalesforceDevOps.net</p> <p></p> <p>See quick demo video for a Contributor</p>"},{"location":"salesforce-ci-cd-home/#use-sfdx-hardis-cicd","title":"Use sfdx-hardis CI/CD","text":"<p>Please read Contributor Guide to know how to work on CI/CD projects, as an Business consultant, a Developer or a Release Manager</p>"},{"location":"salesforce-ci-cd-home/#release-management","title":"Release Management","text":"<p>Please read Release Manager Guide to know how to be a release manager on Salesforce CI/CD project.</p>"},{"location":"salesforce-ci-cd-home/#setup-sfdx-hardis-cicd","title":"Setup sfdx-hardis CI/CD","text":"<p>Please read Setup Guide to know how to initialize and maintain a Salesforce CI/CD project.</p>"},{"location":"salesforce-ci-cd-hotfixes/","title":"Handle deployment of hotfix in production with Salesforce CI/CD","text":""},{"location":"salesforce-ci-cd-hotfixes/#build-run","title":"BUILD &amp; RUN","text":"<p>Except for projects in maintenance that contain RUN only, a project is separated into 2 sections:</p> <ul> <li>the RUN stream: Fast cycle, to often deploy minor changes and fixes</li> </ul> <ul> <li>the BUILD stream: Project cycle, to build more advanced features and enhancements, that require User Acceptance Testing</li> </ul> <p></p>"},{"location":"salesforce-ci-cd-hotfixes/#the-build","title":"THE BUILD","text":"<p>This is the layer where you prepare the next major or minor version.</p> <p>Such new features will go through integration level, then uat level where they will be qualified and validated by business users.</p> <p>When the User Acceptance Test will be validated in uat org, then uat can be merged into preprod, and just after minimal tests (mostly technical), preprod will soon be merged into production.</p> <p>Is it important that major features or enhancements are not tested directly at preprod level, because while the next version is being validated in preprod, it is not possible for the RUN to deploy anything into production.</p>"},{"location":"salesforce-ci-cd-hotfixes/#the-run","title":"THE RUN","text":"<p>Daily maintenance of the production Salesforce org must be very reactive, the RUN level will allow you to often deploy patch versions.</p> <p>As we usually can not wait for the next minor or major version to be deployed in production, projects need a way to quickly deploy hot fixes into production. That layer is called the RUN, and is exclusively about preprod and main branches.</p> <p>To summarize, you will publish at RUN level, but also at BUILD level, so when the BUILD will be merged in the RUN, there will be no overwrite triggering regressions.</p> <p>The hotfix process is the following:</p> <p>Note: in this example, we merge directly in preprod, but in more advanced organizations we can define a branch/org uat_run as intermediate layer before merging to preprod</p> <ul> <li> <p>IMPLEMENT HOTFIX (1)</p> <ul> <li>Create new task with preprod as target when prompted, named <code>my-very-hot-hotfix</code> for example</li> </ul> <ul> <li>Work on a dev sandbox that has been cloned from production</li> </ul> </li> </ul> <ul> <li> <p>DEPLOYMENT IN RUN LAYER (2)</p> <ul> <li>Create Pull Request from <code>my-very-hot-hotfix</code> to <code>preprod</code> &amp; merge it after controls (do not select \u201cdelete after merge\u201d )</li> </ul> <ul> <li>Create Pull request from <code>preprod</code> to <code>main</code></li> </ul> <ul> <li>Merge <code>preprod</code> to <code>main</code> after control checks are green.</li> </ul> </li> </ul> <ul> <li> <p>RETROFIT IN BUILD LAYER (3)</p> <ul> <li>Create a sub-branch to <code>integration</code>, named <code>retrofit-from-run</code> for example</li> </ul> <ul> <li>Using Git IDE, manually merge <code>main</code> (or <code>preprod</code>) branch into <code>retrofit-from-run</code></li> </ul> <ul> <li>If there are git conflicts, solve them before committing</li> </ul> <ul> <li>Create Pull Request from <code>retrofit-from-run</code> to <code>integration</code></li> </ul> <ul> <li>Merge the Pull Request into <code>integration</code>: your retrofit from the RUN to the BUILD is over :)<ul> <li>You might refresh dev sandboxes if your retrofits have lots of impacts</li> </ul> </li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-merge-request-gitlab/","title":"Create a merge request using Gitlab","text":""},{"location":"salesforce-ci-cd-merge-request-gitlab/#create-a-merge-request-using-gitlab","title":"Create a merge request using Gitlab","text":"<ul> <li>Go in your online repository in your web browser (example: <code>https://gitlab.com/trailheadapps/dreamhouse-lwc</code>)</li> </ul> <ul> <li>Go to menu Merge Requests</li> </ul> <ul> <li>Create a New Merge request</li> </ul> <ul> <li>Click on Submit merge request</li> </ul> <ul> <li>Controlling jobs are automatically launched, you can now ask your release manager to validate the merge request<ul> <li>If you are a developer, (or even a business consultant depending on the project organization), you may have the responsibility to make sure than controlling jobs are valid (check-deploy job and code-quality job in success) and eventually fix the errors (See Handle merge requests errors)</li> </ul> </li> </ul> <ul> <li>If you need to add additional updates to an existing merge requests, you just this to follow again this guide from the beginning, except the part \"Create a merge request\". Any new commit pushed on a branch where there is already a merge request will trigger again the control jobs.</li> </ul>"},{"location":"salesforce-ci-cd-packaging/","title":"Generate packages and package versions","text":""},{"location":"salesforce-ci-cd-packaging/#pre-requisites","title":"Pre-requisites","text":"<p>sfdx-hardis menus allow to create new packages and new package versions, but to do that you need some pre-requisites.</p> <ul> <li> <p>In order to generate packages, you first need a Dev Hub to link them.</p> <ul> <li>Instructions in Salesforce Documentation</li> </ul> </li> </ul> <ul> <li> <p>If you need to use a namespace with a package (managed or unmanaged), you also need to link you Dev Hub and a dev org where you will create the namespace.</p> <ul> <li>Instructions in Salesforce Documentation</li> </ul> </li> </ul> <ul> <li>Then you need a sfdx-hardis flavored sfdx project, that you can create with <code>sf hardis:project:create</code>, using scratch orgs only option.</li> </ul> <ul> <li>Last, create your package folder (ex: <code>my-package</code>) at the root of the repository, following the same structure than <code>force-app</code>: it will contain your package content.</li> </ul>"},{"location":"salesforce-ci-cd-packaging/#new-package","title":"New package","text":"<p>Use sfdx-hardis menu Packaging -&gt; Create a new package and follow instructions (select the folder that you just created, don't use <code>force-app</code>)</p>"},{"location":"salesforce-ci-cd-packaging/#new-package-version","title":"New package version","text":""},{"location":"salesforce-ci-cd-packaging/#git-branch","title":"Git branch","text":"<p>Create a git sub-branch of your packaging branch (for example <code>pkg/release-v0.1.0</code>)</p>"},{"location":"salesforce-ci-cd-packaging/#increment-package-version","title":"Increment package version","text":"<p>Before being able to generate a new package version, you need to increment the package version in <code>sfdx-project.json</code>.</p> <pre><code>{\n  \"packageDirectories\": [\n    {\n      \"path\": \"package-astran\",\n      \"default\": true,\n      \"package\": \"Astran\",\n      \"versionName\": \"ver 0.1\",                         # Change version name here to match the incremented package version\n      \"versionNumber\": \"0.1.0.NEXT\",                    # Increment version here (Respect SEMVER or you will have errors)\n      \"versionDescription\": \"Astran for Salesforce\"\n    },\n    {\n      \"path\": \"scratch\",\n      \"default\": false\n    }\n  ],\n  \"name\": \"astran\",\n  \"namespace\": \"Astran\",\n  \"sfdcLoginUrl\": \"https://my-devhub-org.salesforce.com\",\n  \"sourceApiVersion\": \"57.0\"\n}\n</code></pre>"},{"location":"salesforce-ci-cd-packaging/#run-create-package-version-command","title":"Run create package version command","text":"<p>Run sfdx-hardis command Packaging -&gt; Create new package version</p> <p></p> <p>Select the package you want to create a version, and input an installation if necessary (otherwise let it blank)</p> <p></p> <p></p> <p>After some time, the new package version will be generated, and you will be able to find its ID in your <code>sfdx-project.json</code></p> <pre><code>{\n    ...\n      \"packageAliases\": {\n        \"Astran\": \"0Ho7S0123010wZWSAU\",\n        \"Astran@0.1.0-1\": \"04t7S000000gYxPQAF\",\n        \"Astran@0.1.0-2\": \"04t7S000000gYm1QAE\",\n        \"Astran@0.1.0-3\": \"04t7S000000gYp7WAG\",\n}\n</code></pre> <p>If you have issues, it might be because you incremented the version as a patch whereas the updates with the previous version require at least a minor version.</p> <p>For example, <code>1.1.4.NEXT</code> can fail, and <code>1.2.0.NEXT</code> will pass</p>"},{"location":"salesforce-ci-cd-packaging/#test-the-beta-version","title":"Test the beta version","text":"<p>(optional but recommended)</p> <p>The latest entry is the one you can use to install the beta package version (every created package version is a beta by default)</p> <p>Example of URL to append at the end of your org domain name: <code>/packaging/installPackage.apexp?p0=04t7S000000gYp7QAG</code></p> <p>Install the beta package in a dummy sandbox to check that its content is ok for you</p>"},{"location":"salesforce-ci-cd-packaging/#pull-request-to-packaging-branch","title":"Pull request to packaging branch","text":"<p>Once you decide the package is ok for you, make a Pull Request to the <code>packaging</code> branch (or <code>main</code> branch, depending on your project config)</p>"},{"location":"salesforce-ci-cd-packaging/#promote-the-beta","title":"Promote the beta","text":"<p>Once you merged your PR in packaging branch (after checking the control jobs are green), you can promote the package.</p> <p>WARNING: Promoting a package is a sensitive operation, because it declares it as production-ready, then you can not remove metadatas from it, and you must respect ascending compatibility to generate new package versions !</p> <p>To promote a package version, run the following command</p> <p><code>sf hardis:package:version:promote</code></p> <p>Example: <code>sf hardis:package:version:promote</code></p> <p>Note: When later you will create a new scratch org in a new development branch, if you have issues, just increment again the <code>versionNumber</code> in <code>sfdx-project.json</code></p>"},{"location":"salesforce-ci-cd-packaging/#create-version-git-tag","title":"Create version git tag","text":"<p>Once you promoted a package, create a git tag with the version id on the commit corresponding to your merged Pull Request</p> <p>Example: <code>v1.1.0</code></p> <p>Push the git tag to origin</p>"},{"location":"salesforce-ci-cd-publish-task/","title":"Publish a task on a Salesforce CI/CD project","text":"<ul> <li>Commit your updates<ul> <li>Retrieve metadatas</li> <li>Stage and commit</li> </ul> </li> <li>Prepare merge request</li> <li>Create merge request<ul> <li>Using Gitlab</li> <li>Using Github</li> <li>Using Azure</li> </ul> </li> <li>Check merge request results</li> </ul>"},{"location":"salesforce-ci-cd-publish-task/#commit-your-updates","title":"Commit your updates","text":"<p>The following video shows how to perform theses operations</p>"},{"location":"salesforce-ci-cd-publish-task/#retrieve-metadatas","title":"Retrieve metadatas","text":"<p>If you made updates on your org that you have not pulled yet, Use command  to pull your latest updates in local files</p> <p>If you updated config elements that you do not see in your local files, you may discuss with your release manager to automate force retrieve metadatas</p>"},{"location":"salesforce-ci-cd-publish-task/#alternative-use-org-browser","title":"Alternative: Use Org Browser","text":"<p>You can also use Salesforce extension Org Browser to manually browse and retrieve specific metadatas</p> <p></p>"},{"location":"salesforce-ci-cd-publish-task/#alternative-use-contextual-menu","title":"Alternative: Use contextual menu","text":"<p>If Org Browser does not see items that you want to retrieve, like list views, you can right click on any listViews folder and use command SFDX: Retrieve source from org</p> <p></p>"},{"location":"salesforce-ci-cd-publish-task/#alternative-use-menu-select-and-retrieve","title":"Alternative: Use menu \"Select and retrieve\"","text":"<p>If it is not possible to use pull configuration, you may retrieve metadatas using  (but it will retrieve locally many files and it will be harder to select the ones you really need, select carefully the items that you stage and commit)</p>"},{"location":"salesforce-ci-cd-publish-task/#stage-and-commit","title":"Stage and commit","text":"<p>In VsCode Git extension, stage and commit created, updated and deleted files that you want to publish</p> <ul> <li>By selecting the metadata files you can see the differences with the previous versions, to know if you want to publish or not an updated file</li> </ul> <ul> <li>Never use Stage all function</li> </ul> <ul> <li>If you see standard items like standard fields that do not contain customizations, do not commit them</li> </ul> <ul> <li>Important: If you think that your sandbox may not be up to date according to elements published by your colleagues, look closely at the diff on those items, and stage only the updates that you want to publish</li> </ul> <p></p> <p></p> <p></p>"},{"location":"salesforce-ci-cd-publish-task/#prepare-merge-request","title":"Prepare merge request","text":"<ul> <li>Once your commit is completed, run command  to prepare your merge request.</li> </ul> <ul> <li>As you committed your files like explained in the previous section, select option  when prompted.</li> </ul> <ul> <li>Wait for the script to complete, and select Push commit to server when prompted</li> </ul> <p> Under the hood</p> <p>The script performs the following operations:</p> <ul> <li>Update <code>manifest/package.xml</code> automatically according to the committed updates</li> <li>Clean XML of metadatas according to .sfdx-hardis.yml config property <code>autoCleanTypes</code> and <code>autoRemoveUserPermissions</code></li> <li>New git commit with automated updates</li> <li>Git push commit to git server</li> </ul> <p>More details in hardis:work:save command documentation</p>"},{"location":"salesforce-ci-cd-publish-task/#create-merge-request","title":"Create merge request","text":"<p>It is now time to create your merge request to technically publish your updates at the upper level !</p> <p>Depending on the CI platform you use, follow the related guide.</p> <p>If you are publishing to a RUN branch (ex: <code>preprod</code>), AND the project also has a BUILD branch (ex: <code>integration</code>), you need to notify the release manager He/she will have to retrofit your updates once published</p> <p>If you are working with a ticketing system like JIRA, make sure to add the full url of the tickets in the MR/PR description, so it will help for the release management. For example, use <code>https://sfdx-hardis.atlassian.net/browse/CLOUDITY-4</code> , not <code>CLOUDITY-4</code></p>"},{"location":"salesforce-ci-cd-publish-task/#using-gitlab","title":"Using Gitlab","text":"<p>See Create a merge request using Gitlab</p>"},{"location":"salesforce-ci-cd-publish-task/#using-azure","title":"Using Azure","text":"<p>See Create a merge request using Azure</p>"},{"location":"salesforce-ci-cd-publish-task/#using-github","title":"Using GitHub","text":"<p>See Create a merge request using Github</p>"},{"location":"salesforce-ci-cd-publish-task/#check-merge-request-results","title":"Check merge request results","text":"<p>After you create your merge request, check its control jobs results !</p>"},{"location":"salesforce-ci-cd-pull-request-azure/","title":"Create a pull request using Azure","text":""},{"location":"salesforce-ci-cd-pull-request-azure/#create-a-pull-request-using-azure","title":"Create a Pull Request using Azure","text":"<ul> <li>Go in your online repository in your web browser (example: <code>https://dev.azure.com/mycompany/trailheadapps/dreamhouse-lwc</code>)</li> </ul> <ul> <li>Go to menu Repos -&gt; Pull Requests</li> </ul> <ul> <li>Click on  New pull request</li> </ul> <ul> <li>Click on Create</li> </ul> <ul> <li>Controlling jobs are automatically launched, you can now ask your release manager to validate the merge request<ul> <li>If you are a developer, (or even a business consultant depending on the project organization), you may have the responsibility to make sure than controlling jobs are valid (check-deploy job and code-quality job in success) and eventually fix the errors (See Handle merge requests errors)</li> </ul> </li> </ul> <ul> <li>If you need to add additional updates to an existing merge requests, you just this to follow again this guide from the beginning, except the part \"Create a merge request\". Any new commit pushed on a branch where there is already a merge request will trigger again the control jobs.</li> </ul>"},{"location":"salesforce-ci-cd-pull-request-github/","title":"Create a pull request using GitHub","text":""},{"location":"salesforce-ci-cd-pull-request-github/#create-a-pull-request-using-github","title":"Create a Pull Request using GitHub","text":"<p>Not documented yet, see Create a pull request using Azure, it's almost the same !</p> <p>You can also create a pull request here to update this documentation :)</p>"},{"location":"salesforce-ci-cd-release-home/","title":"Salesforce CI/CD Release Manager Guide","text":"<p>In order to respect the best DevOps practices, it's highly recommended for project teams to have members taking the role of Release Manager</p> <p>The release manager(s) responsibilities are:</p> <ul> <li>Train &amp; support all project members about the use Salesforce CI/CD on the project</li> <li>Provide source-tracked sandboxes to users</li> <li>Validate users merge requests</li> <li>Proceed deployments to major branches/org (UAT,Preprod,Production...)</li> <li>Configure CI/CD project</li> </ul> <p>You can also see specific use cases documentation</p> <ul> <li>sfdx-hardis for ISV</li> <li>sfdx-hardis for Conga</li> </ul>"},{"location":"salesforce-ci-cd-retrieve/","title":"Fix sfdx pull issues","text":""},{"location":"salesforce-ci-cd-retrieve/#automated-force-retrieve","title":"Automated force retrieve","text":"<p>It happens that when calling sf hardis:scratch:pull, some elements are not retrieved.</p> <p>The most usual cases are updates on:</p> <ul> <li>CustomApplication</li> <li>RecordTypes</li> </ul> <p>See how to configure .sfdx-hardis to force the retrieve of metadatas with autoRetrieveWhenPull property.</p>"},{"location":"salesforce-ci-cd-retrieve/#manual-retrieve","title":"Manual Retrieve","text":"<p>You can also use command  to manually retrieve metadatas, but it will pull a lot of metadatas so you will have to carefully select them for your commit.</p> <p> Under the hood</p> <p>See details in hardis:source:retrieve command documentation</p>"},{"location":"salesforce-ci-cd-setup-activate-org/","title":"Configure Orgs","text":""},{"location":"salesforce-ci-cd-setup-activate-org/#production-org-settings","title":"Production Org Settings","text":""},{"location":"salesforce-ci-cd-setup-activate-org/#dev-hub-and-sandbox-tracking","title":"Dev Hub and Sandbox Tracking","text":"<p>You must declare an org (usually production) as a DevHub and activate sandbox tracking to be able to work with advanced features of Salesforce DX</p> <ul> <li>Login to Dev Hub org</li> </ul> <ul> <li>Go to <code>Setup -&gt; Dev Hub</code></li> </ul> <ul> <li>Activate Dev Hub</li> </ul> <ul> <li>Activate Sandbox tracking<ul> <li>If sandbox were already existing, you need to refresh them if you want their source tracking to be activated</li> <li>To use Create from from an existing sandbox, you need to refresh it before the cloning, else the nex sandbox won't have the tracking activated</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-setup-activate-org/#activate-experience-bundle-metadata","title":"Activate Experience Bundle Metadata","text":"<ul> <li>Go to Setup -&gt; Digital Experiences</li> </ul> <ul> <li>Activate Enable ExperienceBundle Metadata API</li> </ul>"},{"location":"salesforce-ci-cd-setup-activate-org/#major-orgs","title":"Major orgs","text":"<p>When there is a new state of a major branch (after a merge), a deployment to the related major Org will be automatically triggered by the CI server.</p> <p>You need to have a Salesforce sandbox corresponding to each major branch.</p> <p>Example:</p> <ul> <li>Branch <code>preprod</code> - create a sandbox named <code>Preprod</code>, cloned from Production org</li> <li>Branch <code>uat</code> - create a sandbox named <code>UAT</code>, cloned from PreProd org</li> <li>Branch <code>integration</code> - create a sandbox named <code>Integration</code>, cloned from UAT org</li> </ul> <p>If you are converting an existing project to CI/CD and already have existing orgs, just create an org <code>Integration</code>, and you'll refresh later <code>UAT</code> and <code>PreProd</code>, once your setup will be more advanced.</p>"},{"location":"salesforce-ci-cd-setup-auth-azure/","title":"Configure Azure CI/CD variables","text":""},{"location":"salesforce-ci-cd-setup-auth-azure/#define-sfdx-hardis-environment-variables","title":"Define sfdx-hardis environment variables","text":"<ul> <li>Go to Project -&gt; Pipelines</li> <li>Select your pipeline</li> <li>Click on Edit , then on Variables</li> <li>Input variable name and value</li> <li>Don't forget to click on save !</li> </ul> <p>More info: Azure documentation</p>"},{"location":"salesforce-ci-cd-setup-auth-bitbucket/","title":"Configure Bitbucket CI/CD variables","text":""},{"location":"salesforce-ci-cd-setup-auth-bitbucket/#define-sfdx-hardis-environment-variables","title":"Define sfdx-hardis environment variables","text":"<ul> <li>Go to Project -&gt; Repository Settings &gt; Repository Variables (you must have Bitbucket authorizations to access this menu)</li> </ul> <p>More info: BitBucket documentation</p>"},{"location":"salesforce-ci-cd-setup-auth-github/","title":"Configure GitHub CI/CD variables","text":""},{"location":"salesforce-ci-cd-setup-auth-github/#define-sfdx-hardis-environment-variables","title":"Define sfdx-hardis environment variables","text":"<ul> <li>Go to Repository -&gt; Settings &gt; Secret and variables -&gt; Actions (you must have Github authorizations to access this menu)</li> </ul> <ul> <li>Create the new secret with the following info:<ul> <li>name: YOUR_VARIABLE_NAME</li> <li>value: <code>Your variable value</code></li> </ul> </li> </ul> <p>More info: GitHub documentation</p>"},{"location":"salesforce-ci-cd-setup-auth-gitlab/","title":"Configure Gitlab CI/CD variables","text":""},{"location":"salesforce-ci-cd-setup-auth-gitlab/#define-sfdx-hardis-environment-variables","title":"Define sfdx-hardis environment variables","text":"<ul> <li>Go to Project -&gt; Settings &gt; CI/CD -&gt; Variables (you must have Gitlab authorizations to access this menu)</li> </ul> <ul> <li>Create the variable with the following info:<ul> <li>name: YOUR_VARIABLE_NAME</li> <li>value: <code>Your variable value</code></li> <li>Select Mask variable if the value is secured, like credentials or tokens</li> <li>Unselect Protected variable</li> </ul> </li> </ul> <p>More info: Gitlab documentation</p>"},{"location":"salesforce-ci-cd-setup-auth-jenkins/","title":"Configure Jenkins CI/CD credentials","text":""},{"location":"salesforce-ci-cd-setup-auth-jenkins/#define-sfdx-hardis-environment-variables","title":"Define sfdx-hardis environment variables","text":"<ul> <li>Go to Dashboard -&gt; Manage Jenkins</li> <li>Under Security tab click on Credentials -&gt; global credentials</li> <li>Click on Add credential , then choose Secret text</li> <li>Input variable name and value</li> <li>Don't forget to click on create !</li> </ul> <p>More info: Jenkins documentation</p>"},{"location":"salesforce-ci-cd-setup-auth/","title":"Configure CI Server authentication to Salesforce orgs","text":""},{"location":"salesforce-ci-cd-setup-auth/#major-orgs","title":"Major orgs","text":"<p>To automate deployments from major branches to their related org, you need to configure the secure authentication from CI server to a SF connected app.</p> <p>Note: You need openssl installed on your computer (available in <code>Git bash</code>)</p> <ul> <li>Remain in your initialization branch <code>cicd</code>, or a sub branch of your lowest level major branch (usually <code>integration</code>)</li> <li>For each major branch to link to an org, run the sfdx-hardis command Configuration -&gt;  (<code>sf hardis:project:configure:auth</code>)</li> </ul> <p>For example, run the command for <code>integration</code>, <code>uat</code>, <code>preprod</code> and <code>production</code> major branches.</p> <p>If messages ask you to run twice the same command, it's normal, it's for technical reasons :)</p> <p>If you have errors in your apex tests classes, you may not be able to configure the app for Production org. You will need do create the connected app manually by following the instructions in yellow in the error message. You can do it later, after having succeeded to merge the first merge request in lower major branch (usually <code>integration</code>)</p> <p> Under the hood</p> <p>This command will create/update:</p> <ul> <li>.sfdx-hardis.yml configuration file (repo)</li> <li>Self signed certificate (encrypted in repo as .key)</li> <li>Connected App (uploaded to org via metadata api)</li> <li>CI environment variables (manually set in CI/CD server UIs)</li> </ul> <p>At runtime, we use OAuth 2.0 JSON Web Tokens (JWT) bearer flow with the client Id stored in secured CI/CD Variable + the Certificate decrypted on the fly using token stored in secured CI/CD variable.</p> <p>See how to set CI variables on different Git providers:</p> <ul> <li>Gitlab tutorial</li> <li>Azure tutorial</li> <li>GitHub tutorial</li> <li>BitBucket tutorial</li> <li>Jenkins tutorial</li> </ul>"},{"location":"salesforce-ci-cd-setup-auth/#dev-hub","title":"Dev Hub","text":"<p>If you are using scratch orgs, you need to also configure authentication for the Dev Hub (even if you already configured authentication for production org)</p> <p>To do that, run the following command</p> <pre><code>sf hardis:project:configure:auth --devhub\n</code></pre>"},{"location":"salesforce-ci-cd-setup-existing-org/","title":"Initialize sfdx sources from Salesforce org","text":"<p>If this is a new Salesforce project, or if you want to setup CI/CD in incremental mode, you can skip this step and directly go to Create first merge request.</p> <p>Thanks to tracked sandboxes, you can also decide to opt for an half-incremental init, with only some metadata types like Apex, LWC &amp; Permission sets. In that case retrieve manually the metadatas you need, for example with Org Browser.</p> <p>If you want to go for a full init setup, follow the steps below !</p> <ul> <li>Retrieve Metadatas</li> <li>Automated Metadatas Cleaning<ul> <li>Remove Managed items</li> <li>Remove (hidden) files</li> <li>Remove empty items</li> <li>Standard objects without custom</li> </ul> </li> <li>Manual Metadata Cleaning</li> <li>Retrieve installed packages</li> <li>Create first merge request</li> </ul>"},{"location":"salesforce-ci-cd-setup-existing-org/#retrieve-metadatas","title":"Retrieve Metadatas","text":"<ul> <li>Run the following command that will retrieve locally all the metadatas of production org</li> </ul> <p><code>sf hardis:org:retrieve:sources:dx --shape -u YOURSOURCEORGUSERNAME</code></p> <ul> <li>In case you get an error:<ul> <li>Run the generate package xml command : hardis:org:generate:packagexmlfull</li> <li>Clean up the generated package created by removing the unnecessary metadatas</li> <li>Run retrieve metadata command : sf project:retrieve:start</li> </ul> </li> </ul> <p>Example :</p> <ul> <li><code>sf hardis:org:generate:packagexmlfull --targetusername nico@example.com --outputfile ./packagexmlfull.xml</code></li> <li>Remove Document part on packagexmlfull.xml   <pre><code>    &lt;types&gt;\n        &lt;members&gt;Doc1&lt;/members&gt;\n        &lt;members&gt;Doc2&lt;/members&gt;\n        &lt;members&gt;Doc3&lt;/members&gt;\n        &lt;name&gt;Document&lt;/name&gt;\n    &lt;/types&gt;\n</code></pre></li> <li><code>sf project:retrieve:start -x ./packagexmlfull.xml --ignore-conflicts</code></li> </ul>"},{"location":"salesforce-ci-cd-setup-existing-org/#automated-metadatas-cleaning","title":"Automated Metadatas Cleaning","text":"<p>You have way too many metadatas locally, including standard and managed items that are not customize so are not needed in the repository.</p> <p>Proceed to the following steps to automatically remove many of them, then proceed to the final manual cleaning</p>"},{"location":"salesforce-ci-cd-setup-existing-org/#remove-managed-items","title":"Remove Managed items","text":"<p>Run the following command to delete all elements with a namespace.</p> <pre><code>sf hardis:project:clean:manageditems --namespace SOMENAMESPACE\n</code></pre>"},{"location":"salesforce-ci-cd-setup-existing-org/#remove-hidden-files","title":"Remove (hidden) files","text":"<p>Some items have no namespace but are managed anyway, and contain <code>(hidden)</code>, so they must me deleted with the following command.</p> <pre><code>sf hardis:project:clean:hiddenitems\n</code></pre>"},{"location":"salesforce-ci-cd-setup-existing-org/#remove-empty-items","title":"Remove empty items","text":"<p>Some files are empty and do not need to be kept in repository, remove them using the following command.</p> <pre><code>sf hardis:project:clean:emptyitems\n</code></pre>"},{"location":"salesforce-ci-cd-setup-existing-org/#standard-objects-without-custom","title":"Standard objects without custom","text":"<p>The retrieve command pulled all standard objects and fields.</p> <p>Those which has never been customized do not need to remain in repository, delete them using the following command (that can take some time)</p> <pre><code>sf hardis:project:clean:standarditems\n</code></pre>"},{"location":"salesforce-ci-cd-setup-existing-org/#manual-metadata-cleaning","title":"Manual Metadata Cleaning","text":"<p>Automated Metadata cleaning removed a lot of items, but many are remaining that are useless in the repo.</p> <p>Manually delete files (or even folders) that are maintained directly in production org</p> <ul> <li><code>applications</code>: Delete the ones starting with <code>standard__</code></li> <li><code>\u00e0ppMenus</code>: Delete all folder</li> <li><code>cleanDataServices</code>: Delete all folder</li> <li><code>dashboards</code>: Delete all user dashboards</li> <li><code>emailServices</code>: Delete all folder</li> <li><code>flowDefinitions</code> : Delete all folder (Salesforce now uses <code>flow</code> folder)</li> <li><code>installedPackages</code>: Delete all folder</li> <li><code>layouts</code>: Delete all standard layouts that has not been customized</li> <li><code>profiles</code> : Delete all standard profiles</li> <li><code>profilePasswordPolicies</code>: Delete all folder</li> <li><code>profileSessionSettings</code>: Delete all folder,</li> <li><code>reports</code>: Delete all reports that have been created directly in production org</li> </ul>"},{"location":"salesforce-ci-cd-setup-existing-org/#retrieve-installed-packages","title":"Retrieve installed packages","text":"<p>Run the following command to retrieve packages installed on production org</p> <p><code>sf hardis:org:retrieve:packageconfig -u YOUR_PROD_ORG_USER</code></p> <p>This will update file config/.sfdx-hardis.yml</p> <ul> <li>Keep only the packages that you are using in all orgs.</li> <li>Define installDuringDeployments property to <code>true</code> if you need this package installed on all orgs</li> <li>Define installOnScratchOrgs property to <code>true</code> if you are using scratch orgs and need this package installed when you create a new scratch org</li> </ul> <p>Example:</p> <pre><code>installedPackages:\n  - Id: 0A37Z000000AtDYSA0\n    SubscriberPackageId: 033i0000000LVMYAA4\n    SubscriberPackageName: Marketing Cloud\n    SubscriberPackageNamespace: et4ae5\n    SubscriberPackageVersionId: 04t6S000001UjutQAC\n    SubscriberPackageVersionName: Marketing Cloud\n    SubscriberPackageVersionNumber: 238.3.0.2\n    installOnScratchOrgs: true\n    installDuringDeployments: true\n  - Id: 0A35r0000009F9CCAU\n    SubscriberPackageId: 033b0000000Pf2AAAS\n    SubscriberPackageName: Declarative Lookup Rollup Summaries Tool\n    SubscriberPackageNamespace: dlrs\n    SubscriberPackageVersionId: 04t5p000001BmLvAAK\n    SubscriberPackageVersionName: Release\n    SubscriberPackageVersionNumber: 2.15.0.9\n    installOnScratchOrgs: true\n    installDuringDeployments: true\n</code></pre>"},{"location":"salesforce-ci-cd-setup-existing-org/#create-first-merge-request","title":"Create first merge request","text":"<p>Don't forget to run  and to follow other instructions before creating your initial merge request !</p> <p>Time to create the first merge request !</p> <p>You'll probably have many updates to perform in new commits before having all jobs in green :)</p>"},{"location":"salesforce-ci-cd-setup-git/","title":"Configure Git Branches for Salesforce CI/CD","text":"<ul> <li>Create git repository</li> <li>Create major branches<ul> <li>Small project</li> <li>Medium project</li> <li>Complex project</li> </ul> </li> <li>Protect major branches</li> <li>Define merge rules</li> </ul>"},{"location":"salesforce-ci-cd-setup-git/#create-git-repository","title":"Create git repository","text":"<p>Your git repository will be used to store and manage the versioning of your Salesforce DX sources</p> <ul> <li>Create a new repository, for example myclient-sfdx<ul> <li>Select <code>Initialize repository with a README</code></li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-setup-git/#create-major-branches","title":"Create major branches","text":"<p>In <code>Repository -&gt; Branches</code>, create the branch tree according to the complexity of your project</p> <p>Below are examples of branches tree that you can define.</p>"},{"location":"salesforce-ci-cd-setup-git/#small-project","title":"Small project","text":"<ul> <li>main (will be related to Production org)<ul> <li>preprod (will be related to PreProd org)</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-setup-git/#medium-project","title":"Medium project","text":"<ul> <li>main (will be related to Production org)<ul> <li>preprod (will be related to PreProd org)<ul> <li>integration (will be related to Integration org)</li> </ul> </li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-setup-git/#complex-project","title":"Complex project","text":"<ul> <li>main (will be related to Production org)<ul> <li>preprod (will be related to PreProd org)<ul> <li>uat (will be related to UAT org)<ul> <li>integration (will be related to Integration org)</li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>Example of branching strategy</p> <p></p>"},{"location":"salesforce-ci-cd-setup-git/#protect-major-branches","title":"Protect major branches","text":"<p>To avoid messes, protected branches must be updated only using Merge Requests</p> <ul> <li>Go to menu <code>Settings -&gt; Repository</code></li> <li>Define your developments target branch (usually integration) as Default Branch</li> <li>Protect all branches that will have a corresponding Salesforce org (main, preprod, uat, integration...)</li> </ul> <p>Recommended practice is to set Maintainer in Allowed to merge to all protected branches, except integration</p> <p>Example</p> <p></p>"},{"location":"salesforce-ci-cd-setup-git/#define-merge-rules","title":"Define merge rules","text":"<p>Let's make sure that merge request jobs will be valid before being merged ! (can be deactivated later but at your own risk)</p> <ul> <li>Go in menu <code>Settings -&gt; General</code> , then in section <code>Merge requests</code> (expand)</li> <li>Leave all default values, except checkbox Pipelines must succeed that must be checked</li> </ul> <p></p>"},{"location":"salesforce-ci-cd-setup-home/","title":"Setup a Salesforce CI/CD Project","text":"<ul> <li>Pre-requisites</li> <li>Setup steps</li> </ul>"},{"location":"salesforce-ci-cd-setup-home/#pre-requisites","title":"Pre-requisites","text":"<ul> <li>Training with Git and Salesforce DX<ul> <li>If you don't have experience with them, here are links to learning resources<ul> <li>Git Tuto</li> <li>SFDX Trailmix</li> </ul> </li> </ul> </li> <li>Install necessary applications on your computer</li> <li>Access to a Git server (Gitlab, GitHub, Azure...) with CI/CD server minutes</li> <li>Access to a Salesforce production org</li> </ul>"},{"location":"salesforce-ci-cd-setup-home/#setup-steps","title":"Setup steps","text":"<ul> <li>Create git repository and configure branches</li> <li>Configure Orgs</li> <li>Initialize sfdx project</li> <li>Configure authentication</li> <li>Retrieve sources from an existing org (optional)</li> <li>Configure integrations</li> <li>Configure Salesforce DX project (follow all steps !)</li> <li>Make the first merge request !</li> </ul>"},{"location":"salesforce-ci-cd-setup-init-project/","title":"Initialize SFDX Project","text":"<ul> <li>Clone locally the repository that you created in previous step (or reuse an existing sfdx project repo)</li> </ul> <ul> <li>Create a new git branch named cicd under your lower major branch (usually integration)</li> </ul> <ul> <li>Run command Configuration -&gt;  (<code>sf hardis:project:create</code>) and select options to create a new sfdx-hardis project.</li> </ul> <ul> <li>Open file manifest/package.xml and replace the content by the following code</li> </ul> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?&gt;\n&lt;Package xmlns=\"http://soap.sforce.com/2006/04/metadata\"&gt;\n    &lt;version&gt;59.0&lt;/version&gt; &lt;!-- use current latest Salesforce api version --&gt;\n&lt;/Package&gt;\n</code></pre> <ul> <li>IF you are using Gitlab CI and sandboxes only (not scratch orgs), open gitlab-ci-config.yml at the root of the repository, and set variable USE_SCRATCH_ORGS to <code>\"false\"</code></li> </ul> <ul> <li>Depending your git provider, keep the related workflow files and delete the others<ul> <li>Gitlab<ul> <li><code>gitlab-ci.yml</code></li> <li><code>gitlab-ci-config.yml</code></li> </ul> </li> <li>Azure<ul> <li><code>azure-pipelines-checks.yml</code></li> <li><code>azure-pipelines-deployment.yml</code></li> </ul> </li> <li>GitHub:<ul> <li>Folder <code>.github/workflows</code></li> </ul> </li> <li>Bitbucket<ul> <li><code>bitbucket-pipelines.yml</code></li> </ul> </li> </ul> </li> </ul> <ul> <li>During the CI/CD setup, find variable SFDX_DISABLE_FLOW_DIFF in your git provider pipeline and set its value to true, to avoid to generate too many PR comments during setup. At the end of the setup, you can set back the variable to false.</li> </ul> <p>Some workflow files contain additional configuration instructions, please read the comments at the beginning of the files !</p> <p>You can now go to step Setup CI Authentication</p>"},{"location":"salesforce-ci-cd-setup-integration-api/","title":"Configure API notifications from Salesforce CI/CD","text":""},{"location":"salesforce-ci-cd-setup-integration-api/#api-integration","title":"API Integration","text":"<p>You can send notifications to an external API endpoints, for example to build Grafana dashboards</p> <ul> <li>Deployment from a major branch to a major Salesforce org (ex: integration git branch to Integration Org)</li> <li>Salesforce Org Monitoring<ul> <li>Latest updates</li> <li>Failing apex tests</li> <li>Monitoring checks notifications</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-setup-integration-api/#logs-configuration","title":"Logs Configuration","text":"<p>Define the following CI/CD variables:</p> <ul> <li>NOTIF_API_URL : API endpoint</li> <li>NOTIF_API_BASIC_AUTH_USERNAME : Basic auth username (if using Basic Auth)</li> <li>NOTIF_API_BASIC_AUTH_PASSWORD : Basic auth password/token (if using Basic Auth)</li> <li>NOTIF_API_BEARER_TOKEN : Bearer token (if using bearer auth)</li> </ul> <p>Examples of configuration:</p> <pre><code>NOTIF_API_URL=https://logs-prod-012.grafana.net/loki/api/v1/push\nNOTIF_API_BASIC_AUTH_USERNAME=3435645645\nNOTIF_API_BASIC_AUTH_PASSWORD=GHTRGDHDHdhghg23345DFG^sfg!ss\n</code></pre> <pre><code>NOTIF_API_URL=https://my.custom.endpoint.net\nNOTIF_API_BEARER_TOKEN=DDHGHfgfgjfhQESRDTHFKGKHFswgFHDHGDH\n</code></pre> <p>Example of logs sent to Loki:</p> <pre><code>{\n  \"streams\": [\n    {\n      \"stream\": {\n        \"source\": \"sfdx-hardis\",\n        \"type\": \"LINT_ACCESS\",\n        \"orgIdentifier\": \"hardis-group\",\n        \"gitIdentifier\": \"monitoring-hardis-org/monitoring_hardis_group\",\n        \"severity\": \"warning\"\n      },\n      \"values\": [\n        [\n          \"1715530820301000000\",\n          \"{\\\"metric\\\":3,\\\"_dateTime\\\":\\\"2024-05-12T16:20:20.301Z\\\",\\\"_severityIcon\\\":\\\"\u26a0\ufe0f\\\",\\\"_title\\\":\\\"\u26a0\ufe0f 3 custom elements have no access defined in any Profile or Permission set in monitoringhardisgroup\\\",\\\"_logBodyText\\\":\\\"\u26a0\ufe0f 3 custom elements have no access defined in any Profile or Permission set in monitoringhardisgroup\\\\n\\\\nfield\\\\n\\\\n\u2022 Activity.DBActivityType__c\\\\n\\\\n\u2022 Activity.IdExterneCARRENET__c\\\\n\\\\n\u2022 Activity.Typederendezvous_c\\\\n\\\\nLinks:\\\\n\\\\n  View Job: https://gitlab.onpremise.com/busalesforce/hardis-group-interne/monitoring-hardis-org/-/jobs/12345\\\\n\\\\nPowered by sfdx-hardis: https://sfdx-hardis.cloudity.com\\\",\\\"_logElements\\\":[{\\\"type\\\":\\\"field\\\",\\\"element\\\":\\\"Activity.DB_Activity_Type__c\\\",\\\"severity\\\":\\\"warning\\\",\\\"severityIcon\\\":\\\"\u26a0\ufe0f\\\"},{\\\"type\\\":\\\"field\\\",\\\"element\\\":\\\"Activity.IdExterneCARRENET__c\\\",\\\"severity\\\":\\\"warning\\\",\\\"severityIcon\\\":\\\"\u26a0\ufe0f\\\"},{\\\"type\\\":\\\"field\\\",\\\"element\\\":\\\"Activity.Type_de_rendez_vous__c\\\",\\\"severity\\\":\\\"warning\\\",\\\"severityIcon\\\":\\\"\u26a0\ufe0f\\\"}],\\\"_metrics\\\":{\\\"ElementsWithNoProfileOrPermissionSetAccess\\\":3},\\\"_metricsKeys\\\":[\\\"ElementsWithNoProfileOrPermissionSetAccess\\\"],\\\"_jobUrl\\\":\\\"https://gitlab.onpremise.com/busalesforce/hardis-group-interne/monitoring-hardis-org/-/jobs/399629\\\"}\"\n        ]\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"salesforce-ci-cd-setup-integration-api/#metrics-configuration","title":"Metrics Configuration","text":"<p>Additionally, you can send metrics in Prometheus format to a secondary API endpoint.</p> <p>The configuration is the same than for logs, but with different variable names.</p> <ul> <li>NOTIF_API_METRICS_URL</li> <li>NOTIF_API_METRICS_BASIC_AUTH_USERNAME</li> <li>NOTIF_API_METRICS_BASIC_AUTH_PASSWORD</li> <li>NOTIF_API_METRICS_BEARER_TOKEN</li> </ul> <p>Example of configuration:</p> <pre><code>NOTIF_API_METRICS_URL=https://influx-prod-72-prod-eu-west-2.grafana.net/api/v1/push/influx/write\nNOTIF_API_METRICS_BASIC_AUTH_USERNAME=345673\nNOTIF_API_METRICS_BASIC_AUTH_PASSWORD=GHTRGDHDHdhghg23345DFG^sfg!ss\n</code></pre> <p>Example of metrics sent to Prometheus</p> <pre><code>ApexTestsFailingClasses,source=sfdx-hardis,type=APEX_TESTS,orgIdentifier=hardis-group,gitIdentifier=monitoring-hardis-org/monitoring_hardis_group metric=0.00\nApexTestsCodeCoverage,source=sfdx-hardis,type=APEX_TESTS,orgIdentifier=hardis-group,gitIdentifier=monitoring-hardis-org/monitoring_hardis_group metric=90.00\n</code></pre>"},{"location":"salesforce-ci-cd-setup-integration-api/#troubleshooting","title":"Troubleshooting","text":"<p>If you want to see the content of the API notifications in execution logs, you can define <code>NOTIF_API_DEBUG=true</code></p>"},{"location":"salesforce-ci-cd-setup-integration-api/#grafana-setup","title":"Grafana Setup","text":"<p>If you don't have a Grafana server, you can use Grafana Cloud Free Tier (14 days of logs &amp; metrics retention + 3 users, no credit card required, free forever)</p>"},{"location":"salesforce-ci-cd-setup-integration-api/#create-grafana-account","title":"Create Grafana Account","text":"<p>Create a Grafana Cloud Free account at this url</p> <p></p> <p>Input a Grafana Cloud org name (sfdxhardis in the example)</p> <p></p> <p>Next screen, you can skip setup</p> <p></p>"},{"location":"salesforce-ci-cd-setup-integration-api/#gather-urls-auth-info","title":"Gather URLs &amp; auth info","text":"<p>Create a notepad when you copy paste the following text</p> <pre><code>NOTIF_API_URL=\nNOTIF_API_BASIC_AUTH_USERNAME=\nNOTIF_API_BASIC_AUTH_PASSWORD=\nNOTIF_API_METRICS_URL=\nNOTIF_API_METRICS_BASIC_AUTH_USERNAME=\nNOTIF_API_METRICS_BASIC_AUTH_PASSWORD=\n</code></pre>"},{"location":"salesforce-ci-cd-setup-integration-api/#get-loki-configuration","title":"Get Loki configuration","text":"<p>Go to Connections -&gt; Data Sources and click on grafanacloud-YOURORGNAME-logs (Loki)</p> <p></p> <p>Build Logs push url</p> <ul> <li>Copy value of Connection URL (something like <code>https://logs-prod-012.grafana.net/</code>)</li> <li>Add <code>/loki/api/v1/push</code> at the end</li> <li>Copy value to variables <code>NOTIF_API_URL</code></li> </ul> <p>Example: <code>NOTIF_API_URL=https://logs-prod-012.grafana.net/loki/api/v1/push</code></p> <p>Copy value of Authentication -&gt; User and paste it with variable <code>NOTIF_API_BASIC_AUTH_USERNAME</code></p> <p>Example: <code>NOTIF_API_BASIC_AUTH_USERNAME=898189</code></p> <p>Leave NOTIF_API_BASIC_AUTH_PASSWORD empty for now, you can't get it here</p> <p></p> <p>See Grafana documentation for more info</p>"},{"location":"salesforce-ci-cd-setup-integration-api/#get-prometheus-configuration","title":"Get Prometheus configuration","text":"<p>Go to Connections -&gt; Data Sources and click on grafanacloud-YOURORGNAME-prom (Prometheus)</p> <p></p> <p>Build Metrics push url</p> <ul> <li>Copy value of Connection URL (something like <code>https://prometheus-prod-24-prod-eu-west-2.grafana.net/api/prom</code>)</li> <li>Replace <code>prometheus</code> by <code>influx</code></li> <li>Replace <code>api/prom</code> by <code>api/v1/push/influx/write</code></li> <li>Then copy value to variables <code>NOTIF_API_METRICS_URL</code></li> </ul> <p>Example: <code>NOTIF_API_METRICS_URL=https://influx-prod-24-prod-eu-west-2.grafana.net/api/v1/push/influx/write</code></p> <p>Copy value of Authentication -&gt; User and paste it with variable <code>NOTIF_API_METRICS_BASIC_AUTH_USERNAME</code></p> <p>Example: <code>NOTIF_API_METRICS_BASIC_AUTH_USERNAME=1596503</code></p> <p>Leave <code>NOTIF_API_METRICS_BASIC_AUTH_PASSWORD</code> empty for now, you can't get it here</p> <p></p> <p>See Grafana documentation for more info</p>"},{"location":"salesforce-ci-cd-setup-integration-api/#create-service-account","title":"Create Service Account","text":"<p>Go to Administration -&gt; Users and Access -&gt; Cloud Access Policies, then click on Create Access Policy</p> <p></p> <p>Create the access policy</p> <ul> <li>Define sfdxhardis as name and display name</li> <li>Select write for items metrics, logs, traces, profiles, alerts (only metrics and logs are used today, but who knows hat new features we'll release in the future !)</li> <li>Click on Create</li> </ul> <p></p> <p>On the new Access Policy <code>sfdxhardis</code>, click on Add Token at the bottom right</p> <p></p> <p>Name it sfdxhardis-token, let <code>No expiration</code> then click Create</p> <p></p> <p>On the next screen, click on Copy to clipboard then paste in your notepad in front of variables NOTIF_API_BASIC_AUTH_PASSWORD and NOTIF_API_METRICS_BASIC_AUTH_PASSWORD</p> <p></p> <p>Example:</p> <pre><code>NOTIF_API_BASIC_AUTH_PASSWORD=glc_eyJvIjoiMTEzMjI4OCIsIm4iOiJzZmR4aGFyZGlzLXNmZHhoYXJkaXMtdG9rZW4iLCJrIjoiN0x6MzNXS0hKR1J5ODNsMVE5NU1IM041IiwibSI6eyJyXN0LTIifX0=\nNOTIF_API_METRICS_BASIC_AUTH_PASSWORD=glc_eyJvIjoiMTEzMjI4OCIsIm4iOiJzZmR4aGFyZGlzLXNmZHhoYXJkaXMtdG9rZW4iLCJrIjoiN0x6MzNXS0hKR1J5ODNsMVE5NU1IM041IiwibSI6eyJyXN0LTIifX0=\n</code></pre>"},{"location":"salesforce-ci-cd-setup-integration-api/#configure-ci-variables-on-repository","title":"Configure CI variables on repository","text":"<p>Now configure the 6 variables on the monitoring repository. (Ignore other paragraphs, except those who explain how to modify the pipeline YML to access protected variables)</p> <ul> <li>GitHub</li> <li>Gitlab</li> <li>Azure</li> <li>BitBucket</li> </ul> <p>Now you can force a run of your monitoring job (just add a dumb commit on a monitoring_xxxx branch to trigger it)</p> <p>Optionally , you can look in the logs, you should see [ApiProvider] and [ApiMetricProvider] items.</p> <p></p>"},{"location":"salesforce-ci-cd-setup-integration-api/#download-sfdx-hardis-dashboards","title":"Download sfdx-hardis dashboards","text":"<p>Download all sfdx-hardis Dashboard JSON files from this sfdx-hardis repo folder</p> <p></p>"},{"location":"salesforce-ci-cd-setup-integration-api/#create-dashboard-folder","title":"Create Dashboard folder","text":"<p>Go in menu Dashboards then click on New then New folder</p> <p></p> <p>Create folder <code>Sfdx-hardis Dashboards</code></p> <p></p>"},{"location":"salesforce-ci-cd-setup-integration-api/#import-default-sfdx-hardis-grafana-dashboards","title":"Import default sfdx-hardis Grafana Dashboards","text":"<p>For each downloaded Dashboard JSON file, process the following actions.</p> <p>Click New then Import</p> <p></p> <p>Click on Upload Dashboard JSON File and select one of the Dashboards JSON files you downloaded on your computer.</p> <p></p> <ul> <li>Let Name, Folder and UID default values</li> <li>Select your Loki or Prometheus source. They can be:<ul> <li>grafanacloud-YOURORGNAME-logs (Loki)</li> <li>grafanacloud-YOURORGNAME-prom (Prometheus)</li> </ul> </li> </ul> <p></p> <p>Click Import</p> <p></p> <p>__</p> <p>Repeat the operation for all Dashboard JSON files, and you're all set !</p> <p></p>"},{"location":"salesforce-ci-cd-setup-integration-azure-boards/","title":"Configure Integrations between sfdx-hardis and Azure Boards Work Items","text":"<ul> <li>Azure Boards integration<ul> <li>Update Work Items</li> </ul> </li> <li>Technical notes</li> </ul>"},{"location":"salesforce-ci-cd-setup-integration-azure-boards/#azure-boards-integration","title":"Azure Boards integration","text":"<p>If you use Azure Work Items on your project, sfdx-hardis can use it to enrich its integrations</p> <p>Sfdx-hardis will automatically analyze commits and PR/MR descriptions to collect Work Items references !</p> <p>Make sure to link your Work Items to your Pull Requests before submitting them !</p>"},{"location":"salesforce-ci-cd-setup-integration-azure-boards/#update-work-items","title":"Update Work Items","text":"<p>Add comments and tags on JIRA tickets when they are deployed in a major org</p> <p>Default tag is <code>UPPERCASE(branch_name) + \"_DEPLOYED\"</code>.</p> <p>To override it, define env variable DEPLOYED_TAG_TEMPLATE, that must contain <code>{BRANCH}</code>.</p> <p>Example: <code>DEPLOYED_TO_{BRANCH}</code></p> <p></p>"},{"location":"salesforce-ci-cd-setup-integration-azure-boards/#technical-notes","title":"Technical notes","text":"<p>This integration use the following variables, that must be available from the pipelines:</p> <ul> <li>SYSTEM_COLLECTIONURI</li> <li>SYSTEM_ACCESSTOKEN</li> <li>SYSTEM_TEAMPROJECT</li> <li>BUILD_REPOSITORY_ID</li> </ul>"},{"location":"salesforce-ci-cd-setup-integration-azure/","title":"Configure Integrations between sfdx-hardis and Azure Pipelines","text":""},{"location":"salesforce-ci-cd-setup-integration-azure/#azure-pull-request-notes","title":"Azure Pull Request notes","text":"<p>In order to avoid to have to open job logs to see deployment errors, sfdx-hardis can post them as a thread on the Pull Request UI</p> <p>To use this capability:</p> <ul> <li> <p>A build policy must be defined</p> <ul> <li>See https://docs.microsoft.com/en-US/azure/devops/repos/git/branch-policies?view=azure-devops&amp;tabs=browser#build-validation</li> </ul> </li> </ul> <ul> <li>You must allow Contribute and Contribute to Pull Requests on your Build Service (Settings -&gt; Repositories -&gt; Select your build service)</li> </ul> <p></p> <ul> <li>If you want to use Flow Diff, create an Azure boards ticket exactly named sfdx-hardis tech attachments. IT will be used to link uploaded images.</li> </ul> <p></p> <p>Everytime you will make a pull request, the CI job will post its result as comment !</p> <ul> <li>Example with deployment errors</li> </ul> <p></p> <ul> <li>Example with failing test classes</li> </ul> <p></p> <ul> <li>Example when all is ok :)</li> </ul> <p></p> <p>Notes:</p> <ul> <li>This integration works with sfdx-hardis pipeline, but also on home-made pipelines, just call sf hardis:project:deploy:start instead of <code>sf project:deploy:start</code> !</li> </ul> <ul> <li>This integration use the following variables:<ul> <li>SYSTEM_ACCESSTOKEN: $(System.AccessToken)</li> <li>CI_SFDX_HARDIS_AZURE_TOKEN: $(System.AccessToken)</li> <li>SYSTEM_COLLECTIONURI: $(System.CollectionUri)</li> <li>SYSTEM_JOB_DISPLAY_NAME: $(System.JobDisplayName)</li> <li>SYSTEM_JOB_ID: $(System.JobId)</li> <li>SYSTEM_PULLREQUEST_PULLREQUESTID: $(System.PullRequest.PullRequestId)</li> <li>SYSTEM_TEAMPROJECT: $(System.TeamProject)</li> <li>BUILD_BUILD_ID: $(Build.BuildId)</li> <li>BUILD_REPOSITORY_ID: $(Build.Repository.ID)</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-setup-integration-bitbucket/","title":"Configure Integrations between sfdx-hardis and Bitbucket Pipelines","text":""},{"location":"salesforce-ci-cd-setup-integration-bitbucket/#bitbucket-pull-request-comments","title":"Bitbucket Pull Request comments","text":"<p>In order to avoid to have to open job logs to see deployment errors, sfdx-hardis can post them as a comment on the Pull Request UI</p> <p>To use this capability:</p> <ul> <li>Go to Repository Settings -&gt; Access Tokens  Create Repository Access Token with the following scopes:<ul> <li>pullrequest</li> <li>pullrequest:write</li> <li>repository</li> <li>repository:write</li> </ul> </li> <li>Go to Repository Settings &gt; Repository Variables Create a variable named CI_SFDX_HARDIS_BITBUCKET_TOKEN and provide the access token value</li> </ul> <p>Everytime you will make a pull request, the CI job will post its result as a comment !</p> <ul> <li>Example when all is ok :) </li> </ul> <p>Notes:</p> <ul> <li>This integration works with sfdx-hardis pipeline, but also on home-made pipelines, just call sf hardis:project:deploy:start instead of <code>sf project:deploy:start</code> !</li> </ul> <ul> <li>This integration uses the following variables:<ul> <li>CI_SFDX_HARDIS_BITBUCKET_TOKEN</li> <li>BITBUCKET_WORKSPACE</li> <li>BITBUCKET_REPO_SLUG</li> <li>BITBUCKET_BRANCH</li> <li>BITBUCKET_PR_ID</li> <li>BITBUCKET_BUILD_NUMBER</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-setup-integration-email/","title":"Configure Email notifications from Salesforce CI/CD","text":""},{"location":"salesforce-ci-cd-setup-integration-email/#email-integration","title":"Email Integration","text":"<p>You can receive notifications on one or multiple e-mail addresses when sfdx-hardis events are happening:</p> <ul> <li>Deployment from a major branch to a major Salesforce org (ex: integration git branch to Integration Org)</li> <li>Salesforce Org Monitoring<ul> <li>Latest updates</li> <li>Failing apex tests</li> <li>Monitoring checks notifications</li> </ul> </li> </ul> <p>Note: Salesforce email sending capabilities are used, so every email will count in your org daily email limit.</p> <p></p>"},{"location":"salesforce-ci-cd-setup-integration-email/#configuration","title":"Configuration","text":"<p>Define CI/CD variable NOTIF_EMAIL_ADDRESS with the related email(s)</p> <p>Examples:</p> <ul> <li><code>NOTIF_EMAIL_ADDRESS=admin@cloudity.com</code></li> <li><code>NOTIF_EMAIL_ADDRESS=admin@cloudity.com,another.user@cloudity.com,nico@cloudity.com</code></li> </ul>"},{"location":"salesforce-ci-cd-setup-integration-email/#troubleshooting","title":"Troubleshooting","text":"<p>If the emails are not sent, apply the following configuration on the Monitoring / Deployment user settings</p> <ul> <li>Send through Salesforce</li> </ul> <p></p> <p>That's all, you're all set !</p>"},{"location":"salesforce-ci-cd-setup-integration-generic-ticketing/","title":"Configure Integrations between sfdx-hardis and any ticketing system","text":"<ul> <li>Generic ticketing integration</li> <li>Configuration<ul> <li>GENERIC_TICKETING_PROVIDER_REGEX</li> <li>GENERIC_TICKETING_PROVIDER_URL_BUILDER</li> </ul> </li> <li>Gitlab configuration</li> <li>Technical notes</li> </ul>"},{"location":"salesforce-ci-cd-setup-integration-generic-ticketing/#generic-ticketing-integration","title":"Generic ticketing integration","text":"<p>If you use a ticketing system on your project, sfdx-hardis can use it to enrich its integrations</p> <p>Sfdx-hardis will automatically analyze commits and PR/MR descriptions to collect tickets and build their urls !</p> <p></p>"},{"location":"salesforce-ci-cd-setup-integration-generic-ticketing/#configuration","title":"Configuration","text":"<p>You need to define 2 environment variables in your CI/CD configuration</p>"},{"location":"salesforce-ci-cd-setup-integration-generic-ticketing/#generic_ticketing_provider_regex","title":"GENERIC_TICKETING_PROVIDER_REGEX","text":"<p>Regular expression allowing to detect your ticketing system identifiers in the commits / PR texts.</p> <p>You can use https://regex101.com/ to check your Regular Expression.</p> <p>Example: <code>([R|I][0-9]+-[0-9]+)</code> to detect EasyVista references, that can look like <code>I240103-0133</code> or <code>R230904-0026</code></p>"},{"location":"salesforce-ci-cd-setup-integration-generic-ticketing/#generic_ticketing_provider_url_builder","title":"GENERIC_TICKETING_PROVIDER_URL_BUILDER","text":"<p>Template string allowing to build a hyperlink from a ticket identifier.</p> <p>Must contain a {REF} segment that will be replaced by the ticket identifier.</p> <p>Example: <code>https://instance.easyvista.com/index.php?ticket={REF}</code></p>"},{"location":"salesforce-ci-cd-setup-integration-generic-ticketing/#gitlab-configuration","title":"Gitlab configuration","text":"<p>If you are using Gitlab, you need to update the Merge Request Settings</p> <p>Go to Project -&gt; Settings -&gt; Merge Requests</p> <p>Update Merge Commit Message Template with the following value</p> <pre><code>%{title} Merge branch '%{source_branch}' into '%{target_branch}'\n\n%{issues}\n\nSee merge request %{reference}\n\n%{description}\n\n%{all_commits}\n</code></pre> <p>Update Squash Commit Message Template with the following value</p> <pre><code>%{title} Merge branch '%{source_branch}' into '%{target_branch}'\n\n%{issues}\n\nSee merge request %{reference}\n\n%{description}\n\n%{all_commits}\n</code></pre>"},{"location":"salesforce-ci-cd-setup-integration-generic-ticketing/#technical-notes","title":"Technical notes","text":"<p>This integration use the following variables, that must be available from the pipelines:</p> <ul> <li>GENERIC_TICKETING_PROVIDER_REGEX</li> <li>GENERIC_TICKETING_PROVIDER_URL_BUILDER</li> </ul>"},{"location":"salesforce-ci-cd-setup-integration-github/","title":"Configure Integrations between sfdx-hardis and GitHub","text":""},{"location":"salesforce-ci-cd-setup-integration-github/#github-pull-requests-comments","title":"GitHub Pull Requests comments","text":"<p>In order to avoid to have to open job logs to see deployment errors, sfdx-hardis can post them as Comment on the Pull Request UI</p> <p>To use this capability, all you need is to have permissions on your workflows and send your GITHUB_TOKEN (see full example)</p> <pre><code>    permissions:\n      pull-requests: write\n\n...\n      env:\n        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        FORCE_COLOR: \"1\"\n</code></pre> <p>Everytime you will make a Pull Request, the CI job will post its result as comment !</p> <ul> <li>Example with deployment success</li> </ul> <p></p> <ul> <li>Example with deployment errors</li> </ul> <p></p> <p>Notes:</p> <ul> <li>This integration works with sfdx-hardis pipeline, but also on home-made pipelines, just call sf hardis:project:deploy:start instead of <code>sf project:deploy:start</code> !</li> </ul> <ul> <li> <p>This integration use the following variables:</p> <ul> <li>GITHUB_TOKEN (provided by GitHub but has to be send as option to the deployment jobs)</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-setup-integration-github/#using-github-integration-without-github-actions","title":"Using GitHub integration without Github Actions","text":"<p>You might want to use GitHub integration with other tools than GitHub Actions, like Jenkins or Codefresh</p> <p>In that case, to still benefit from GitHub integration, you need to make sure that the following variables are set.</p> Variable Description GITHUB_TOKEN You might need to Create a GitHub Personal Access Token GITHUB_REPOSITORY ex: <code>MyClient/crm-salesforce</code> GITHUB_REPOSITORY_OWNER ex: <code>MyClient</code> GITHUB_SERVER_URL ex: <code>https://github.mycompanydomain.com</code> GITHUB_API_URL ex: <code>https://github.mycompanydomain.com/api</code> GITHUB_GRAPHQL_URL ex: <code>https://github.mycompanydomain.com/api/graphql</code> GITHUB_WORKFLOW ex: <code>Simulate Deployment (sfdx-hardis)</code> GITHUB_REF ex: <code>refs/pull/503/merge</code> GITHUB_REF_NAME ex: <code>503/merge</code> GITHUB_RUN_ID ex: <code>14282257027</code>. If you can't have it, to not set the variable. PIPELINE_JOB_URL Direct link to the page where we can see your job results. ex: <code>https://yourserver.com/jobs/345</code>"},{"location":"salesforce-ci-cd-setup-integration-gitlab/","title":"Configure Integrations between sfdx-hardis and Gitlab","text":""},{"location":"salesforce-ci-cd-setup-integration-gitlab/#gitlab-merge-request-notes","title":"Gitlab Merge request notes","text":"<p>In order to avoid to have to open job logs to see deployment errors, sfdx-hardis can post them as Notes on the Merge Request UI</p> <p>To use this capability:</p> <ul> <li>Go to Settings -&gt; Access Tokens -&gt; Create a project access token with level Developer and scope api, and name it SFDX HARDIS BOT</li> </ul> <p></p> <ul> <li>Go to Settings -&gt; CI/CD -&gt; Variables -&gt; Create a variable named CI_SFDX_HARDIS_GITLAB_TOKEN and past the access token value</li> </ul> <p></p> <p>Everytime you will make a merge request, the CI job will post its result as comment !</p> <ul> <li>Example with deployment errors</li> </ul> <p></p> <ul> <li>Example with failing test classes</li> </ul> <p></p> <p>Notes:</p> <ul> <li>This integration works with sfdx-hardis pipeline, but also on home-made pipelines, just call sf hardis:project:deploy:start instead of <code>sf project:deploy:start</code> !</li> </ul> <ul> <li>This integration use the following variables:<ul> <li>CI_SFDX_HARDIS_GITLAB_TOKEN</li> <li>CI_SERVER_URL (provided by Gitlab CI)</li> <li>CI_PROJECT_ID (provided by Gitlab CI)</li> <li>CI_MERGE_REQUEST_IID (provided by Gitlab CI)</li> <li>CI_JOB_NAME (provided by Gitlab CI)</li> <li>CI_JOB_URL (provided by Gitlab CI)</li> <li>GITLAB_API_REJECT_UNAUTHORIZED: set to <code>\"false\"</code> if you want to allow connection even without certificate (can be useful on on-premise GitLab instance)</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-setup-integration-jira/","title":"Configure Integrations between sfdx-hardis and Jira","text":"<ul> <li>Jira integration<ul> <li>For git providers</li> <li>For notifications providers</li> <li>Update JIRA issues</li> </ul> </li> <li>Global Configuration<ul> <li>Identify JIRA tickets</li> <li>Jira Cloud</li> <li>Jira On-Premise</li> </ul> </li> <li>Gitlab configuration</li> <li>Technical notes</li> </ul>"},{"location":"salesforce-ci-cd-setup-integration-jira/#jira-integration","title":"Jira integration","text":"<p>If you use JIRA on your project, sfdx-hardis can use it to enrich its integrations</p> <p>Sfdx-hardis will automatically analyze commits and PR/MR descriptions to collect JIRA tickets URLS !</p> <p>You can use the full URL of JIRA tickets in your commits and PR/MR descriptions.</p> <p>Use <code>https://sfdx-hardis.atlassian.net/browse/CLOUDITY-4</code> , not <code>CLOUDITY-4</code> !</p> <p>If you don't use full URL, a default expression will be used, that you can override for a better accuracy (see Identify JIRA Tickets )</p> <p>In that case, <code>CLOUDITY-4</code> will be detected, but make sure that JIRA_HOST is defined</p>"},{"location":"salesforce-ci-cd-setup-integration-jira/#for-git-providers","title":"For git providers","text":"<p>Github, Gitlab, Azure, Bitbucket: Post references to JIRA tickets in PR/MR comments</p> <p></p>"},{"location":"salesforce-ci-cd-setup-integration-jira/#for-notifications-providers","title":"For notifications providers","text":"<p>Slack, MsTeams: Add deployed JIRA tickets in deployment notifications</p> <p></p>"},{"location":"salesforce-ci-cd-setup-integration-jira/#update-jira-issues","title":"Update JIRA issues","text":"<p>Add comments and tags on JIRA tickets when they are deployed in a major org</p> <p>Default tag is <code>UPPERCASE(branch_name) + \"_DEPLOYED\"</code>.</p> <p>To override it, define env variable DEPLOYED_TAG_TEMPLATE, that must contain <code>{BRANCH}</code>.</p> <p>Example: <code>DEPLOYED_TO_{BRANCH}</code></p> <p></p>"},{"location":"salesforce-ci-cd-setup-integration-jira/#global-configuration","title":"Global configuration","text":""},{"location":"salesforce-ci-cd-setup-integration-jira/#identify-jira-tickets","title":"Identify JIRA Tickets","text":"<p>Define CI/CD variable JIRA_TICKET_REGEX with a regular expression allowing to identify the JIRA tickets of your project in commit&amp; Pull Requests titles &amp; bodies, for example <code>(CLOUDITY-[0-9]+)</code></p> <p>If not defined, default value is <code>(?&lt;=[^a-zA-Z0-9_-]|^)([A-Za-z0-9]{2,10}-\\d{1,6})(?=[^a-zA-Z0-9_-]|$)</code></p>"},{"location":"salesforce-ci-cd-setup-integration-jira/#jira-cloud","title":"Jira Cloud","text":"<p>Define CI/CD variables</p> <ul> <li>JIRA_HOST (example: <code>https://sfdx-hardis.atlassian.net/</code>)</li> <li>JIRA_EMAIL (example: <code>nicolas.vuillamy@cloudity.com</code>)</li> <li>JIRA_TOKEN , to create following Atlassian documentation</li> </ul>"},{"location":"salesforce-ci-cd-setup-integration-jira/#jira-on-premise","title":"Jira On-Premise","text":"<p>Note: Does not seems to work with every on-premise JIRA servers</p> <p>Define CI/CD variables</p> <ul> <li>JIRA_HOST (examples: <code>https://jira.cloudity.com/</code> , or with path like <code>https://pid.cloudity.com/jira/</code>)</li> <li>JIRA_PAT, to create following Atlassian Documentation (section Creating PATs in the application)</li> </ul>"},{"location":"salesforce-ci-cd-setup-integration-jira/#gitlab-configuration","title":"Gitlab configuration","text":"<p>If you are using Gitlab, you need to update the Merge Request Settings</p> <p>Go to Project -&gt; Settings -&gt; Merge Requests</p> <p>Update Merge Commit Message Template with the following value</p> <pre><code>%{title} Merge branch '%{source_branch}' into '%{target_branch}'\n\n%{issues}\n\nSee merge request %{reference}\n\n%{description}\n\n%{all_commits}\n</code></pre> <p>Update Squash Commit Message Template with the following value</p> <pre><code>%{title} Merge branch '%{source_branch}' into '%{target_branch}'\n\n%{issues}\n\nSee merge request %{reference}\n\n%{description}\n\n%{all_commits}\n</code></pre>"},{"location":"salesforce-ci-cd-setup-integration-jira/#technical-notes","title":"Technical notes","text":"<p>This integration use the following variables, that must be available from the pipelines:</p> <ul> <li>JIRA_HOST</li> <li>JIRA_EMAIL</li> <li>JIRA_TOKEN</li> <li>JIRA_PAT</li> </ul>"},{"location":"salesforce-ci-cd-setup-integration-ms-teams/","title":"Configure Microsoft Teams notifications from Salesforce CI/CD","text":""},{"location":"salesforce-ci-cd-setup-integration-ms-teams/#ms-teams-integration","title":"Ms Teams Integration","text":"<p>MS Teams Web Hooks have been deprecated my Microsoft so have been removed from sfdx-hardis.</p> <p>Instead, please use Email Notifications with the Ms Teams Channel Email as NOTIF_EMAIL_ADDRESS</p> <p>To get MsTeams email channel, click on the channel contextual menu, then \"Get channel E-mail Address\"</p> <p></p> <p>Then make sure that anyone can send emails to the channel by selecting the first option</p> <p></p>"},{"location":"salesforce-ci-cd-setup-integration-slack/","title":"Configure Integrations between sfdx-hardis and Slack","text":""},{"location":"salesforce-ci-cd-setup-integration-slack/#slack-integration","title":"Slack Integration","text":"<p>You can receive notifications on slack channels when sfdx-hardis events are happening:</p> <ul> <li>Deployment from a major branch to a major Salesforce org (ex: integration git branch to Integration Org)</li> <li>Salesforce Org Monitoring<ul> <li>Latest updates</li> <li>Failing apex tests</li> <li>Monitoring checks notifications</li> </ul> </li> </ul> <p></p>"},{"location":"salesforce-ci-cd-setup-integration-slack/#configure-slack-application","title":"Configure Slack Application","text":"<p>All the following steps are summarized in this video tutorial</p>"},{"location":"salesforce-ci-cd-setup-integration-slack/#create-slack-app","title":"Create slack app","text":"<p>Process only if a sfdx-hardis bot has not yet been configured on your slack. Otherwise, just request the slack token value to your slack administrator</p> <p>Create a slack app here -&gt; https://api.slack.com/apps</p> <ul> <li>Name it <code>sfdx-hardis bot</code> or any nickname you like, like your guinea pig name !</li> <li>Go to permissions and add the following scopes<ul> <li>chat-write</li> <li>chat-write.customize</li> <li>chat-write.public</li> </ul> </li> <li>Create auth token and copy its values</li> </ul>"},{"location":"salesforce-ci-cd-setup-integration-slack/#configure-sfdx-hardis-for-slack","title":"Configure sfdx-hardis for slack","text":"<ul> <li>Create a secret value named SLACK_TOKEN with auth token value in your Git provider configuration</li> </ul> <ul> <li>Create a slack channel that will receive all notifications (ex: #notifs-sfdx-hardis)</li> </ul> <ul> <li>Open the channel info, copy its ID and create a secret value named SLACK_CHANNEL_ID in your git provider configuration</li> </ul> <ul> <li>Invite the sfdx-hardis bot user to the channel (ex: <code>/invite @sfdx-hardis-bot</code>)</li> </ul> <ul> <li>Additionally, you can create branch-scoped channels by creating new channels and create appropriate variables<ul> <li>Example: Channel #notifs-sfdx-hardis-integration and variable SLACK_CHANNEL_ID_INTEGRATION</li> </ul> </li> </ul> <ul> <li>You can also define an additional channel to receive only warning, error and critical notifications in another channel<ul> <li>Example: Channel #notifs-monitor-hot and variable SLACK_CHANNEL_ID_ERRORS_WARNINGS</li> </ul> </li> </ul> <ul> <li>Make sure all those variables are visible to your CI/CD pipelines</li> </ul> <p>That's all, you're all set !</p>"},{"location":"salesforce-ci-cd-setup-integrations-home/","title":"Configure Integrations between sfdx-hardis and external tools","text":"<p>Every info that sfdx-hardis can provide is available in log files or console terminals.</p> <p>In order to enhance the user experience, integrations with external tools must be configured.</p>"},{"location":"salesforce-ci-cd-setup-integrations-home/#git-providers","title":"Git Providers","text":"<p>Depending of your git provider, configure one of the following integrations.</p> <ul> <li>GitHub<ul> <li>Deployment status in Merge Request notes</li> <li>Quick Deploy to enhance performances</li> </ul> </li> </ul> <ul> <li>Gitlab<ul> <li>Deployment status in Merge Request notes</li> <li>Quick Deploy to enhance performances</li> </ul> </li> </ul> <ul> <li>Azure Pipelines<ul> <li>Deployment status in Pull Request threads</li> <li>Quick Deploy to enhance performances</li> </ul> </li> </ul> <ul> <li>BitBucket<ul> <li>Deployment status in Pull Request comments</li> <li>Quick Deploy to enhance performance</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-setup-integrations-home/#message-notifications","title":"Message notifications","text":"<ul> <li>Slack<ul> <li>Notifications</li> </ul> </li> </ul> <ul> <li>Microsoft Teams<ul> <li>Notifications</li> </ul> </li> </ul> <ul> <li>Email<ul> <li>Notifications</li> </ul> </li> </ul> <ul> <li>API (ex: Grafana)<ul> <li>Notifications</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-setup-integrations-home/#ticketing-providers","title":"Ticketing providers","text":"<ul> <li>Jira<ul> <li>Enrich MR/PR comments by adding tickets references and links</li> <li>Enrich notifications comments by adding tickets references and links</li> <li>Post a comment and a label on JIRA issues when they are deployed in a major org</li> </ul> </li> </ul> <ul> <li>Azure Boards<ul> <li>Enrich MR/PR comments by adding work items references and links</li> <li>Enrich notifications comments by adding work items references and links</li> <li>Post a comment and a tag on Azure Work Items when they are deployed in a major org</li> </ul> </li> </ul> <ul> <li>Generic ticketing<ul> <li>Enrich MR/PR comments by adding tickets references and links</li> <li>Enrich notifications comments by adding tickets references and links</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-setup-merge-request/","title":"First merge request","text":"<ul> <li>Initialization merge request</li> <li>Common issues<ul> <li>Translations</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-setup-merge-request/#initialization-merge-request","title":"Initialization merge request","text":"<p>Create your first merge request with branch cicd as source, and your lower major branch as target (usually integration)</p> <p>Make sure that before merging your first merge request, file manifest/destructiveChange.xml is empty</p> <p>You will see errors, but it is normal: Follow Maintainer Guide to complete your configuration !</p> <p>Once all controlling jobs are in success, your CI/CD setup is completed !</p>"},{"location":"salesforce-ci-cd-setup-merge-request/#common-issues","title":"Common issues","text":""},{"location":"salesforce-ci-cd-setup-merge-request/#translations","title":"Translations","text":"<p>If you removed Dashboards and reports from the repo, their translations can remain in files like translations/en_US.xml</p> <p>Remove all related XML blocks as they contain unused translations.</p>"},{"location":"salesforce-ci-cd-solve-deployment-errors/","title":"Solve Salesforce deployment errors","text":"<ul> <li>Metadata errors<ul> <li>Fix with new commit</li> <li>Fix with reset commits then new commit</li> </ul> </li> <li>Test classes errors</li> <li>Code Coverage errors</li> <li>SOS, I'm lost</li> </ul>"},{"location":"salesforce-ci-cd-solve-deployment-errors/#metadata-errors","title":"Metadata errors","text":"<p>sfdx-hardis will display the error and often provide tips about how to solve the error.</p> <p></p>"},{"location":"salesforce-ci-cd-solve-deployment-errors/#fix-with-new-commit","title":"Fix with new commit","text":"<p>You can solve the issue, create a new commit and run again command </p>"},{"location":"salesforce-ci-cd-solve-deployment-errors/#fix-with-reset-commits-then-new-commit","title":"Fix with reset commits then new commit","text":"<p>If the issue is caused by the fact that you committed files that you finally decided to not publish, you can reset your selection.</p> <ul> <li>Click on : that will rollback all the previous commits of your current git branch</li> </ul> <ul> <li>Stage and commit again the elements that you want to publish</li> </ul> <ul> <li>Run command </li> </ul>"},{"location":"salesforce-ci-cd-solve-deployment-errors/#test-classes-errors","title":"Test classes errors","text":"<p>That's simple: fix the test classes :)</p> <p>If you are an admin, you might need the help of a developer, who will directly work in your branch</p>"},{"location":"salesforce-ci-cd-solve-deployment-errors/#code-coverage-errors","title":"Code Coverage errors","text":"<p>Don't be lazy, write the missing test classes :)</p> <p>You know you'll need them to be able to deploy in production anyway :)</p>"},{"location":"salesforce-ci-cd-solve-deployment-errors/#sos-im-lost","title":"SOS, I'm lost","text":"<ul> <li>Call your release manager, he/she's here to help you !</li> <li>Google / ChatGPT / Bard the issue</li> <li>Ask on Slack #inte-hotline-cicd if you work at Cloudity</li> <li>Ask on Salesforce StackExchange</li> </ul>"},{"location":"salesforce-ci-cd-solve-megalinter-errors/","title":"Solve Salesforce MegaLinter errors","text":"<ul> <li>Apex best practices using PMD</li> <li>LWC best practices using eslint</li> <li>Security issues</li> <li>Excessive copy-pastes</li> <li>Example of .mega-linter.yml config file</li> </ul>"},{"location":"salesforce-ci-cd-solve-megalinter-errors/#apex-best-practices-using-pmd","title":"Apex best practices using PMD","text":"<p>You don't want technical debt on your project !</p> <p>Download job artifacts that will contain a file <code>sfdx-scanner-report-apex.csv</code>.</p> <p></p> <p>Open the file to see the errors</p> <p></p> <ul> <li>If the errors are in code that has been written by a developer, solve it</li> </ul> <ul> <li>If the errors are from imported or generated classes, you can bypass them by adding annotation <code>@SuppressWarnings('PMD')</code> at the top of the classes</li> </ul> <ul> <li><code>// NOPMD</code> at the end of a line will make an issue ignored, but again use it only in case of false positive, never to \"Publish more quickly\", else you'll create technical debt.<ul> <li>If you use <code>// NOPMD</code>, specify why as comment . Example: <code>// NOPMD Strings already escaped before</code></li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-solve-megalinter-errors/#lwc-best-practices-using-eslint","title":"LWC best practices using eslint","text":"<p>sfdx-scanner-lwc embedded in MegaLinter is hard to use.</p> <p>If you don't succeed, you can define <code>SALESFORCE_SFDX_SCANNER_LWC</code> in <code>DISABLE_LINTERS</code> property in <code>.mega-linter.yml</code> config file.</p>"},{"location":"salesforce-ci-cd-solve-megalinter-errors/#security-issues","title":"Security issues","text":"<p>Solve the security issues if they are critical like hardcoded tokens, or bypass the linters (release manager action only)</p>"},{"location":"salesforce-ci-cd-solve-megalinter-errors/#excessive-copy-pastes","title":"Excessive copy-pastes","text":"<p>Refactor your code to avoid excessive copy-pastes !</p> <p>You can also add exceptions in <code>.jscpd.json</code> file, but really in case it has sense, not out of laziness</p>"},{"location":"salesforce-ci-cd-solve-megalinter-errors/#example-of-mega-linteryml-config-file","title":"Example of .mega-linter.yml config file","text":"<pre><code># Extend from shared sfdx-hardis Mega-Linter configuration :)\nEXTENDS:\n  - https://raw.githubusercontent.com/hardisgroupcom/sfdx-hardis/main/config/sfdx-hardis.mega-linter-config.yml\n\nDISABLE_LINTERS:\n- SALESFORCE_SFDX_SCANNER_LWC\n- SALESFORCE_SFDX_SCANNER_AURA\n- CSS_STYLELINT\n\nSALESFORCE_SFDX_SCANNER_APEX_DISABLE_ERRORS_IF_LESS_THAN: 6 # ONLY THE RELEASE MANAGER CAN UPDATE THIS VALUE !\n</code></pre>"},{"location":"salesforce-ci-cd-use-home/","title":"Salesforce CI/CD Contributor Guide","text":"<ul> <li>Initialization</li> <li>Make updates on your Salesforce project</li> </ul>"},{"location":"salesforce-ci-cd-use-home/#initialization","title":"Initialization","text":"<p>You need a stack of applications and to have Salesforce sources on your computer to be able to start to work on a CI/CD project.</p> <ul> <li>Install necessary applications on your computer (to perform only once by computer)</li> <li>Clone git repository on your computer (to perform only once by Salesforce project)</li> </ul>"},{"location":"salesforce-ci-cd-use-home/#make-updates-on-your-salesforce-project","title":"Make updates on your Salesforce project","text":"<p>Now your computer is ready, let's see how you can use sandboxes or scratch orgs to make updates in your Salesforce projects !</p> <ul> <li>Create a new task</li> <li>Work on your current task</li> <li>Publish your task (by creating a Merge Request)</li> <li>Handle merge requests errors</li> <li>Validate a merge request (Release manager and advanced user only, depending on the project organization)</li> </ul>"},{"location":"salesforce-ci-cd-use-install/","title":"Salesforce CI/CD Installation User guide","text":""},{"location":"salesforce-ci-cd-use-install/#computer-installation-user-guide","title":"Computer Installation user guide","text":"<p>If you installed Salesforce DX or Salesforce CLI using Windows installer, please uninstall it using Windows -&gt; Programs &gt; Uninstall</p> <p>See tutorial</p> <ul> <li>Install Visual Studio code</li> </ul> <ul> <li>Install VsCode extension VsCode SFDX Hardis by searching for Hardis is VsCode extensions plugin pane.</li> </ul> <ul> <li>Once installed, click on  in VsCode left bar</li> </ul> <ul> <li>Messages will appear at the bottom right of VsCode and ask you to install additional applications and activate settings. Follow all of them until there is none left.<ul> <li>When later you'll see such messages again from sfdx-hardis, click to apply them to upgrade applications.</li> </ul> </li> </ul> <p></p> <ul> <li>When no warning in displayed in the dependencies panel, you're all set !</li> </ul> <p></p> <p> Under the hood</p> <p>The installed applications are the following:</p> <ul> <li>Git</li> <li>Node.js</li> <li>Salesforce CLI</li> <li>Salesforce DX plugins<ul> <li>sfdx-hardis</li> <li>Salesforce Data Move Utility</li> <li>SFDX Git Delta</li> <li>Texei Sfdx Plugin</li> </ul> </li> </ul> <p>Now your computer is all set, you can clone your project git repository :)</p>"},{"location":"salesforce-ci-cd-validate-merge-request/","title":"Validate a merge request on a Salesforce CI/CD project","text":"<ul> <li>Conflicts</li> <li>Control jobs<ul> <li>Check deploy job</li> <li>Code Quality job</li> </ul> </li> <li>Merge the Pull Request / Merge Request<ul> <li>Pre-deployment actions</li> <li>Effective merge</li> <li>Post-deployment actions</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-validate-merge-request/#conflicts","title":"Conflicts","text":"<p>This section must be managed by team members with git knowledge</p> <p>If elements has been modified in another branch, you need to manage conflicts before being able to merge.</p> <ul> <li>Merge conflicts then commit and push your updates, it will trigger again the control job with the new branch state.</li> </ul> <p>This video shows how to merge conflicts with Visual Studio Code.</p> <p>In case conflicts are too complicated to manage (like on a Flow for example), you need to:</p> <ul> <li>Retrofit the new version of the flow in your branch (that will overwrite your updates)</li> <li>Sfdx Push it to your source-tracked sandbox or scratch org</li> <li>Make again the updates in the Salesforce Setup</li> <li>Sfdx Pull the updated version in your local branch</li> <li>Git Commit &amp; Push to your branch</li> </ul>"},{"location":"salesforce-ci-cd-validate-merge-request/#control-jobs","title":"Control jobs","text":"<p>Each merge request runs automatically the control jobs that will insure that the future deployment with be valid.</p>"},{"location":"salesforce-ci-cd-validate-merge-request/#check-deploy-job","title":"Check deploy job","text":"<p>See Handle Deployment errors</p>"},{"location":"salesforce-ci-cd-validate-merge-request/#code-quality-job","title":"Code Quality job","text":"<p>See Handle MegaLinter errors</p>"},{"location":"salesforce-ci-cd-validate-merge-request/#merge","title":"Merge","text":"<p>Depending on the project organization, this action can be allowed only to Release managers, or to more team members</p> <p>If there are no conflicts and if all control jobs are in success, you can proceed to the merge of the merge request.</p>"},{"location":"salesforce-ci-cd-validate-merge-request/#pre-deployment-actions","title":"Pre deployment actions","text":"<p>If pre-deployment actions are required, perform them before clicking on the button to merge the Merge Request / Pull Request</p> <p>Pre-deployment actions can usually be found in README.md</p> <p>IMPORTANT: If Custom Profiles are deployed for the first time, you MUST create them manually in target org, by cloning them from \"Minimal access\" Profile</p>"},{"location":"salesforce-ci-cd-validate-merge-request/#effective-merge","title":"Effective merge","text":"<ul> <li>Click on Merge<ul> <li>If the merge request is from a minor branch (dev or config task), make sure that Squash commits and Delete after merge are checked</li> <li>If the merge request if from a major branch (develop, recette, uat, preprod...), make sure that Squash commits and Delete after merge are NOT checked</li> </ul> </li> </ul> <ul> <li>The merge commit in the target branch will trigger a new job that will automatically deploy the updated source to the corresponding Salesforce org</li> </ul>"},{"location":"salesforce-ci-cd-validate-merge-request/#post-deployment-actions","title":"Post deployment actions","text":"<p>If post-deployment actions are required, perform them before clicking on the button to merge the Merge Request / Pull Request</p> <p>Post-deployment actions can usually be found in README.md</p>"},{"location":"salesforce-ci-cd-work-on-task-configuration/","title":"Perform configuration in your Salesforce org","text":"<ul> <li>Configuration<ul> <li>Api names</li> <li>Access management</li> <li>Flows</li> <li>Hardcoded Ids</li> <li>Images</li> <li>User references</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-work-on-task-configuration/#configuration","title":"Configuration","text":"<p>Please follow as much as possible these recommendations when you work on a CI/CD Salesforce project, otherwise it will generate more release management charges and risks of regressions.</p>"},{"location":"salesforce-ci-cd-work-on-task-configuration/#api-names","title":"Api names","text":"<ul> <li>Do not rename API names (field names, picklist values, pages...)</li> </ul> <ul> <li>Do not prefix API Names with numbers: Git provides historization of updates, so it's better to have elements sorted by alphabetical order than by order of creation</li> </ul> <ul> <li>Do not change the type of custom fields: It forces the release manager to perform manual actions</li> </ul>"},{"location":"salesforce-ci-cd-work-on-task-configuration/#access-management","title":"Access management","text":"<ul> <li>Always use Permission Sets instead of Profiles. If you need profiles, discuss with your release manager.</li> </ul> <ul> <li>If you create a Custom Profile, please notify your release manager.<ul> <li>Before the first deployment, this Profile must be created manually in the target org by cloning \"Minimum access\" Profile</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-work-on-task-configuration/#flows","title":"Flows","text":"<ul> <li>If you need to update Flows, discuss to make sure that no other member of the team is updating the same Flow in another branch/org<ul> <li>If it happens, conflicts are not manageable so one of you will later need to perform the updates again</li> </ul> </li> </ul>"},{"location":"salesforce-ci-cd-work-on-task-configuration/#hardcoded-ids","title":"Hardcoded Ids","text":"<ul> <li>Never use hardcoded Ids in Flows and Formulas (or anywhere else)</li> </ul>"},{"location":"salesforce-ci-cd-work-on-task-configuration/#images","title":"Images","text":"<ul> <li>Use static resources or content assets to store images</li> </ul>"},{"location":"salesforce-ci-cd-work-on-task-configuration/#user-references","title":"User references","text":"<ul> <li>Do not use direct references to users, use Public Groups instead</li> </ul> <ul> <li>Share your reports and email templates with public groups, not named users.</li> </ul>"},{"location":"salesforce-ci-cd-work-on-task-development/","title":"Develop on a Salesforce DX project","text":""},{"location":"salesforce-ci-cd-work-on-task-development/#salesforce-development","title":"Salesforce Development","text":""},{"location":"salesforce-ci-cd-work-on-task-development/#update-code-xml-metadatas","title":"Update code &amp; XML Metadatas","text":"<ul> <li>You can update code and XML metadatas using VsCode IDE</li> <li>When you need to upload the updates to your org, use command </li> <li>If you made updates directly on your org, use command  to retrieve into local files the updates that you performed online with point &amp; click</li> <li>Once you have finished, you can publish your task</li> </ul>"},{"location":"salesforce-ci-cd-work-on-task-development/#recommendations","title":"Recommendations","text":"<ul> <li>Use Visual Studio code editor to update code (online Developer Console is not recommended)</li> </ul>"},{"location":"salesforce-ci-cd-work-on-task-install-packages/","title":"Install packages on your org","text":""},{"location":"salesforce-ci-cd-work-on-task-install-packages/#install-packages","title":"Install packages","text":"<p>Packages (managed or not) must never be directly installed in a major org (integration, uat, preprod, production), it has to be done in dev sandbox / scratch orgs</p> <p>If you can find the package id (starting by <code>04T</code>), use sfdx-hardis command  to install package instead of installing them directly with the URL</p> <p>If you installed a package using an URL, use command  to retrieve package config before creating your merge request (be careful of what you commit in .sfdx-hardis.yml file !)</p> <p>Once packages are referenced in <code>.sfdx-hardis.yml</code>, they will automatically be installed on major orgs during CI/CD deployments</p> <p>If you want packages to be installed during deployment check, see with your release manager to define <code>installPackagesDuringCheckDeploy: true</code> in your <code>.sfdx-hardis.yml</code> config file.</p>"},{"location":"salesforce-ci-cd-work-on-task-open-org/","title":"Open your Salesforce org","text":""},{"location":"salesforce-ci-cd-work-on-task-open-org/#open-your-org","title":"Open your org","text":"<p>You can use Salesforce Setup to configure your org as you would do on any sandbox.</p> <ul> <li>Open your Salesforce DX project with Visual Studio Code</li> <li>Open VsCode SFDX Hardis extension by clicking on  in VsCode left bar (loading can task several seconds)</li> <li>Click on  to open your org in browser<ul> <li>If you want to use another org, use menu  to select another one</li> </ul> </li> <li>Perform your configurations in the org</li> <li>Once you have finished, you can publish your task</li> </ul>"},{"location":"salesforce-ci-cd-work-on-task-profiles/","title":"Handle Profiles on a Salesforce CI/CD project","text":""},{"location":"salesforce-ci-cd-work-on-task-profiles/#deploy-profiles","title":"Deploy Profiles","text":""},{"location":"salesforce-ci-cd-work-on-task-profiles/#use-permission-sets","title":"Use Permission Sets","text":"<p>In case an attribute is available on Profiles and Permission Sets: USE PERMISSION SETS :)</p> <ul> <li>Apex Class Access (<code>classAccesses</code>)</li> <li>Custom Metadata Type Access (<code>customMetadataTypeAccesses</code>)</li> <li>External Data Source Access (<code>externalDataSourceAccesses</code>)</li> <li>Field Permissions (<code>fieldPermissions</code>)</li> <li>Object Permissions (<code>objectPermissions</code>)</li> <li>Page Access (<code>pageAccesses</code>)</li> <li>User Permissions (<code>userPermissions (except on Admin Profile)</code>)</li> </ul> <p>If you are on a build project, it is recommended to automate Minimize Profile so such attributes are automatically removed from Profiles before Merge Requests.</p>"},{"location":"salesforce-ci-cd-work-on-task-profiles/#tab-visibility","title":"Tab visibility","text":"<p>When you retrieve a profile, standard tabs visibility is not present in the XML.</p> <p>This is quite boring because if you do nothing, Calendar, Tasks, Home or Contact tab visibilities won't be deployed !</p> <p>To avoid that, standard tab visibility must be added in the Profile XML.</p> <p>You can use sfdx-hardis command Fix Profile Tabs to Show / Hide tabs in your Profile XML files.</p>"},{"location":"salesforce-ci-cd-work-on-task/","title":"Work on a task on a Salesforce DX project","text":""},{"location":"salesforce-ci-cd-work-on-task/#work-on-a-cicd-project","title":"Work on a CI/CD project","text":"<ul> <li>Open your org</li> </ul> <p>There are a set of recommended rules to follow to help the Release Management to be as fluid as possible</p> <ul> <li>Guidelines for Salesforce configuration</li> <li>Guidelines for Profiles &amp; Permissions Sets</li> <li>Guidelines for Package installation</li> <li>Guidelines for Salesforce Development</li> </ul>"},{"location":"salesforce-deployment-assistant-error-list/","title":"Sfdx-hardis deployment assistant list of errors","text":""},{"location":"salesforce-deployment-assistant-error-list/#salesforce-deployment-assistant-errors-list","title":"Salesforce deployment assistant errors list","text":"<p>sfdx-hardis can help solve solve deployment errors using a predefined list of issues and associated solutions</p> <p>See how to setup sfdx-hardis deployment assistant</p> <p>If you see a deployment error which is not here yet, please add it in this file :)</p>"},{"location":"salesforce-deployment-assistant-error-list/#api-version-error","title":"API Version error","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) The (.*) apiVersion can't be \"([0-9]+)\"</code></li> </ul> <p>Resolution</p> <pre><code>{1} metadata has probably been created/updated in a sandbox already upgraded to next platform version (ex: Sandbox in Summer'23 and Production in Spring'23)\n- First, try to update the api version in the XML of {1} metadata file (decrement the number in &lt;apiVersion&gt;{3}.0&lt;/apiVersion&gt;)\n- If it still doesn't work because the metadata structure has changed between version, you may try a sf project:retrieve:start of the metadata by forcing --api-version at the end of the command.\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#allow-deployment-with-pending-apex-jobs","title":"Allow deployment with pending Apex Jobs","text":"<p>Detection</p> <ul> <li>String: <code>You can bypass this error by allowing deployments with Apex jobs in the Deployment Settings page in Setup.</code></li> </ul> <p>Resolution</p> <pre><code>Go to target org, in Setup -&gt; Deployment Settings -&gt; Activate option \"Allow deployments of components when corresponding Apex jobs are pending or in progress.\"\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#can-not-change-field-type-to-a-formula-field","title":"Can not change field type to a formula field","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Cannot update a field from a Formula to something else</code></li> </ul> <p>Resolution</p> <pre><code>You need to manually delete or rename the field in the target org to allow the deployment to pass\n- First, try to manually delete field {1} in the target org\n- if you can't delete {1}, rename it into {1}_ToDel, then once the deployment done, delete {1}_ToDel\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#can-not-change-type-due-to-existing-data","title":"Can not change type due to existing data","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Cannot change type due to existing data</code></li> </ul> <p>Resolution</p> <pre><code>It is usually not recommended to change types of fields, but if it's really necessary you can:\n- Manually change the type of {1} in the target org\n- If you can't manually change the type:\n  - you may modify the dependencies (Formulas, Flows...) using {1}, so they don't use this field\n  - you can also delete dependencies (Formulas, Flows...) using {1}, but make sure they are deployed again later\n- More help: https://help.salesforce.com/s/articleView?id=000327186&amp;type=1\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#can-not-change-field-type-with-picklist","title":"Can not change field type with picklist","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Cannot change which global value set this picklist uses</code></li> </ul> <p>Resolution</p> <pre><code>You probably updated the type of field {1}, and Salesforce does not allows that with deployments. You can:\n- Try to manually change the type of {1} directly in target org, but it may not be technically possible\n- Delete field {1} in target org: it will be recreated after deployment (but you will loose data on existing records, so be careful if your target is a production org)\n- Create another field with desired type and manage data recovery if the target is a production org\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#can-not-delete-custom-field","title":"Can not delete custom field","text":"<p>Detection</p> <ul> <li>RegExp: <code>This (.*) is referenced elsewhere in salesforce.com</code></li> <li>RegExp: <code>Le champ personnalis\u00e9 (.*) est utilis\u00e9 dans (.*)</code></li> </ul> <p>Resolution</p> <pre><code>Custom field {1} can not be deleted because it is used elsewhere. Remove its references ans try again\nTHIS MAY BE A FALSE POSITIVE if you are just testing the deployment, as destructiveChanges are deployed separately from updated items deployment check\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#can-not-delete-record-type","title":"Can not delete record type","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Cannot delete record type through API</code></li> </ul> <p>Resolution</p> <pre><code>You need to manually delete record type {1} in target org\n- Edit record type {1}, uncheck \"Active\"\n- Delete record type {1}\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#can-not-find-folder","title":"Can not find folder","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Cannot find folder:(.*)</code></li> </ul> <p>Resolution</p> <pre><code>Folder {2} is missing.\n- If folder {2} is existing in sources, add it in related package.xml\n- If folder {2} is not existing in DX sources, please use sf hardis:project:clean:retrievefolders to retrieve it\n- If both previous solutions did not work, go create manually folder {2} in target org\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#can-not-find-user","title":"Can not find user","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Cannot find a user that matches any of the following usernames</code></li> </ul> <p>Resolution</p> <pre><code>You made reference to username(s) in {1}, and those users probably do not exist in target org.\n- Do not use named users, but user public groups for assignments -&gt; https://help.salesforce.com/s/articleView?id=sf.creating_and_editing_groups.htm&amp;type=5\n- or Create matching user(s) in the target deployment org\n- or Remove the XML part referring to hardcoded usernames\n\nExample of XML you have to remove in {1}:\n\n&lt;folderShares&gt;\n  &lt;accessLevel&gt;Manage&lt;/accessLevel&gt;\n  &lt;sharedTo&gt;nicolas.vuillamy@hardis-scratch-po-tgci-root-develop_20220412_0604.com&lt;/sharedTo&gt;\n  &lt;sharedToType&gt;User&lt;/sharedToType&gt;\n&lt;/folderShares&gt;\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#can-not-find-user-2","title":"Can not find user (2)","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) In field: (.*) - no User named (.*) found</code></li> </ul> <p>Resolution</p> <pre><code>You made reference to username {3} in {1}, and it probably does not exist in the target org.\n- Do not use named users, but user public groups for assignments -&gt; https://help.salesforce.com/s/articleView?id=sf.creating_and_editing_groups.htm&amp;type=5\n- or Create matching user {3} in the target deployment org\n- or open {1} metadata and remove the XML part referring to hardcoded username {3}\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#cannot-update-a-field-to-a-summary-from-something-else","title":"Cannot update a field to a Summary from something else","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Cannot update a field to a (.*) from something else</code></li> </ul> <p>Resolution</p> <pre><code>You probably updated the type of field {1} to type {2}, and Salesforce does not allows that with deployments. You can:\n- Try to manually change the type of {1} directly in target org, but it may not be technically possible\n- Delete field {1} in target org: it will be recreated after deployment (but you will loose data on existing records, so be careful if your target is a production org)\n- Create another field with desired type and manage data recovery if the target is a production org\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#change-matching-rule","title":"Change Matching Rule","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Before you change a matching rule, you must deactivate it</code></li> </ul> <p>Resolution</p> <pre><code>To be able to deploy, you must go in target org setup to manually deactivate matching rule {1}\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#condition-missing-reference","title":"Condition missing reference","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) field integrity exception: unknown \\(A condition has a reference to (.*), which doesn't exist.\\)</code></li> </ul> <p>Resolution</p> <pre><code>There is a reference to {2} in {1}, and {2} is not found. You can either:\n- Add {2} in your deployment sources and make sure it is named in package.xml\n- Remove the reference to {2} in {1}\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#couldnt-retrieve-or-load-information-on-the-field","title":"Couldn't retrieve or load information on the field","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Something went wrong. We couldn't retrieve or load the information on the field: (.*)\\.</code></li> </ul> <p>Resolution</p> <pre><code>There is a reference to {2} in {1}, and {2} is not found. You can either:\n- Commit {2} in your deployment sources and make sure it is named in package.xml\n- Remove the reference to {2} in {1}\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#custom-object-not-found","title":"Custom object not found","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) In field: field - no CustomObject named (.*) found</code></li> </ul> <p>Resolution</p> <pre><code>A reference to a custom object {2} is not found in {1}:\n- If you renamed the custom object, do a search/replace in sources with previous object name and new object name\n- If you deleted the custom object, or if you don't want to deploy it, do a search on the custom object name, and remove XML elements referencing it\n- If the object should exist, make sure it is in force-app/main/default/objects and that the object name is in manifest/package.xml in CustomObject section\nYou may also have a look to command sf hardis:project:clean:references\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#custom-field-not-found","title":"Custom field not found","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) In field: (.*) - no CustomField named (.*)\\.(.*) found</code></li> </ul> <p>Examples</p> <ul> <li><code>Error PS_Admin In field: field - no CustomField named User.expcloud__Portal_Username__c found</code></li> </ul> <p>Resolution</p> <pre><code>A reference to a custom field {3}.{4} is not found in {1}:\n- If you renamed {3}.{4}, do a search/replace in {1} with previous field name and {4}\n- If you deleted {3}.{4}, or if you don't want to deploy it, do a search on {4} in all sources, and remove all XML elements referring to {3}.{4} (except in destructiveChanges.xml)\n- If {3}.{4} should exist, make sure it is in force-app/main/default/objects/{3}/fields and that {3}.{4} is in manifest/package.xml in CustomField section\n- If {3}.{4} is standard, the error is because {3}.{4} is not available in the org you are trying to deploy to. You can:\n  - Remove the reference to {4} in the XML of {1} ( maybe sf hardis:project:clean:references can clean automatically for you ! )\n  - Activate the required features/license in the target org\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#mandatory-custom-field-can-not-be-in-a-profilepermission-set","title":"Mandatory custom field can not be in a profile/permission set","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) You cannot deploy to a required field: (.*)</code></li> </ul> <p>Resolution</p> <pre><code>- Search for {2} in source file XML of {1}, then remove the entries matching the results\nExample of element to delete:\n&lt;fieldPermissions&gt;\n  &lt;editable&gt;true&lt;/editable&gt;\n  &lt;field&gt;{2}&lt;/field&gt;\n  &lt;readable&gt;true&lt;/readable&gt;\n&lt;/fieldPermissions&gt;\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#custom-metadata-entry-not-found","title":"Custom metadata entry not found","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) In field: (.*) - no CustomMetadata named (.*) found</code></li> </ul> <p>Resolution</p> <pre><code>A reference to a custom metadata {3} of type {2} is not found in {1}:\n- Are you sure you deployed {3} ?\n- If you use a package.xml, is {3} present within type CustomMetadata ?\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#expired-access-refresh-token","title":"Expired Access / Refresh Token","text":"<p>Detection</p> <ul> <li>String: <code>expired access/refresh token</code></li> </ul> <p>Resolution</p> <pre><code>Run command \"Select another org\" from Status panel (or sf hardis:org:select) to authenticate again to your org\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-data-category-group","title":"Missing Data Category Group","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) In field: DeveloperName - no DataCategoryGroup named (.*) found</code></li> </ul> <p>Resolution</p> <pre><code>If Data Category Group {2} is not existing yet in target org, you might need to:\n- create it manually in target org before deployment\n- comment DataCategoryGroup in {1} XML\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#dependent-class-is-invalid-and-needs-recompilation","title":"Dependent class is invalid and needs recompilation","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Dependent class is invalid and needs recompilation</code></li> </ul> <p>Resolution</p> <pre><code>Solve the other errors and this one will disappear !\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#duplicate-value-platform-action-id-list","title":"Duplicate value Platform Action Id List","text":"<p>Detection</p> <ul> <li>String: <code>duplicate value found: PlatformActionListId duplicates value on record with id</code></li> </ul> <p>Resolution</p> <pre><code>There are probably issue with conflict management. Open the XML of the source item, and replace all &lt;sortOrder&gt; numbers to make an ascending order, starting with 0\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#duplicate-label","title":"Duplicate label","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Duplicate label: (.*)</code></li> </ul> <p>Resolution</p> <pre><code>You probably renamed the picklist API name for {2}. Please update manually the picklist {1} in the target org to avoid to have a duplicate label\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-e-mail-template","title":"Missing e-mail template","text":"<p>Detection</p> <ul> <li>RegExp: <code>In field: template - no EmailTemplate named (.*) found</code></li> </ul> <p>Resolution</p> <pre><code>An email template should be present in the sources. To retrieve it, you can run:\nsf project retrieve start -m EmailTemplate:{1} -o YOUR_ORG_USERNAME\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#empty-source-items","title":"Empty source items","text":"<p>Detection</p> <ul> <li>String: <code>Required field is missing: sharingOwnerRules</code></li> <li>String: <code>Required field is missing: standardValue</code></li> <li>String: <code>Required field is missing: valueTranslation</code></li> </ul> <p>Resolution</p> <pre><code>You probably retrieved empty items, that must not be included within the SFDX project\nTo remove them, please run sfdx:hardis:project:clean:emptyitems\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#enable-crm-analytics","title":"Enable CRM Analytics","text":"<p>Detection</p> <ul> <li>String: <code>It should be created by enabling the CRM Analytics Cloud preference</code></li> </ul> <p>Resolution</p> <pre><code>You must enable CRM Analytics (ex Wave, Einstein Analytics &amp; Tableau CRM) in the target org.\nYou probably also need to add CRM Analytics Admin Permission Set assignment to the deployment user\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#error-parsing-file","title":"Error parsing file","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Error parsing file: (.*)</code></li> </ul> <p>Resolution</p> <pre><code>There has been an error parsing the XML file of {1}: {2}\n- Open file {1} and look where the error can be ! (merge issue, typo, XML tag not closed...)\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#formula-picklist-field-issue","title":"Formula picklist field issue","text":"<p>Detection</p> <ul> <li>RegExp: <code>Field:(.*) must not be Required</code></li> </ul> <p>Resolution</p> <pre><code>You probably made read only field {1} that was required before.\nFind field {1} in the layout source XML, then replace Required by Readonly\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#field-not-available-for-element","title":"Field not available for element","text":"<p>Detection</p> <ul> <li>RegExp: <code>Field (.*) is not available for</code></li> </ul> <p>Resolution</p> <pre><code>You probably changed the type of field {1}.\nFind field {1} in the source XML, and remove the section using it\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#formula-picklist-field-issue_1","title":"Formula picklist field issue","text":"<p>Detection</p> <ul> <li>String: <code>Les champs de liste de s\u00e9lection sont pris en charge uniquement dans certaines fonctions.</code></li> </ul> <p>Resolution</p> <pre><code>You probably changed the type of a field that is used in a formula.\nUpdate the formula to use a field compliant with formulas.\nMore details at https://help.salesforce.com/articleView?id=sf.tips_on_building_formulas.htm&amp;type=5\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#flow-must-be-deleted-manually","title":"Flow must be deleted manually","text":"<p>Detection</p> <ul> <li>RegExp: <code>.flow (.*) insufficient access rights on cross-reference id</code></li> </ul> <p>Resolution</p> <pre><code>Flow {1} can not be deleted using deployments, please delete it manually in the target org using menu Setup -&gt; Flows , context menu on {1} -&gt; View details and versions -&gt; Deactivate all versions -&gt; Delete flow\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#insufficient-access-rights-on-cross-reference-id","title":"Insufficient access rights on cross-reference id","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) insufficient access rights on cross-reference id</code></li> </ul> <p>Resolution</p> <pre><code>- If {1} is a Flow, it can not be deleted using deployments, please delete it manually in the target org using menu Setup -&gt; Flows , context menu on {1} -&gt; View details and versions -&gt; Deactivate all versions -&gt; Delete flow\n- If you changed a custom field from unique to not unique, you need to manually make the change in the target org\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#invalid-formula-grouping-context","title":"Invalid formula grouping context","text":"<p>Detection</p> <ul> <li>String: <code>Invalid custom summary formula definition: You must select a grouping context to use any report summary function</code></li> </ul> <p>Resolution</p> <pre><code>You need to update your Report definition. See workaround here -&gt; https://salesforce.stackexchange.com/questions/294850/grouping-error-with-prevgroupval-function\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#invalid-report-type","title":"Invalid report type","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) invalid report type</code></li> </ul> <p>Resolution</p> <pre><code>Report type is missing for report {1}\n- Open report {1} to se what report type is used\n- Retrieve the report type from an org and add it to the sfdx sources\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#invalid-scopemine-not-allowed","title":"Invalid scope:Mine, not allowed","text":"<p>Detection</p> <ul> <li>String: <code>Invalid scope:Mine, not allowed</code></li> </ul> <p>Resolution</p> <pre><code>Replace Mine by Everything in the list view SFDX source XML.\nHave a look at this command to manage that automatically :)\nhttps://sfdx-hardis.cloudity.com/hardis/org/fix/listviewmine/ \n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#invalid-field-in-related-list","title":"Invalid field in related list","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Invalid field:(.*) in related list:(.*)</code></li> </ul> <p>Resolution</p> <pre><code>Field {2} is unknown. You can:\n- Activate the related feature license or option to make {2} existing in target org\n- Update XML of {1} to remove reference to field {2} in the related list {3}\n- Update XML of {1} to remove the whole related list {3}\nExample of XML to remove:\n&lt;relatedLists&gt;\n  &lt;fields&gt;SOLUTION.ISSUE&lt;/fields&gt;\n  &lt;fields&gt;SOLUTION.SOLUTION_NUMBER&lt;/fields&gt;\n  &lt;fields&gt;SOLUTION.STATUS&lt;/fields&gt;\n  &lt;fields&gt;CORE.USERS.ALIAS&lt;/fields&gt;\n  &lt;relatedList&gt;RelatedSolutionList&lt;/relatedList&gt;\n&lt;/relatedLists&gt;\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#invalid-field-for-upsert","title":"Invalid field for upsert","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Invalid field for upsert, must be an External Id custom or standard indexed field: (.*) \\((.*)\\)</code></li> </ul> <p>Resolution</p> <pre><code>You tried to use field {2} for an upsert call in {1}.\n- Is it declared as externalId ?\n- Is the customIndex source file present in the deployment ?\n- If it is declared as externalId and customIndex is present, you may have to go manually define the field as externalId in the target org\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#invalid-type","title":"Invalid type","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Invalid type: (.*) \\((.*)\\)</code></li> </ul> <p>Resolution</p> <pre><code>Apex error in {1} with unknown type {2} at position {3}. If {2} is a class name, try to fix it, or maybe it is missing in the files or in package.xml !\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#campaign-can-not-be-updated","title":"Campaign can not be updated","text":"<p>Detection</p> <ul> <li>String: <code>The object \"Campaign\" can't be updated</code></li> </ul> <p>Resolution</p> <pre><code>Add \"MarketingUser\" in project-scratch-def.json features\nIf it is already done, you may manually check \"MarketingUser\" field on the scratch org user\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-field-middlename","title":"Missing field MiddleName","text":"<p>Detection</p> <ul> <li>String: <code>field MiddleName</code></li> <li>String: <code>Variable does not exist: MiddleName</code></li> </ul> <p>Resolution</p> <pre><code>MiddleNames must be activated in the target org.\n- Help: https://help.salesforce.com/articleView?id=000332623&amp;type=1&amp;mode=1\n- Scratch org setting:\n\"nameSettings\": {\n  \"enableMiddleName\": true\n}\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-field-suffix","title":"Missing field Suffix","text":"<p>Detection</p> <ul> <li>String: <code>field Suffix</code></li> </ul> <p>Resolution</p> <pre><code>Suffix must be activated in the target org.\n- Help: https://help.salesforce.com/articleView?id=000332623&amp;type=1&amp;mode=1\n- Scratch org setting:\n\"nameSettings\": {\n  \"enableNameSuffix\": true\n},\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-field-syncedquoteid","title":"Missing field SyncedQuoteId","text":"<p>Detection</p> <ul> <li>String: <code>field SyncedQuoteId</code></li> <li>String: <code>Error  force-app/main/default/objects/Quote/Quote.object-meta.xml</code></li> <li>String: <code>Error  force-app/main/default/objects/Opportunity/fields/SyncedQuoteId.field-meta.xml</code></li> </ul> <p>Resolution</p> <pre><code>Quotes must be activated in the target org.\n- Help: https://help.salesforce.com/articleView?id=sf.quotes_enable.htm&amp;type=5\n- Scratch org setting:\n\"quoteSettings\": {\n  \"enableQuote\": true\n}\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-feature-contacttomultipleaccounts","title":"Missing feature ContactToMultipleAccounts","text":"<p>Detection</p> <ul> <li>String: <code>no CustomObject named AccountContactRelation found</code></li> <li>String: <code>Invalid field:ACCOUNT.NAME in related list:RelatedContactAccountRelationList</code></li> </ul> <p>Resolution</p> <pre><code>Contacts to multiple accounts be activated in the target org.\n- Help: https://help.salesforce.com/articleView?id=sf.shared_contacts_set_up.htm&amp;type=5\n- Scratch org setting:\n\"features\": [\"ContactsToMultipleAccounts\"]\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-feature-chatter-collaboration-group","title":"Missing feature Chatter Collaboration Group","text":"<p>Detection</p> <ul> <li>String: <code>CollaborationGroup</code></li> </ul> <p>Resolution</p> <pre><code>Quotes must be activated in the target org.\n- Org: Setup -&gt; Chatter settings -&gt; Allow Records in Groups\n- Scratch org setting:\n\"chatterSettings\": {\n  \"allowRecordsInChatterGroup\": true\n},\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-feature-enhanced-notes","title":"Missing feature Enhanced notes","text":"<p>Detection</p> <ul> <li>String: <code>FeedItem.ContentNote</code></li> </ul> <p>Resolution</p> <pre><code>Enhanced Notes must be activated in the target org.\n- Org: Setup -&gt; Notes settings -&gt; Enable Notes\n- Scratch org setting:\n\"enhancedNotesSettings\": {\n  \"enableEnhancedNotes\": true\n},\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-feature-ideas-notes","title":"Missing feature Ideas notes","text":"<p>Detection</p> <ul> <li>String: <code>Idea.InternalIdeasIdeaRecordType</code></li> </ul> <p>Resolution</p> <pre><code>Ideas must be activated in the target org.\n- Org: https://help.salesforce.com/articleView?id=networks_enable_ideas.htm&amp;type=0\n- Scratch org setting:\n\"ideasSettings\": {\n  \"enableIdeas\": true\n}\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-feature-live-agent","title":"Missing feature Live Agent","text":"<p>Detection</p> <ul> <li>String: <code>FeedItem.ContentNote</code></li> </ul> <p>Resolution</p> <pre><code>Live Agent must be activated in the target org.\n- Org: Setup -&gt; Live Agent Settings -&gt; Enable Live Agent\n- Scratch org feature: LiveAgent\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-feature-product-request","title":"Missing feature Product Request","text":"<p>Detection</p> <ul> <li>String: <code>ProductRequest</code></li> </ul> <p>Resolution</p> <pre><code>ProductRequest object is not available in the target org.\nMaybe you would like to clean its references within Profiles / PS using the following command ?\nsf hardis:project:clean:references , then select \"ProductRequest references\"\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-feature-social-customer-service","title":"Missing feature Social Customer Service","text":"<p>Detection</p> <ul> <li>String: <code>SocialPersona.AreWeFollowing</code></li> </ul> <p>Resolution</p> <pre><code>Social Custom Service must be activated in the target org.\n- Org: Setup -&gt; https://help.salesforce.com/articleView?id=sf.social_customer_service_setup_enable.htm&amp;type=5\n- Scratch org feature: SocialCustomerService\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-feature-translation-workbench","title":"Missing feature Translation Workbench","text":"<p>Detection</p> <ul> <li>RegExp: <code>report-meta.xml(.*)filterlanguage</code></li> </ul> <p>Resolution</p> <pre><code>Translation workbench must be activated in the target org.\n- Org: Setup -&gt; https://help.salesforce.com/articleView?id=sf.customize_wbench.htm&amp;type=5\n- Scratch org:\n\"languageSettings\": {\n  \"enableTranslationWorkbench\":  true,\n  \"enableEndUserLanguages\": true\n}\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-feature-opportunity-teams","title":"Missing feature Opportunity Teams","text":"<p>Detection</p> <ul> <li>String: <code>OpportunityTeam</code></li> </ul> <p>Resolution</p> <pre><code>Opportunity Teams must be activated in the target org.\n- Org: Setup -&gt; Opportunity Team Settings -&gt; Enable Team Selling\n- Scratch org:\n\"opportunitySettings\": {\n  \"enableOpportunityTeam\": true\n}\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-feature-workcom","title":"Missing Feature Work.Com","text":"<p>Detection</p> <ul> <li>String: <code>WorkBadgeDefinition</code></li> </ul> <p>Resolution</p> <pre><code>Work.com feature must be activated in the target org.\n- Org &amp; Scratch: https://developer.salesforce.com/docs/atlas.en-us.workdotcom_dev_guide.meta/workdotcom_dev_guide/wdc_cc_setup_dev_org.htm\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-multi-currency-field","title":"Missing multi-currency field","text":"<p>Detection</p> <ul> <li>RegExp: <code>A reference to a custom field (.*)CurrencyIsoCode</code></li> </ul> <p>Resolution</p> <pre><code>You probably need to activate MultiCurrency (from Setup -&gt; Company information)\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-object-referenced-in-packagexml","title":"Missing object referenced in package.xml","text":"<p>Detection</p> <ul> <li>RegExp: <code>An object (.*) of type (.*) was named in package.xml, but was not found in zipped directory</code></li> </ul> <p>Resolution</p> <pre><code>You can either:\n- Update the package.xml to remove the reference to the missing {2} {1}\n- Add the missing {2} {1} in your project source files\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-quick-action","title":"Missing Quick Action","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) In field: QuickAction - no QuickAction named (.*) found</code></li> </ul> <p>Resolution</p> <pre><code>QuickAction {2} referred in {1} is unknown. You can either:\n- Make sure your QuickAction {2} is present in source files and in package.xml\n- If {2} is a standard QuickAction, activate related feature in target org\n- Solve other errors that could impact QuickAction {2}\n- Remove QuickAction {2} in the source XML of {1}. Example of XML to remove below:\n&lt;quickActionListItems&gt;\n  &lt;quickActionName&gt;FeedItem.RypplePost&lt;/quickActionName&gt;\n&lt;/quickActionListItems&gt;\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-report","title":"Missing report","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) The (.*) report chart has a problem with the \"reportName\" field</code></li> </ul> <p>Resolution</p> <pre><code>{1} is referring to unknown report {2}. To retrieve it, you can run:\n- sf project retrieve start -m Report:{2} -o YOUR_ORG_USERNAME\n- If it fails, looks for the report folder and add it before report name to the retrieve command (ex: MYFOLDER/MYREPORTNAME)\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-sales-team","title":"Missing Sales Team","text":"<p>Detection</p> <ul> <li>String: <code>related list:RelatedAccountSalesTeam</code></li> </ul> <p>Resolution</p> <pre><code>Account Teams must be activated in the target org.\n- Org: Setup -&gt; Account Teams -&gt; Enable\n- Scratch org setting:\n\"accountSettings\": {\n  \"enableAccountTeams\": true\n}\n}\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#sharing-operation-already-in-progress","title":"sharing operation already in progress","text":"<p>Detection</p> <ul> <li>String: <code>sharing operation already in progress</code></li> </ul> <p>Resolution</p> <pre><code>You can not deploy multiple SharingRules at the same time. You can either:\n- Remove SharingOwnerRules and SharingRule from package.xml (so it becomes a manual operation)\n- Use sf hardis:work:save to generate a deploymentPlan in .sfdx-hardis.json,\n- If you are trying to create a scratch org, add DeferSharingCalc in features in project-scratch-def.json\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#network-issue","title":"Network issue","text":"<p>Detection</p> <ul> <li>String: <code>ECONNABORTED</code></li> <li>String: <code>ECONNRESET</code></li> </ul> <p>Resolution</p> <pre><code>The network connection has been aborted, this is a purely technical issue.\nTry again, and if you still see errors, check the status of Salesforce instance on https://status.salesforce.com\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#not-available-for-deploy-for-this-organization","title":"Not available for deploy for this organization","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Not available for deploy for this organization</code></li> </ul> <p>Resolution</p> <pre><code>The user you use for deployments probably lacks of the rights (Profiles, Permission sets...) to manage {1}.\n- Assign the deployment user to the good Permission Sets, or modify its profile rights, then try again\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#not-valid-sharing-model","title":"Not valid sharing model","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) (.*) is not a valid sharing model for (.*) when (.*) sharing model is (.*)</code></li> </ul> <p>Resolution</p> <pre><code>It seems that Sharing Models of {1} and {4} are not compatible in target org.\n- Use compatible sharing models between {1} and {4} by updating Sharing model of {1} or {4}\n- Make sure that sfdx sources {1}.object-meta.xml and {4}.object-meta.xml and in the files, and that {1} and {4} are in package.xml in CustomObject block\n- You may directly update sharingModel in XML. For example, replace &lt;sharingModel&gt;ReadWrite&lt;/sharingModel&gt; by &lt;sharingModel&gt;Private&lt;/sharingModel&gt; in {3}.object-meta.xml\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#picklist-sharing-is-not-supported","title":"Picklist sharing is not supported","text":"<p>Detection</p> <ul> <li>String: <code>Picklist sharing is not supported</code></li> </ul> <p>Resolution</p> <pre><code>You probably changed the type of a field.\nGo manually make the change in the target org, so the deployment will pass\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#picklist-value-not-found","title":"Picklist value not found","text":"<p>Detection</p> <ul> <li>RegExp: <code>Picklist value: (.*) in picklist: (.*) not found</code></li> </ul> <p>Resolution</p> <pre><code>Sources have references to value {1} of picklist {2}\n- If picklist {2} is standard, add the picklist to sfdx sources by using \"sf project retrieve start -m StandardValueSet:{2}\", then save again\n- Else, perform a search in all code of {1}, then remove XML tags referring to {1} (for example in record types metadatas)\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#please-choose-a-different-name","title":"Please choose a different name","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) This (.*) already exists or has been previously used(.*)Please choose a different name.</code></li> </ul> <p>Resolution</p> <pre><code>- Rename {1} in the target org, then try again the deployment. if it succeeds, delete the renamed item.\n- or Delete {1} in the target org, then try again the deployment\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#missing-profile-default-application","title":"Missing profile default application","text":"<p>Detection</p> <ul> <li>String: <code>You can't remove the only default app from the profile.</code></li> </ul> <p>Resolution</p> <pre><code>You must have a default application for a profile. You can:\n - Update it in UI\n - Update the XML of the profile to set \"true\" in the &lt;default&gt; tag of one of the applicationVisibilities item.\n Ex:\n &lt;applicationVisibilities&gt;\n    &lt;application&gt;standard__LightningSales&lt;/application&gt;\n    &lt;default&gt;true&lt;/default&gt;\n    &lt;visible&gt;true&lt;/visible&gt;\n&lt;/applicationVisibilities&gt;\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#crm-analytics-a-recipe-must-specify-a-dataflow","title":"CRM Analytics: A Recipe must specify a DataFlow","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) A Recipe must specify a Dataflow</code></li> </ul> <p>Resolution</p> <pre><code>You must include related WaveDataFlow {1} in sources (and probably in package.xml too).\nTo retrieve it, run: sf project retrieve start -m WaveDataFlow:{1} -u SOURCE_ORG_USERNAME\nYou can also retrieve all analytics sources in one shot using sf hardis:org:retrieve:source:analytics -u SOURCE_ORG_USERNAME\n  - https://salesforce.stackexchange.com/a/365453/33522\n  - https://help.salesforce.com/s/articleView?id=000319274&amp;type=1\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#record-type-not-found","title":"Record Type not found","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) In field: recordType - no RecordType named (.*) found</code></li> </ul> <p>Resolution</p> <pre><code>An unknown record type {2} is referenced in {1}\n- If record type {2} is not supposed to exist, perform a search in all files of {1}, then remove matching XML elements referring to this record type\n- If record type {2} is supposed to exist, you may have to create it manually in the target org to make the deployment pass\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#objects-rights-on-a-role-is-below-org-default","title":"Objects rights on a role is below org default","text":"<p>Detection</p> <ul> <li>String: <code>access level below organization default</code></li> </ul> <p>Resolution</p> <pre><code>Your org wide settings default must be lower than the level defined in roles:\n- If you are in a scratch org, it can be fixable using \"objectProperties\" in project-scratch-def.json (see \"Set Object-Level Sharing Settings\" paragraph in page https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_scratch_orgs_def_file.htm)\n- If you are in a sandbox/dev/prod org, you need to update default org wide settings before deployment. See https://www.sfdcpoint.com/salesforce/organization-wide-defaults-owd-in-salesforce/\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#unsupported-sharing-configuration","title":"Unsupported sharing configuration","text":"<p>Detection</p> <ul> <li>RegExp: <code>not supported for (.*) since it's org wide default is</code></li> </ul> <p>Resolution</p> <pre><code>Consistency error between {1} sharing settings and {1} object configuration\nPlease check https://salesforce.stackexchange.com/questions/260923/sfdx-deploying-contact-sharing-rules-on-a-fresh-deployment\nIf you already did that, please try again to run the job\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#a-sharing-rule-may-be-useless","title":"A sharing rule may be useless","text":"<p>Detection</p> <ul> <li>String: <code>Required field is missing: sharingCriteriaRules</code></li> </ul> <p>Resolution</p> <pre><code>Are you sure you need this sharing rule ? You may remove it from the sfdx project\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#sharing-recalculation-lock","title":"Sharing recalculation lock","text":"<p>Detection</p> <ul> <li>String: <code>because it interferes with another operation already in progress</code></li> <li>String: <code>Le calcul de partage demand\u00e9 ne peut \u00eatre trait\u00e9 maintenant car il interf\u00e8re avec une autre op\u00e9ration en cours</code></li> </ul> <p>Resolution</p> <pre><code>If you changed a field from MasterDetail to Lookup, you must do it manually in the target org before being able to deploy\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#send-email-is-disabled","title":"Send email is disabled","text":"<p>Detection</p> <ul> <li>String: <code>Send Email is disabled or activities are not allowed</code></li> <li>String: <code>Unknown user permission: SendExternalEmailAvailable</code></li> </ul> <p>Resolution</p> <pre><code>Go to Email -&gt; Deliverability -&gt; Select value \"All emails\"\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#sort-order-must-be-in-sequential-order","title":"Sort order must be in sequential order","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) SortOrder must be in sequential order from</code></li> </ul> <p>Resolution</p> <pre><code>You probably have a default DuplicateRule in the target org. Retrieve it from target org, or delete it manually in target org, so you can deploy.\nRef: https://developer.salesforce.com/forums/?id=9060G000000I6SoQAK\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#async-exception-in-test-class","title":"Async exception in test class","text":"<p>Detection</p> <ul> <li>RegExp: <code>System.AsyncException: (.*) Apex</code></li> </ul> <p>Resolution</p> <pre><code>This may be a test class implementation issue in {1}.\nPlease check https://developer.salesforce.com/forums/?id=9060G0000005kVLQAY\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#test-classes-with-0-coverage","title":"Test classes with 0% coverage","text":"<p>Detection</p> <ul> <li>RegExp: <code>0%</code></li> </ul> <p>Resolution</p> <pre><code>Please make sure that none of the test classes are 0% covered\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#can-not-test-item-deployment-in-simulation-mode","title":"Can not test item deployment in simulation mode","text":"<p>Detection</p> <ul> <li>RegExp: <code>Test only deployment cannot update</code></li> </ul> <p>Resolution</p> <pre><code>THIS IS A FALSE POSITIVE\nWhen effective deployment will happen, it should pass\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#unknown-user-permission-createauditfields","title":"Unknown user permission: CreateAuditFields","text":"<p>Detection</p> <ul> <li>String: <code>Unknown user permission: CreateAuditFields</code></li> </ul> <p>Resolution</p> <pre><code>You need to enable the \"Create audit field\" permission in the target org\nPlease check https://help.salesforce.com/articleView?id=000334139&amp;type=1&amp;mode=1\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#unknown-user-permission-fieldserviceaccess","title":"Unknown user permission: FieldServiceAccess","text":"<p>Detection</p> <ul> <li>String: <code>Unknown user permission: FieldServiceAccess</code></li> </ul> <p>Resolution</p> <pre><code>You need to enable the \"Field Service Access\" permission in the target org\nPlease check https://help.salesforce.com/articleView?id=sf.fs_enable.htm&amp;type=5\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#unknown-user-permission","title":"Unknown user permission","text":"<p>Detection</p> <ul> <li>String: <code>Unknown user permission:</code></li> </ul> <p>Resolution</p> <pre><code>You can:\n- enable the related permission in the target org\n- or remove references to the permission in source XML files (Probably a Profile or a Permission set)\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#variable-does-not-exist","title":"Variable does not exist","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Variable does not exist: (.*) \\((.*)\\)</code></li> </ul> <p>Resolution</p> <pre><code>Apex error in {1} with unknown variable {2} at position {3}. If {2} is a class name, try to fix it, or maybe it is missing in the files or in package.xml !\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#visibility-is-not-allowed-for-type","title":"Visibility is not allowed for type","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) set the visibility for a (.*) to Protected unless you are in a developer</code></li> </ul> <p>Resolution</p> <pre><code>Update the visibility of {1} to \"Public\"\n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#tableau-crm-wave-digest-error","title":"Tableau CRM / Wave digest error","text":"<p>Detection</p> <ul> <li>String: <code>Fix the sfdcDigest node errors and then upload the file again</code></li> </ul> <p>Resolution</p> <pre><code>Go to the target org, open profile \"Analytics Cloud Integration User\" and add READ rights to the missing object fields \n</code></pre>"},{"location":"salesforce-deployment-assistant-error-list/#xml-item-appears-more-than-once","title":"XML item appears more than once","text":"<p>Detection</p> <ul> <li>RegExp: <code>Error (.*) Field:(.*), value:(.*) appears more than once</code></li> </ul> <p>Resolution</p> <pre><code>You probably made an error while merging conflicts\nLook for {3} in the XML of {1}\nIf you see two {2} XML blocks with {3}, please decide which one you keep and remove the other one\n</code></pre>"},{"location":"salesforce-deployment-assistant-home/","title":"Sfdx-hardis deployment assistant","text":""},{"location":"salesforce-deployment-assistant-home/#sfdx-hardis-deployment-assistant","title":"sfdx-hardis Deployment Assistant","text":""},{"location":"salesforce-deployment-assistant-home/#salesforce-devops-ai-integration","title":"Salesforce DevOps AI Integration","text":"<p>Deployment errors are common and quite boring, right ?</p> <p>Sfdx-hardis deployment assistant will help you to solve them, even if you are not using sfdx-hardis CI/CD pipelines !</p> <p>The assistant contain core rules and can optionally be integrated with AI to provide you the best guidance :)</p> <p></p>"},{"location":"salesforce-deployment-assistant-home/#flow-visual-git-diff","title":"Flow Visual Git Diff","text":"<p>In addition to deployment tips, comments will be posted on PRs with Visual Git Diff for Flows, that will:</p> <ul> <li>Visually show you the differences on a diagram</li> <li>Display the update details without having to open any XML !</li> </ul> <p>\ud83d\udfe9 = added</p> <p>\ud83d\udfe5 = removed</p> <p>\ud83d\udfe7 = updated</p> <p></p> <p></p>"},{"location":"salesforce-deployment-assistant-home/#integrations","title":"Integrations","text":"<p>Deployment assistant will provide tips in Pull Request comments (GitHub, Gitlab, Azure, Bitbucket).</p> <p>It will also provide tips in console log.</p> <p></p>"},{"location":"salesforce-deployment-assistant-home/#setup","title":"Setup","text":"<p>Just follow the instructions to be ready in a few minutes</p> <ul> <li>sfdx-hardis deployment assistant setup instructions</li> <li>sfdx-hardis AI setup instructions (requires an Openai API key)</li> </ul>"},{"location":"salesforce-deployment-assistant-setup/","title":"Sfdx-hardis deployment assistant setup","text":""},{"location":"salesforce-deployment-assistant-setup/#setup-salesforce-deployment-assistant","title":"Setup Salesforce Deployment Assistant","text":""},{"location":"salesforce-deployment-assistant-setup/#configure-integrations","title":"Configure integrations","text":"<p>Make sure to have configured your GitHub, Gitlab, Azure Pipelines or BitBucket integration so the deployment assistant can post its help in Pull Request comments.</p> <p>If you want to supercharge Salesforce deployment assistant with AI, process sfdx-hardis AI setup.</p> <p>You can also receive Slack, Ms Teams and Email notifications in case of successful deployment.</p> <p>If you configure JIRA or Generic Ticketing integrations, ticket numbers will be extracted and displayed in the Pull Request comment.</p>"},{"location":"salesforce-deployment-assistant-setup/#using-sfdx-hardis-cicd","title":"Using sfdx-hardis CI/CD","text":"<p>If you are using sfdx-hardis CI/CD, you are already all set !</p>"},{"location":"salesforce-deployment-assistant-setup/#using-custom-cicd-pipeline","title":"Using custom CI/CD pipeline","text":"<p>Replace your calls to Salesforce CLI by calls to sfdx-hardis commands wrapper.</p> sfdx command Corresponding sfdx-hardis wrapper command sf project deploy start sf hardis:project:deploy:start sf project deploy validate sf hardis:project:deploy:validate sf project deploy quick sf hardis:project:deploy:quick sfdx force:source:deploy (removed on 6 november) sf hardis:source:deploy sfdx force:source:push (removed on 6 november) sf hardis:source:push sfdx force:mdapi:deploy (removed on 6 november) sf hardis:mdapi:deploy <p>Configure your GitHub, Gitlab, Azure Pipelines or BitBucket integration so the deployment assistant can post its help in Pull Request comments.</p> <p>Notes:</p> <ul> <li>sfdx-hardis deployment assistant now works better with --json option please use it :)</li> </ul>"},{"location":"salesforce-deployment-assistant-setup/#example","title":"Example","text":"<p>Replace:</p> <p><code>sf project:deploy:start -x manifest/package.xml --checkonly</code></p> <p>with:</p> <p><code>sf hardis:project:deploy:start -x manifest/package.xml --checkonly</code></p>"},{"location":"salesforce-deployment-assistant-setup/#advanced-example","title":"Advanced example","text":"<p>Replace:</p> <p><code>sf project deploy start --dry-run --source-dir force-app --ignore-warnings --ignore-conflicts --test-level RunLocalTests   --coverage-formatters json-summary --verbose --wait 120 --json</code></p> <p>with:</p> <p><code>sf hardis project deploy start --dry-run --source-dir force-app --ignore-warnings --ignore-conflicts --test-level RunLocalTests   --coverage-formatters json-summary --verbose --wait 120 --json</code></p>"},{"location":"salesforce-deployment-assistant-setup/#not-updating-custom-cicd-pipeline","title":"Not updating custom CI/CD pipeline","text":"<p>You don't want to update your calls to <code>sf project deploy start</code> ?</p> <p>That's ok, you can't benefit from the error management, but you can benefit from the Flows Visual Git Diff and other integrations anyway !</p> <p>Add the Notify command to your custom CI/CD pipeline !</p>"},{"location":"salesforce-monitoring-apex-tests/","title":"Apex tests (Salesforce monitoring)","text":""},{"location":"salesforce-monitoring-apex-tests/#apex-tests","title":"Apex tests","text":"<p>Runs all local test classes of the org and calculate coverage.</p> <p>Sfdx-hardis command: sf hardis:org:test:apex</p>"},{"location":"salesforce-monitoring-apex-tests/#grafana-example","title":"Grafana example","text":""},{"location":"salesforce-monitoring-apex-tests/#slack-example","title":"Slack example","text":""},{"location":"salesforce-monitoring-config-azure/","title":"Configure Salesforce Org Monitoring with Azure","text":"<ul> <li>Pre-requisites<ul> <li>Create access token</li> <li>Create CI/CD variable</li> </ul> </li> <li>Run sfdx-hardis configuration command</li> <li>Define sfdx-hardis environment variables</li> <li>Schedule the monitoring job</li> </ul>"},{"location":"salesforce-monitoring-config-azure/#pre-requisites","title":"Pre-requisites","text":""},{"location":"salesforce-monitoring-config-azure/#configure-a-bypass-in-azure-settings","title":"Configure a ByPass in Azure Settings","text":"<ul> <li>Go to Project Settings \u2013&gt; Repositories \u2013&gt; select your repository and then click on the Security tab.</li> </ul> <ul> <li>Select your Build Service and set Bypass policies when pushing and Contribute to Allowed</li> </ul>"},{"location":"salesforce-monitoring-config-azure/#run-sfdx-hardis-configuration-command","title":"Run sfdx-hardis configuration command","text":"<ul> <li>Run command Configuration -&gt; Configure Org Monitoring in VsCode SFDX Hardis, then follow instructions.</li> </ul> <ul> <li>When prompted to setup CI/CD variables, copy-paste their names and values in a notepad the continue the instructions</li> </ul>"},{"location":"salesforce-monitoring-config-azure/#create-pipeline","title":"Create Pipeline","text":"<p>Skip this step if you already created the pipeline for the monitoring of another org</p> <ul> <li>Go to Project -&gt; Pipelines (you must have Azure authorizations to access this menu)</li> </ul> <ul> <li>Click on New pipeline</li> </ul> <ul> <li>Where is your code -&gt; Azure Repos Git</li> </ul> <ul> <li>Select your monitoring git repository: Existing Azure Pipelines YAML file</li> </ul> <ul> <li>Select your git branch then select azure-pipelines.yml</li> </ul> <ul> <li>Click on Continue</li> </ul> <ul> <li>Click on Save (contextual to the Run button)</li> </ul> <p></p>"},{"location":"salesforce-monitoring-config-azure/#configure-cicd-variables","title":"Configure CI/CD Variables","text":"<p>For each variable sfdx-hardis command Configure org monitoring told you to define, perform the following operations</p>"},{"location":"salesforce-monitoring-config-azure/#create-variable-in-azure","title":"Create variable in Azure","text":"<ul> <li>Go to Project -&gt; Pipelines</li> <li>Select your pipeline</li> <li>Click on Edit , then on Variables</li> <li>Input variable name and value</li> <li>Don't forget to click on save !</li> </ul>"},{"location":"salesforce-monitoring-config-azure/#update-azure-pipelinesyml","title":"Update azure-pipelines.yml","text":"<ul> <li>Open azure-pipelines.yml in VsCode and update all places where <code>MANUAL</code> is found<ul> <li>schedule triggers</li> <li>environment variables</li> </ul> </li> </ul> <p>Examples:</p> <pre><code>schedules:\n- cron: \"0 4 * * *\" # Cron format -&gt; https://crontab.cronhub.io/\n  always: \"true\"\n  branches:\n    # MANUAL: Add your monitored branches here\n    include:\n    - monitoring_myclient__integ_sandbox # Name of your branch created by monitoring configuration command\n</code></pre> <pre><code>    env:\n      # MANUAL: Add your branch related variables here\n      SFDX_CLIENT_ID_MONITORING_MYCLIENT__INTEG_SANDBOX: $(SFDX_CLIENT_ID_MONITORING_MYCLIENT__INTEG_SANDBOX)\n      SFDX_CLIENT_KEY_MONITORING_MYCLIENT__INTEG_SANDBOX: $(SFDX_CLIENT_KEY_MONITORING_MYCLIENT__INTEG_SANDBOX)\n      CI_COMMIT_REF_NAME: $(BRANCH_NAME)\n      CONFIG_BRANCH: $(BRANCH_NAME)\n      ORG_ALIAS: $(BRANCH_NAME)\n      CI: \"true\"\n</code></pre> <ul> <li>Commit and push</li> </ul>"},{"location":"salesforce-monitoring-config-azure/#schedule-the-monitoring-job","title":"Schedule the monitoring job","text":"<p>Schedule is already included within azure-pipelines.yml.</p> <p>Default is everyday at 4 AM, but you can update the CRON expression.</p> <pre><code>schedules:\n- cron: \"0 4 * * *\" # Cron format -&gt; https://crontab.cronhub.io/\n</code></pre> <p>When updated, commit and push.</p>"},{"location":"salesforce-monitoring-config-bitbucket/","title":"Configure Salesforce Org Monitoring with Bitbucket","text":""},{"location":"salesforce-monitoring-config-bitbucket/#cloning-repo-from-vscode","title":"Cloning repo from VsCode","text":"<p>If you have issues to authenticate to Bitbucket from VsCode, create an App Password in Bitbucket personal settings.</p>"},{"location":"salesforce-monitoring-config-bitbucket/#pre-requisites","title":"Pre-requisites","text":"<p>There are no pre-requisites</p>"},{"location":"salesforce-monitoring-config-bitbucket/#run-sfdx-hardis-configuration-command","title":"Run sfdx-hardis configuration command","text":"<ul> <li>Run command Configuration -&gt; Configure Org Monitoring in VsCode SFDX Hardis, then follow instructions.</li> </ul>"},{"location":"salesforce-monitoring-config-bitbucket/#define-sfdx-hardis-environment-variables","title":"Define sfdx-hardis environment variables","text":"<ul> <li>Go to Project -&gt; Repository Settings &gt; Repository Variables (you must have Bitbucket authorizations to access this menu)</li> <li>For each variable sfdx-hardis command Configure org monitoring tells you to define, create with name and value given in sfdx-hardis command logs</li> </ul>"},{"location":"salesforce-monitoring-config-bitbucket/#schedule-the-monitoring-job","title":"Schedule the monitoring job","text":"<ul> <li>Go to Project -&gt; Pipelines -&gt; Schedules</li> <li>Click on New schedule</li> <li>Select the target branch corresponding to the org you want to monitor</li> <li>Select default pipeline</li> <li>Select Schedule Daily and a time slot when no one works (for example <code>01:00 - 02:00</code>)</li> <li>Validate by clicking on Create</li> </ul>"},{"location":"salesforce-monitoring-config-github/","title":"Configure Salesforce Org Monitoring with Github","text":"<ul> <li>Pre-requisites</li> <li>Run sfdx-hardis configuration command</li> <li>Define sfdx-hardis environment variables</li> <li>Schedule the monitoring job</li> </ul>"},{"location":"salesforce-monitoring-config-github/#pre-requisites","title":"Pre-requisites","text":"<p>None</p>"},{"location":"salesforce-monitoring-config-github/#run-sfdx-hardis-configuration-command","title":"Run sfdx-hardis configuration command","text":"<ul> <li>Run command Configuration -&gt; Configure Org Monitoring in VsCode SFDX Hardis, then follow instructions.</li> </ul>"},{"location":"salesforce-monitoring-config-github/#define-sfdx-hardis-environment-variables","title":"Define sfdx-hardis environment variables","text":"<ul> <li>Go to Repository -&gt; Settings &gt; Secret and variables -&gt; Actions (you must have Github authorizations to access this menu)</li> <li>For each variable sfdx-hardis command Configure org monitoring tells you to define, click on New repository secret,  with name and value given in sfdx-hardis command logs</li> </ul>"},{"location":"salesforce-monitoring-config-github/#update-org-monitoringyml","title":"Update org-monitoring.yml","text":"<p>WARNING: Scheduling can be run only on main branch on GitHub Actions, so there is a specific config.</p> <ul> <li>Configure all your monitored org using VsCode SFDX Hardis command \"Configure Org Monitoring\" (jobs will fail but that's ok)<ul> <li>Reply questions, configure variables, let sfdx-hardis upload connected apps...</li> <li>This will create one git branch per monitored org</li> </ul> </li> </ul> <p>AND ONLY THEN:</p> <ul> <li>Checkout your \"main\" branch, create a file <code>.github/workflows/org-monitoring.yml</code> and copy there the content of org-monitoring.yml<ul> <li>Do a CTRL+F and look for MANUAL</li> <li>Add your monitored git branches here where asked to replace</li> <li>Add your authentication variable names where asked to replace</li> <li>Commit &amp; push: there should be a SINGLE GitHub Actions job (using matrix) that will run the monitoring on all orgs</li> </ul> </li> </ul> <p>Examples:</p> <pre><code>      env:\n        # MANUAL: Update variables below !\n        SFDX_CLIENT_ID_MONITORING_MY_CLIENT__INTEG_SANDBOX: ${{ secrets.SFDX_CLIENT_ID_MONITORING_MY_CLIENT__INTEG_SANDBOX}}\n        SFDX_CLIENT_KEY_MONITORING_MY_CLIENT__INTEG_SANDBOX: ${{ secrets.SFDX_CLIENT_KEY_MONITORING_MY_CLIENT__INTEG_SANDBOX}}\n        SFDX_DEPLOY_WAIT_MINUTES: 120 # Override if necessary\n</code></pre>"},{"location":"salesforce-monitoring-config-github/#schedule-the-monitoring-job","title":"Schedule the monitoring job","text":"<p>Schedule is already included within org-monitoring.yml in main branch.</p> <p>Default is everyday at midnight, but you can update the CRON expression.</p> <pre><code>on:\n  push:\n  # Automatically run every day at midnight\n  schedule:\n    - cron: \"0 0 * * *\" # Cron format -&gt; https://crontab.cronhub.io/\n</code></pre>"},{"location":"salesforce-monitoring-config-gitlab/","title":"Configure Salesforce Org Monitoring with Gitlab","text":"<ul> <li>Pre-requisites<ul> <li>Create access token</li> <li>Create CI/CD variable</li> </ul> </li> <li>Run sfdx-hardis configuration command</li> <li>Define sfdx-hardis environment variables</li> <li>Schedule the monitoring job</li> </ul>"},{"location":"salesforce-monitoring-config-gitlab/#pre-requisites","title":"Pre-requisites","text":""},{"location":"salesforce-monitoring-config-gitlab/#create-access-token","title":"Create access token","text":"<ul> <li>Go to Project -&gt; Settings &gt; Access Token (you must have Gitlab authorizations to access this menu)</li> <li>Create an access token with the following info:<ul> <li>name: SFDX HARDIS MONITORING</li> <li>role: Developer</li> <li>scopes: read_repository, write_repository</li> </ul> </li> <li>Copy the value of the generated token in your clipboard ! (CTRL+C)</li> </ul>"},{"location":"salesforce-monitoring-config-gitlab/#create-cicd-variable","title":"Create CI/CD variable","text":"<ul> <li>Go to Project -&gt; Settings &gt; CI/CD -&gt; Variables (you must have Gitlab authorizations to access this menu)</li> <li>Create the variable with the following info:<ul> <li>name: ACCESS_TOKEN</li> <li>value: Paste the value that has been generated when creating the access token in the previous step</li> <li>Select Mask variable</li> <li>Unselect Protected variable</li> </ul> </li> </ul>"},{"location":"salesforce-monitoring-config-gitlab/#run-sfdx-hardis-configuration-command","title":"Run sfdx-hardis configuration command","text":"<ul> <li>Run command Configuration -&gt; Configure Org Monitoring in VsCode SFDX Hardis, then follow instructions.</li> </ul>"},{"location":"salesforce-monitoring-config-gitlab/#define-sfdx-hardis-environment-variables","title":"Define sfdx-hardis environment variables","text":"<ul> <li>Go to Project -&gt; Settings &gt; CI/CD -&gt; Variables (you must have Gitlab authorizations to access this menu)</li> <li>For each variable sfdx-hardis command Configure org monitoring tells you to define, create with name and value given in sfdx-hardis command logs</li> </ul>"},{"location":"salesforce-monitoring-config-gitlab/#schedule-the-monitoring-job","title":"Schedule the monitoring job","text":"<ul> <li>Go to Project -&gt; Build -&gt; Pipeline schedules</li> <li>Click on New schedule</li> <li>Input custom interval pattern as CRON expression, for example:<ul> <li><code>0 1 * * *</code> will run the monitoring job every day at 1 AM</li> <li><code>0 22 * * *</code> will run the monitoring job everyday at 10 PM</li> </ul> </li> <li>Select the CRON TimeZone (for example <code>[UTC+2] Paris</code>)</li> <li>Select the target branch corresponding to the org you want to monitor</li> <li>Validate by clicking on Create Pipeline Schedule</li> </ul>"},{"location":"salesforce-monitoring-config-home/","title":"How to monitor your Salesforce Org","text":"<ul> <li>Video tutorial</li> <li>Instructions<ul> <li>Common instructions</li> <li>Github</li> <li>Gitlab</li> <li>Azure</li> <li>Bitbucket</li> </ul> </li> <li>Notifications</li> <li>Troubleshooting</li> </ul>"},{"location":"salesforce-monitoring-config-home/#video-tutorial","title":"Video tutorial","text":""},{"location":"salesforce-monitoring-config-home/#instructions","title":"Instructions","text":""},{"location":"salesforce-monitoring-config-home/#common-instructions","title":"Common instructions","text":"<p>All you need to configure sfdx-hardis Org Monitoring is a GitHub , Gitlab, Azure or BitBucket repository.</p> <ul> <li>Create and clone a git repository (initialize it with README)</li> <li>Open it with Visual Studio Code, then open VsCode SFDX Hardis extension menu.<ul> <li>If you need installations instructions, please visit documentation page</li> </ul> </li> </ul> <ul> <li>Follow instructions, that can be specific according to your git provider</li> </ul> <p>Tip: Schedule monitoring jobs at different hours so the notifications are more readable, for example production at 1AM and preprod at 2AM</p>"},{"location":"salesforce-monitoring-config-home/#github","title":"Github","text":"<ul> <li>GitHub configuration<ul> <li>Pre-requisites</li> <li>Schedule monitoring job</li> </ul> </li> </ul>"},{"location":"salesforce-monitoring-config-home/#gitlab","title":"Gitlab","text":"<ul> <li>Gitlab configuration<ul> <li>Pre-requisites</li> <li>Schedule monitoring job</li> </ul> </li> </ul>"},{"location":"salesforce-monitoring-config-home/#azure","title":"Azure","text":"<ul> <li>Azure configuration<ul> <li>Pre-requisites</li> <li>Schedule monitoring job</li> </ul> </li> </ul>"},{"location":"salesforce-monitoring-config-home/#bitbucket","title":"Bitbucket","text":"<ul> <li>Bitbucket configuration<ul> <li>Pre-requisites</li> <li>Schedule monitoring job</li> </ul> </li> </ul>"},{"location":"salesforce-monitoring-config-home/#notifications","title":"Notifications","text":"<p>For a better user experience, it is highly recommended to configure notifications !</p> <ul> <li>Slack instructions</li> <li>Microsoft Teams instructions</li> <li>Email instructions</li> <li>Grafana instructions (example: for Grafana Loki integration)</li> </ul> <p>You can decide to run  commands but not send some notifications by defining either a notificationsDisable property in <code>.sfdx-hardis.yml</code>, or a comma separated list in env variable NOTIFICATIONS_DISABLE</p> <p>Example in .sfdx-hardis.yml:</p> <pre><code>notificationsDisable:\n  - METADATA_STATUS\n  - UNUSED_METADATAS\n</code></pre> <p>Example in env var:</p> <pre><code>NOTIFICATIONS_DISABLE=METADATA_STATUS,UNUSED_METADATAS\n</code></pre>"},{"location":"salesforce-monitoring-config-home/#monitoring-commands","title":"Monitoring commands","text":"<p>You can decide to disable commands by defining either a monitoringDisable property in <code>.sfdx-hardis.yml</code>, or a comma separated list in env variable MONITORING_DISABLE</p> <p>Example in .sfdx-hardis.yml:</p> <pre><code>monitoringDisable:\n  - METADATA_STATUS\n  - UNUSED_METADATAS\n</code></pre> <p>Example in env var:</p> <pre><code>MONITORING_DISABLE=METADATA_STATUS,UNUSED_METADATAS\n</code></pre>"},{"location":"salesforce-monitoring-config-home/#troubleshooting","title":"Troubleshooting","text":"<p>You might want to customize which metadatas types are backuped, because you can't monitor more than 10000 items.</p> <p>If there are more than 10000 items, your monitoring job will crash.</p> <p>In that case, you can:</p> <ul> <li>Single Branch scope: Manually update file <code>manifest/package-skip-items.xml</code> in the branch corresponding to an org, then commit and push. It works with:<ul> <li>Full wildcard (<code>&lt;members&gt;*&lt;/members&gt;</code>)</li> <li>Named metadata (<code>&lt;members&gt;Account.Name&lt;/members&gt;</code>)</li> <li>Partial wildcards names (<code>&lt;members&gt;pi__*&lt;/members&gt;</code> , <code>&lt;members&gt;*__dlm&lt;/members&gt;</code> , or <code>&lt;members&gt;prefix*suffix&lt;/members&gt;</code>)</li> </ul> </li> </ul> <ul> <li>All branches scope: Define CI/CD env var MONITORING_BACKUP_SKIP_METADATA_TYPES with the list of additional metadata types you want to skip<ul> <li>example: `MONITORING_BACKUP_SKIP_METADATA_TYPES=CustomLabel,StaticResource,Translation`</li> </ul> </li> </ul>"},{"location":"salesforce-monitoring-deprecated-api-calls/","title":"Suspect Setup Actions (Salesforce monitoring)","text":""},{"location":"salesforce-monitoring-deprecated-api-calls/#detect-calls-to-deprecated-api-versions","title":"Detect calls to deprecated API versions","text":"<p>Will check if legacy API versions are called by external tools.</p> <p>Sfdx-hardis command: sf hardis:org:diagnose:legacyapi</p> <p>Key: LEGACY_API</p>"},{"location":"salesforce-monitoring-deprecated-api-calls/#grafana-example","title":"Grafana example","text":""},{"location":"salesforce-monitoring-deprecated-api-calls/#slack-example","title":"Slack example","text":""},{"location":"salesforce-monitoring-home/","title":"How to monitor your Salesforce Org","text":"<ul> <li>Monitor your Salesforce org with sfdx-hardis</li> <li>How does it work ?</li> <li>All Monitoring Commands</li> </ul>"},{"location":"salesforce-monitoring-home/#monitor-your-salesforce-org-with-sfdx-hardis","title":"Monitor your Salesforce org with sfdx-hardis","text":"<p>This feature worked yesterday in production, but today it crashes, what happened ?</p> <p>Instead of reading, watch the presentation at Dreamforce 24 conference in San Francisco !</p> <p>or if you like reading, here are the slides !</p> <p>Salesforce provide Audit Trail to trace configuration updates in production or sandbox orgs.</p> <p>You can know who updated what, but not with details (before / after).</p> <p>Sfdx-hardis monitoring provides a simple way to Backup your orgs metadatas everyday, or even several times a day, and provides an exact and detailed comparison with the previous metadata configuration (using git commits comparison)</p> <p>Extra indicators are also available out of the box, like:</p> <ul> <li>Run apex tests (and soon flow tests)</li> <li>Analyze the quality and the security of your metadatas with MegaLinter</li> <li>Checking org limits</li> <li>Be warned of release updates</li> <li>Check if you have deprecated api versions called</li> <li>Custom command lines that you can define in <code>.sfdx-hardis.yml</code></li> </ul> <p>You don't need to work in CI/CD to use Monitoring, it is compliant with any API enabled org :)</p> <p>Installation and usage are admin-friendly, and notifications can be sent via Slack or Microsoft Teams.</p> <p>Example of visualization in Grafana</p> <p></p> <p></p> <p></p> <p>Example notifications with Slack</p> <p></p> <p>Example of a monitoring git repository</p> <p></p>"},{"location":"salesforce-monitoring-home/#how-does-it-work","title":"How does it work ?","text":"<p>Every night (or even more frequently, according to your schedule), a CI job will be triggered.</p> <p>It will extract all the metadatas of your org, then push a new commit in the monitoring repository in case there are updates since the latest metadata backup.</p> <p></p> <p>Example workflow with GitHub actions</p> <p></p> <p>Example diff visualization with GitLens</p> <p></p> <p>The list of updated metadatas will be sent via notification to a Slack and/or Microsoft Teams channel.</p> <p>After the metadata backup, other jobs will be triggered (Apex tests, Code Quality, Legacy API checks + your own commands), and their results will be stored in job artifacts and sent via notifications.</p> <p>Are you ready ? Configure the monitoring on your orgs !</p>"},{"location":"salesforce-monitoring-home/#all-monitoring-commands","title":"All Monitoring Commands","text":"<p>The following checks are active out of the box.</p> <p>In order to avoid to overflow channels of notifications, some commands are run everyday whereas less critical ones are run weekly (on saturday).</p> <p>You can force the daily run of all commands by defining env var <code>MONITORING_IGNORE_FREQUENCY=true</code>.</p> Check Frequency Metadata Backup Daily Detect suspect setup actions in major org Daily Apex tests Daily Quality Checks with MegaLinter Daily Detect limits issues Daily Detect calls to deprecated API versions Daily Check Release Updates Weekly Detect inactive users Weekly Detect not used Apex Classes (Batch,Schedulable,Queueable) Weekly Detect not used Connected Apps Weekly Detect unused licenses Weekly Detect custom elements with no access rights defined in permission sets Weekly Detect custom labels and custom permissions that are not in use Weekly Detect inactive metadata Weekly Detect missing attributes Weekly"},{"location":"salesforce-monitoring-inactive-metadata/","title":"Inactive Metadatas (Salesforce monitoring)","text":""},{"location":"salesforce-monitoring-inactive-metadata/#detect-inactive-metadata","title":"Detect inactive metadata","text":"<p>Are you sure this inactive flow should be inactive ?</p> <p>And what about this deactivated Validation Rule ?</p> <p>Maybe it's time to remove them !</p> <p>Full list of metadata types that are checked:</p> <ul> <li>Approval Processes</li> <li>Assignment Rules</li> <li>Auto Response Rules</li> <li>Escalation Rules</li> <li>Flows</li> <li>Forecasting Types</li> <li>Record Types</li> <li>Validation Rules</li> <li>Workflow Rules</li> </ul> <p>Sfdx-hardis command: sf hardis:lint:metadatastatus</p> <p>Key: METADATA_STATUS</p>"},{"location":"salesforce-monitoring-inactive-metadata/#grafana-example","title":"Grafana example","text":""},{"location":"salesforce-monitoring-inactive-metadata/#slack-example","title":"Slack example","text":""},{"location":"salesforce-monitoring-inactive-metadata/#local-example","title":"Local example","text":""},{"location":"salesforce-monitoring-inactive-users/","title":"Inactive Users (Salesforce monitoring)","text":""},{"location":"salesforce-monitoring-inactive-users/#detect-inactive-users","title":"Detect inactive users","text":"<p>Detect if you are paying licenses for users that did not login for more than 6 months !</p> <p>Sfdx-hardis command: sf hardis:org:diagnose:unusedusers</p> <p>Key: UNUSED_USERS</p>"},{"location":"salesforce-monitoring-inactive-users/#grafana-example","title":"Grafana example","text":""},{"location":"salesforce-monitoring-inactive-users/#slack-example","title":"Slack example","text":""},{"location":"salesforce-monitoring-metadata-backup/","title":"Metadata backup (Salesforce monitoring)","text":""},{"location":"salesforce-monitoring-metadata-backup/#metadata-backup","title":"Metadata Backup","text":"<p>Adds a new commit in the git branch with the newest updates since latest monitoring run.</p> <p>Sfdx-hardis command: sf hardis:org:monitor:backup</p>"},{"location":"salesforce-monitoring-metadata-backup/#grafana-example","title":"Grafana example","text":""},{"location":"salesforce-monitoring-metadata-backup/#slack-example","title":"Slack example","text":""},{"location":"salesforce-monitoring-missing-access/","title":"Missing metadata access (Salesforce monitoring)","text":""},{"location":"salesforce-monitoring-missing-access/#detect-custom-elements-with-no-access-rights-defined-in-permission-sets","title":"Detect custom elements with no access rights defined in permission sets","text":"<p>If there are elements that nobody has access to (not existing on any Profile or Permission Set), maybe they should be removed !</p> <p>Sfdx-hardis command: sf hardis:lint:access</p> <p>Key: LINT_ACCESS</p>"},{"location":"salesforce-monitoring-missing-access/#grafana-example","title":"Grafana example","text":""},{"location":"salesforce-monitoring-missing-access/#slack-example","title":"Slack example","text":""},{"location":"salesforce-monitoring-missing-metadata-attributes/","title":"Missing metadata attributes (Salesforce monitoring)","text":""},{"location":"salesforce-monitoring-missing-metadata-attributes/#detect-missing-attributes","title":"Detect missing attributes","text":"<p>Follow best practices by documenting your data model !</p> <p>Sfdx-hardis command: sf hardis:lint:missingattributes</p> <p>Key: MISSING_ATTRIBUTES</p>"},{"location":"salesforce-monitoring-missing-metadata-attributes/#grafana-example","title":"Grafana example","text":""},{"location":"salesforce-monitoring-missing-metadata-attributes/#slack-example","title":"Slack example","text":""},{"location":"salesforce-monitoring-org-limits/","title":"Org limits (Salesforce monitoring)","text":""},{"location":"salesforce-monitoring-org-limits/#detect-org-limits-issues","title":"Detect org limits issues","text":"<p>There are many limits on a Salesforce org:</p> <ul> <li>Data storage</li> <li>File storage</li> <li>Daily API Calls</li> <li>Daily Bulk API Calls</li> <li>Daily Platform events</li> <li>and about 40 others !</li> </ul> <p>This feature controls that they are not reached, and will send notifications:</p> <ul> <li>Info: &gt; 50%</li> <li>Warning &gt; 75%</li> <li>Error &gt; 100%</li> </ul> <p>Sfdx-hardis command: sf hardis:org:monitor:limits</p> <p>Key: ORG_LIMITS</p>"},{"location":"salesforce-monitoring-org-limits/#grafana-example","title":"Grafana example","text":""},{"location":"salesforce-monitoring-org-limits/#slack-example","title":"Slack example","text":""},{"location":"salesforce-monitoring-quality-checks/","title":"Quality Checks with MegaLinter (Salesforce monitoring)","text":""},{"location":"salesforce-monitoring-quality-checks/#quality-checks-with-megalinter","title":"Quality Checks with MegaLinter","text":"<p>Will check if best practices are applied for:</p> <ul> <li>Apex with PMD</li> <li>LWC &amp; Aura with eslint</li> <li>Flows with Lightning Flow Scanner</li> <li>Security with checkov, gitleaks, secretlint, trivy...</li> </ul> <p>Full list in MegaLinter Documentation</p> <p></p>"},{"location":"salesforce-monitoring-release-updates/","title":"Check Release Updates (Salesforce monitoring)","text":""},{"location":"salesforce-monitoring-release-updates/#check-release-updates","title":"Check Release Updates","text":"<p>Before publishing Breaking Changes \u274c, Salesforce announce them in the setup menu Release Updates</p> <p>\u26a0\ufe0f Some of them are very important, because if you don't make the related upgrades in time (ex: before Winter 25) , your production org can crash !</p> <p>This command will extract the Release Updates that needs to be checked in your org !</p> <p>Sfdx-hardis command: sf hardis:org:diagnose:releaseupdates</p> <p>Key: RELEASE_UPDATES*</p>"},{"location":"salesforce-monitoring-release-updates/#grafana-example","title":"Grafana example","text":""},{"location":"salesforce-monitoring-release-updates/#slack-example","title":"Slack example","text":""},{"location":"salesforce-monitoring-suspect-audit-trail/","title":"Suspect Setup Actions (Salesforce monitoring)","text":""},{"location":"salesforce-monitoring-suspect-audit-trail/#detect-suspect-setup-actions-in-major-org","title":"Detect suspect setup actions in major org","text":"<p>Will extract from audit trail all actions that are considered as suspect, excepted the ones related to the deployment user and a given list of users, like the release manager.</p> <p>Sfdx-hardis command: sf hardis:org:diagnose:audittrail</p> <p>Key: AUDIT_TRAIL</p>"},{"location":"salesforce-monitoring-suspect-audit-trail/#grafana-example","title":"Grafana example","text":""},{"location":"salesforce-monitoring-suspect-audit-trail/#slack-example","title":"Slack example","text":""},{"location":"salesforce-monitoring-suspect-audit-trail/#excel-output-example","title":"Excel output example","text":""},{"location":"salesforce-monitoring-suspect-audit-trail/#local-output-example","title":"Local output example","text":""},{"location":"salesforce-monitoring-unused-apex-classes/","title":"Detect unused Apex Classes (Salesforce monitoring)","text":""},{"location":"salesforce-monitoring-unused-apex-classes/#detect-unused-apex-classes","title":"Detect unused Apex Classes","text":"<p>List all async Apex classes (Batch,Queueable,Schedulable) that has not been called for more than 365 days.</p> <p>The result class list probably can be removed from the project, and that will improve your test classes performances :)</p> <p>The command uses queries on AsyncApexJob and CronTrigger technical tables to build the result.</p> <p>Sfdx-hardis command: sf hardis:org:diagnose:unused-apex-classes</p> <p>Key: UNUSED_APEX_CLASSES</p>"},{"location":"salesforce-monitoring-unused-apex-classes/#grafana-example","title":"Grafana example","text":""},{"location":"salesforce-monitoring-unused-apex-classes/#slack-example","title":"Slack example","text":""},{"location":"salesforce-monitoring-unused-connected-apps/","title":"Detect unused Connected Apps (Salesforce monitoring)","text":""},{"location":"salesforce-monitoring-unused-connected-apps/#detect-unused-connected-apps","title":"Detect unused Connected Apps","text":"<p>List all Connected Apps that might be not used anymore</p> <p>You might disable them or even delete them to clean your org from technical debt and avoid security risks.</p> <p>Sfdx-hardis command: sf hardis:org:diagnose:unused-connected-apps</p> <p>Key: CONNECTED_APPS</p>"},{"location":"salesforce-monitoring-unused-connected-apps/#grafana-example","title":"Grafana example","text":"<p>TODO</p>"},{"location":"salesforce-monitoring-unused-connected-apps/#slack-example","title":"Slack example","text":"<p>TODO</p>"},{"location":"salesforce-monitoring-unused-licenses/","title":"Unused Licenses (Salesforce monitoring)","text":""},{"location":"salesforce-monitoring-unused-licenses/#detect-unused-licenses","title":"Detect unused licenses","text":"<p>When you assign a Permission Set to a user, and that this Permission Set is related to a Permission Set License, a Permission Set License Assignment is automatically created for the user.</p> <p>But when you unassign this Permission Set from the user, the Permission Set License Assignment is not deleted.</p> <p>This leads that you can be charged for Permission Set Licenses that are not used !</p> <p>This command detects such useless Permission Set Licenses Assignments and suggests to delete them.</p> <p>Many thanks to Vincent Finet for the inspiration during his great speaker session at French Touch Dreamin '23, and his kind agreement for reusing such inspiration in this command :)</p> <p>Sfdx-hardis command: sf hardis:org:diagnose:unusedlicenses</p> <p>Key: UNUSED_LICENSES</p>"},{"location":"salesforce-monitoring-unused-licenses/#grafana-example","title":"Grafana example","text":""},{"location":"salesforce-monitoring-unused-licenses/#slack-example","title":"Slack example","text":""},{"location":"salesforce-monitoring-unused-metadata/","title":"Unused Metadatas (Salesforce monitoring)","text":""},{"location":"salesforce-monitoring-unused-metadata/#detect-metadatas-that-are-not-used","title":"Detect metadatas that are not used","text":"<p>If there are elements that are not used by anything, maybe they should be removed !</p> <p>Today working with:</p> <ul> <li>Custom Labels</li> <li>Custom Permissions</li> </ul> <p>Sfdx-hardis command: sf hardis:lint:unusedmetadatas</p> <p>Key: UNUSED_METADATAS</p>"},{"location":"salesforce-monitoring-unused-metadata/#grafana-example","title":"Grafana example","text":""},{"location":"salesforce-monitoring-unused-metadata/#slack-example","title":"Slack example","text":""},{"location":"salesforce-project-doc-ai/","title":"Enhance with AI your Salesforce Project Documentation","text":""},{"location":"salesforce-project-doc-ai/#improve-with-ai","title":"Improve with AI","text":"<p>If AI Integration is configured, the following parts of the documentation with be generated / enhanced</p> <ul> <li>Custom Object description, fields, validation rules</li> <li>Flow descriptions, Flow History differences description</li> <li>Lightning page description</li> </ul> <p>Configure AI integration following the related documentation</p>"},{"location":"salesforce-project-doc-cloudflare/","title":"Host your AI-enhanced Salesforce Project Documentation on Cloudflare free tier","text":""},{"location":"salesforce-project-doc-cloudflare/#host-on-cloudflare","title":"Host on Cloudflare","text":"<p>You can also host your HTML documentation on Cloudflare free tier !</p> <p></p>"},{"location":"salesforce-project-doc-cloudflare/#manually","title":"Manually","text":"<ul> <li>Run command Documentation Generation -&gt; Upload HTML Doc to Cloudflare<ul> <li>Corresponding command line: <code>sf hardis:doc:mkdocs-to-cf</code></li> </ul> </li> </ul>"},{"location":"salesforce-project-doc-cloudflare/#from-cicd","title":"From CI/CD","text":"<p>If using sfdx-hardis monitoring, just set the variable SFDX_HARDIS_DOC_DEPLOY_TO_CLOUDFLARE=true (or the .sfdx-hardis.yml variable <code>docDeployToCloudflare: true</code>)</p> <p>If using custom pipelines, add <code>sf hardis:doc:project2markdown --with-history</code> then <code>sf hardis:doc:mkdocs-to-cf</code> in your workflow.</p> <p>Make sure the following variables are defined and available from the backup command script</p> <ul> <li>SFDX_HARDIS_DOC_DEPLOY_TO_CLOUDFLARE=true</li> <li>CLOUDFLARE_EMAIL</li> <li>CLOUDFLARE_API_TOKEN</li> <li>CLOUDFLARE_ACCOUNT_ID</li> <li>CLOUDFLARE_PROJECT_NAME</li> <li>CLOUDFLARE_DEFAULT_LOGIN_METHOD_TYPE (optional, <code>onetimepin</code> by default)</li> <li>CLOUDFLARE_DEFAULT_ACCESS_EMAIL_DOMAIN  (optional, <code>@cloudity.com</code> by default)</li> <li>CLOUDFLARE_EXTRA_ACCESS_POLICY_ID_LIST (optional)</li> </ul>"},{"location":"salesforce-project-doc-cloudflare/#create-configure-cloudflare-free-tier","title":"Create &amp; Configure Cloudflare free tier","text":"<p>Follow the video tutorial to see all described steps click by click :)</p> <ul> <li>Create a new Cloudflare account on cloudflare.com</li> </ul> <ul> <li>Create an Cloudflare API Token with the following scopes, and set it in CI/CD variable CLOUDFLARE_API_TOKEN<ul> <li>Account.Cloudflare Pages</li> <li>Account.Access: Organizations, Identity Providers, and Groups</li> <li>Account.Access: Apps and Policies</li> <li>User.User Details</li> </ul> </li> </ul> <ul> <li>Set CI/CD variable CLOUDFLARE_PROJECT_NAME, it will be used to build the pages site (uses the repo name by default)</li> </ul> <ul> <li>Set CI/CD variable CLOUDFLARE_EMAIL, with the email you used to create the Cloudflare account</li> </ul> <ul> <li>Set CI/CD variable CLOUDFLARE_ACCOUNT_ID<ul> <li>To get its value, run <code>npm install wrangler -g &amp;&amp; wrangler login &amp;&amp; wrangler whoami</code></li> </ul> </li> </ul> <ul> <li>Set CI/CD variable CLOUDFLARE_DEFAULT_ACCESS_EMAIL_DOMAIN , using your company email domain.</li> </ul> <ul> <li>Configure a new Cloudflare Zero Trust Team<ul> <li>Select free tier (you need a credit card that won't be charged)</li> </ul> </li> </ul> <ul> <li>If you want additional access policies, create them manually in Cloudflare Zero trust config, and set their ids in variable CLOUDFLARE_EXTRA_ACCESS_POLICY_ID_LIST</li> </ul>"},{"location":"salesforce-project-doc-generate/","title":"Generate Salesforce Project Documentation","text":""},{"location":"salesforce-project-doc-generate/#how-to-generate","title":"How To generate","text":"<ul> <li>Use the Git repository containing your SFDX project, or create it easily using sfdx-hardis Monitoring, or simply calling BackUp command</li> </ul> <ul> <li>Call VsCode SFDX-Hardis command Documentation Generation &gt; Generate Project Documentation (with history)<ul> <li>Corresponding command line: <code>sf hardis:doc:project2markdown --with-history</code></li> </ul> </li> </ul>"},{"location":"salesforce-project-doc-generate/#run-locally","title":"Run Locally","text":"<ul> <li>Run command Documentation Generation &gt; Run local HTML Doc Pages (Note: you need  Python on your computer)<ul> <li>Corresponding command lines: <code>pip install mkdocs-material mdx_truly_sane_lists</code>, then <code>mkdocs serve -v</code></li> <li>Alternative 1: <code>python -m pip install mkdocs-material mdx_truly_sane_lists</code>, then <code>python -m mkdocs serve -v</code></li> <li>Alternative 2: <code>py -m pip install mkdocs-material mdx_truly_sane_lists</code>, then <code>py -m mkdocs serve -v</code></li> </ul> </li> </ul> <ul> <li>Open http://127.0.0.1:8000/ in your Web Browser</li> </ul>"},{"location":"salesforce-project-doc-host-on-salesforce/","title":"Host your AI-enhanced Salesforce Project Documentation on Salesforce","text":""},{"location":"salesforce-project-doc-host-on-salesforce/#host-on-salesforce-org","title":"Host on Salesforce org","text":"<p>You can also host the HTML documentation directly in your Salesforce org !</p> <p>If your have too many metadatas, the pages will be too big for a single static resource. In that case, consider self-hosting your doc website using Cloudflare or your own secured HTTP server.</p> <p></p>"},{"location":"salesforce-project-doc-host-on-salesforce/#manually","title":"Manually","text":"<ul> <li>Run command Documentation Generation -&gt; Upload HTML Doc to Salesforce<ul> <li>Corresponding command line: <code>sf hardis:doc:mkdocs-to-salesforce</code></li> </ul> </li> </ul> <ul> <li>Set generated Custom Tab as <code>Default On</code> on your Profile if necessary</li> </ul> <ul> <li>Assign generated Permission Set to the users you want to access the SFDX Doc tab</li> </ul> <ul> <li>Add the tab in a Lightning Application (optional)</li> </ul>"},{"location":"salesforce-project-doc-host-on-salesforce/#from-cicd","title":"From CI/CD","text":"<p>If using sfdx-hardis monitoring, just set the variable SFDX_HARDIS_DOC_DEPLOY_TO_ORG=true (or the .sfdx-hardis.yml variable <code>docDeployToOrg: true</code>)</p> <p>If using custom pipelines, add <code>sf hardis:doc:project2markdown --with-history</code> then <code>sf hardis:doc:mkdocs-to-salesforce</code> in your workflow.</p>"},{"location":"salesforce-project-documentation/","title":"Your AI-enhanced Salesforce Project Documentation","text":""},{"location":"salesforce-project-documentation/#salesforce-project-documentation","title":"Salesforce Project Documentation","text":"<p>With a single command, you can generate a Web Site documenting your Salesforce metadatas</p> <ul> <li>Custom Objects (with fields, validation rules, relationships and dependencies)</li> <li>Flows</li> <li>Apex Classes</li> <li>Lightning Pages</li> </ul> <p>The documentation will be supercharged with AI if activated;</p> <p></p> <p></p> <p></p> <p>If it is a sfdx-hardis CI/CD project, a diagram of the branches and orgs strategy will be generated.</p> <p></p>"},{"location":"sfdx-hardis-config-file/","title":".sfdx-hardis.yml config file","text":"<p>sfdx-hardis projects are like any other sfdx projects, but with an additional configuration stored in a .sfdx-hardis.yml config file</p> <p>Many of these properties are automatically set by CI/CD setup and maintenance operations.</p> <p>You can see the list of all configuration properties.</p> <p>Here is an example of a .sfdx-hardis.yml config file:</p> <pre><code>projectName: MyClient\ndevHubAlias: DevHub_MyClient\ndevelopmentBranch: integration\nallowedOrgTypes:\n  - sandbox\navailableTargetBranches:\n  - develop\n  - preprod\nautoCleanTypes:\n  - destructivechanges\n  - datadotcom\n  - minimizeProfiles\n  - listViewsMine\nautoRemoveUserPermissions:\n  - EnableCommunityAppLauncher\n  - FieldServiceAccess\n  - OmnichannelInventorySync\n  - SendExternalEmailAvailable\n  - UseOmnichannelInventoryAPIs\n  - ViewDataLeakageEvents\n  - ViewMLModels\n  - ViewPlatformEvents\n  - WorkCalibrationUser\nautoRetrieveWhenPull:\n  - CustomApplication:MyClient\n  - CustomApplication:MyClientConnectApplication\n  - CustomApplication:MyOtherApplication\n  - CustomMetadata\ndevHubUsername: nicolas.vuillamy@ext.myclient.com\ninstallPackagesDuringCheckDeploy: true\ninstalledPackages:\n  - Id: 0A37Z000000AtDYSA0\n    SubscriberPackageId: 033i0000000LVMYAA4\n    SubscriberPackageName: Marketing Cloud\n    SubscriberPackageNamespace: et4ae5\n    SubscriberPackageVersionId: 04t6S000001UjutQAC\n    SubscriberPackageVersionName: Marketing Cloud\n    SubscriberPackageVersionNumber: 238.3.0.2\n    installOnScratchOrgs: true\n    installDuringDeployments: true\n  - Id: 0A35r0000009F9CCAU\n    SubscriberPackageId: 033b0000000Pf2AAAS\n    SubscriberPackageName: Declarative Lookup Rollup Summaries Tool\n    SubscriberPackageNamespace: dlrs\n    SubscriberPackageVersionId: 04t5p000001BmLvAAK\n    SubscriberPackageVersionName: Release\n    SubscriberPackageVersionNumber: 2.15.0.9\n    installOnScratchOrgs: true\n    installDuringDeployments: true\ninitPermissionSets:\n  - AdminDefault\n  - MarketingCloudConnectedApp\n  - ApiUserPS\nlistViewsToSetToMine:\n  - force-app/main/default/objects/Operation__c/listViews/MyCurrentOperations.listView-meta.xml\n  - force-app/main/default/objects/Operation__c/listViews/MyFinalizedOperations.listView-meta.xml\n</code></pre>"},{"location":"sfdx-hardis-help/","title":"sfdx-hardis help","text":"<p>You have a question or need assistance ?</p> <p>Feel free to contact us \ud83d\ude42 :)</p>"},{"location":"special-thanks/","title":"Special Thanks about sfdx-hardis","text":""},{"location":"special-thanks/#trailblazer-community","title":"Trailblazer community","text":"<ul> <li>Roman Hentschke, for building the BitBucket CI/CD integration</li> <li>Leo Jokinen, for building the GitHub CI/CD integration</li> </ul>"},{"location":"special-thanks/#contributors","title":"Contributors","text":""},{"location":"special-thanks/#inspirations","title":"Inspirations","text":""},{"location":"hardis/auth/login/","title":"login","text":""},{"location":"hardis/auth/login/#hardisauthlogin","title":"hardis:auth:login","text":""},{"location":"hardis/auth/login/#description","title":"Description","text":"<p>Login to salesforce org</p>"},{"location":"hardis/auth/login/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) devhub-h boolean Also connect associated DevHub flags-dir option undefined instanceurl-r option URL of org instance json boolean Format output as json. scratchorg-s boolean Scratch org skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/auth/login/#examples","title":"Examples","text":"<pre><code>$ sf hardis:auth:login\n</code></pre> <pre><code>CI=true sf hardis:auth:login\n</code></pre>"},{"location":"hardis/cache/clear/","title":"clear","text":""},{"location":"hardis/cache/clear/#hardiscacheclear","title":"hardis:cache:clear","text":""},{"location":"hardis/cache/clear/#description","title":"Description","text":"<p>Clear cache generated by sfdx-hardis</p>"},{"location":"hardis/cache/clear/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/cache/clear/#examples","title":"Examples","text":"<pre><code>$ sf hardis:cache:clear\n</code></pre>"},{"location":"hardis/config/get/","title":"get","text":""},{"location":"hardis/config/get/#hardisconfigget","title":"hardis:config:get","text":""},{"location":"hardis/config/get/#description","title":"Description","text":"<p>Returns sfdx-hardis project config for a given level</p>"},{"location":"hardis/config/get/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. level-l option project,branch or user project projectbranchuser skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/config/get/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:deploy:sources:metadata\n</code></pre>"},{"location":"hardis/deploy/quick/","title":"quick","text":""},{"location":"hardis/deploy/quick/#hardisdeployquick","title":"hardis:deploy:quick","text":""},{"location":"hardis/deploy/quick/#description","title":"Description","text":"<p>sfdx-hardis wrapper for sf project deploy quick that displays tips to solve deployment errors.</p> <p>Note: Use --json argument to have better results</p> <p></p> <p>See documentation of Salesforce command</p>"},{"location":"hardis/deploy/quick/#deployment-pre-or-post-commands","title":"Deployment pre or post commands","text":"<p>You can define command lines to run before or after a deployment, with parameters:</p> <ul> <li>id: Unique Id for the command</li> <li>label: Human readable label for the command</li> <li>skipIfError: If defined to \"true\", the post-command won't be run if there is a deployment failure</li> <li>context: Defines the context where the command will be run. Can be all (default), check-deployment-only or process-deployment-only</li> <li>runOnlyOnceByOrg: If set to true, the command will be run only one time per org. A record of SfdxHardisTrace__c is stored to make that possible (it needs to be existing in target org)</li> </ul> <p>If the commands are not the same depending on the target org, you can define them into config/branches/.sfdx-hardis-BRANCHNAME.yml instead of root config/.sfdx-hardis.yml</p> <p>Example:</p> <pre><code>commandsPreDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to the deployment user\n    command: sf data update record --sobject User --where \"Username='deploy.github@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n\ncommandsPostDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to desired username\n    command: sf data update record --sobject User --where \"Username='admin-yser@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n  - id: someActionToRunJustOneTime\n    label: And to run only if deployment is success\n    command: sf sfdmu:run ...\n    skipIfError: true\n    context: process-deployment-only\n    runOnlyOnceByOrg: true\n</code></pre>"},{"location":"hardis/deploy/quick/#parameters","title":"Parameters","text":"Name Type Description Default Required Options --job-id-i option job-id --use-most-recent-r boolean use-most-recent api-version-a option api-version async boolean async debug boolean debug flags-dir option undefined json boolean Format output as json. target-org-o option undefined tests option tests wait-w option wait 33"},{"location":"hardis/deploy/quick/#examples","title":"Examples","text":""},{"location":"hardis/deploy/start/","title":"start","text":""},{"location":"hardis/deploy/start/#hardisdeploystart","title":"hardis:deploy:start","text":""},{"location":"hardis/deploy/start/#description","title":"Description","text":"<p>sfdx-hardis wrapper for sf project deploy start that displays tips to solve deployment errors.</p> <p>Note: Use --json argument to have better results</p> <p></p> <p>See documentation of Salesforce command</p>"},{"location":"hardis/deploy/start/#deployment-pre-or-post-commands","title":"Deployment pre or post commands","text":"<p>You can define command lines to run before or after a deployment, with parameters:</p> <ul> <li>id: Unique Id for the command</li> <li>label: Human readable label for the command</li> <li>skipIfError: If defined to \"true\", the post-command won't be run if there is a deployment failure</li> <li>context: Defines the context where the command will be run. Can be all (default), check-deployment-only or process-deployment-only</li> <li>runOnlyOnceByOrg: If set to true, the command will be run only one time per org. A record of SfdxHardisTrace__c is stored to make that possible (it needs to be existing in target org)</li> </ul> <p>If the commands are not the same depending on the target org, you can define them into config/branches/.sfdx-hardis-BRANCHNAME.yml instead of root config/.sfdx-hardis.yml</p> <p>Example:</p> <pre><code>commandsPreDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to the deployment user\n    command: sf data update record --sobject User --where \"Username='deploy.github@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n\ncommandsPostDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to desired username\n    command: sf data update record --sobject User --where \"Username='admin-yser@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n  - id: someActionToRunJustOneTime\n    label: And to run only if deployment is success\n    command: sf sfdmu:run ...\n    skipIfError: true\n    context: process-deployment-only\n    runOnlyOnceByOrg: true\n</code></pre>"},{"location":"hardis/deploy/start/#parameters","title":"Parameters","text":"Name Type Description Default Required Options api-version-a option api-version async boolean async coverage-formatters option coverage-formatters debug boolean debug dry-run boolean dry-run flags-dir option undefined ignore-conflicts-c boolean ignore-conflicts ignore-errors-r boolean ignore-errors ignore-warnings-g boolean ignore-warnings json boolean Format output as json. junit boolean junit manifest-x option manifest metadata-m option metadata metadata-dir option metadata-dir post-destructive-changes option post-destructive-changes pre-destructive-changes option pre-destructive-changes purge-on-delete boolean purge-on-delete results-dir option results-dir single-package boolean single-package source-dir-d option source-dir target-org-o option undefined test-level option test-level tests option tests wait-w option wait 33"},{"location":"hardis/deploy/start/#examples","title":"Examples","text":""},{"location":"hardis/deploy/validate/","title":"validate","text":""},{"location":"hardis/deploy/validate/#hardisdeployvalidate","title":"hardis:deploy:validate","text":""},{"location":"hardis/deploy/validate/#description","title":"Description","text":"<p>sfdx-hardis wrapper for sf project deploy validate that displays tips to solve deployment errors.</p> <p>Note: Use --json argument to have better results</p> <p></p> <p>See documentation of Salesforce command</p>"},{"location":"hardis/deploy/validate/#deployment-pre-or-post-commands","title":"Deployment pre or post commands","text":"<p>You can define command lines to run before or after a deployment, with parameters:</p> <ul> <li>id: Unique Id for the command</li> <li>label: Human readable label for the command</li> <li>skipIfError: If defined to \"true\", the post-command won't be run if there is a deployment failure</li> <li>context: Defines the context where the command will be run. Can be all (default), check-deployment-only or process-deployment-only</li> <li>runOnlyOnceByOrg: If set to true, the command will be run only one time per org. A record of SfdxHardisTrace__c is stored to make that possible (it needs to be existing in target org)</li> </ul> <p>If the commands are not the same depending on the target org, you can define them into config/branches/.sfdx-hardis-BRANCHNAME.yml instead of root config/.sfdx-hardis.yml</p> <p>Example:</p> <pre><code>commandsPreDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to the deployment user\n    command: sf data update record --sobject User --where \"Username='deploy.github@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n\ncommandsPostDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to desired username\n    command: sf data update record --sobject User --where \"Username='admin-yser@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n  - id: someActionToRunJustOneTime\n    label: And to run only if deployment is success\n    command: sf sfdmu:run ...\n    skipIfError: true\n    context: process-deployment-only\n    runOnlyOnceByOrg: true\n</code></pre>"},{"location":"hardis/deploy/validate/#parameters","title":"Parameters","text":"Name Type Description Default Required Options api-version-a option api-version async boolean async coverage-formatters option coverage-formatters debug boolean debug dry-run boolean dry-run flags-dir option undefined ignore-conflicts-c boolean ignore-conflicts ignore-errors-r boolean ignore-errors ignore-warnings-g boolean ignore-warnings json boolean Format output as json. junit boolean junit manifest-x option manifest metadata-m option metadata metadata-dir option metadata-dir post-destructive-changes option post-destructive-changes pre-destructive-changes option pre-destructive-changes purge-on-delete boolean purge-on-delete results-dir option results-dir single-package boolean single-package source-dir-d option source-dir target-org-o option undefined test-level option test-level tests option tests wait-w option wait 33"},{"location":"hardis/deploy/validate/#examples","title":"Examples","text":""},{"location":"hardis/doc/fieldusage/","title":"fieldusage","text":""},{"location":"hardis/doc/fieldusage/#hardisdocfieldusage","title":"hardis:doc:fieldusage","text":""},{"location":"hardis/doc/fieldusage/#description","title":"Description","text":"<pre><code>Retrieves custom field usage from metadata dependencies for specified sObjects.\n![\"Find custom fields usage\"](https://github.com/hardisgroupcom/sfdx-hardis/raw/main/docs/assets/images/doc-fieldusage.png)\n</code></pre>"},{"location":"hardis/doc/fieldusage/#parameters","title":"Parameters","text":"Name Type Description Default Required Options flags-dir option undefined json boolean Format output as json. sObjects-s option Comma-separated list of sObjects to filter target-org-o option undefined"},{"location":"hardis/doc/fieldusage/#examples","title":"Examples","text":"<pre><code>$ sf hardis:doc:fieldusage\n</code></pre> <pre><code>$ sf hardis:doc:fieldusage --sObjects Account,Contact,Opportunity\n</code></pre> <pre><code>$ sf hardis:doc:fieldusage --target-org myOrgAlias --sObjects CustomObject__c\n</code></pre>"},{"location":"hardis/doc/flow2markdown/","title":"flow2markdown","text":""},{"location":"hardis/doc/flow2markdown/#hardisdocflow2markdown","title":"hardis:doc:flow2markdown","text":""},{"location":"hardis/doc/flow2markdown/#description","title":"Description","text":"<p>Generates a markdown documentation from a Flow file</p> <p>If AI integration is configured, documentation will contain a summary of the Flow.  </p>"},{"location":"hardis/doc/flow2markdown/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined inputfile-x option Path to Flow metadata file. If not specified, the command will prompt the user json boolean Format output as json. outputfile-f option Force the path and name of output markdown file. Must end with .md pdf boolean Also generate the documentation in PDF format skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration with-history boolean Generate a markdown file with the history diff of the Flow"},{"location":"hardis/doc/flow2markdown/#examples","title":"Examples","text":"<pre><code>$ sf hardis:doc:flow2markdown\n</code></pre> <pre><code>$ sf hardis:doc:flow2markdown --inputfile force-app/main/default/flows/MyFlow.flow-meta.xml\n</code></pre> <pre><code>$ sf hardis:doc:flow2markdown --pdf\n</code></pre> <pre><code>$ sf hardis:doc:flow2markdown --inputfile force-app/main/default/flows/MyFlow.flow-meta.xml --pdf\n</code></pre>"},{"location":"hardis/doc/mkdocs-to-cf/","title":"mkdocs-to-cf","text":""},{"location":"hardis/doc/mkdocs-to-cf/#hardisdocmkdocs-to-cf","title":"hardis:doc:mkdocs-to-cf","text":""},{"location":"hardis/doc/mkdocs-to-cf/#description","title":"Description","text":"<p>Generates MkDocs HTML pages and upload them to Cloudflare as a static pages</p> <p>This command performs the following operations:</p> <ul> <li>Generates MkDocs HTML pages (using locally installed mkdocs-material, or using mkdocs docker image)</li> <li>Creates a Cloudflare pages app</li> <li>Assigns a policy restricting access to the application</li> <li>Opens the new WebSite in the default browser (only if not in CI context)</li> </ul> <p>Note: the documentation must have been previously generated using \"sf hardis:doc:project2markdown --with-history\"</p> <p>You can:</p> <ul> <li>Override default styles by customizing mkdocs.yml</li> </ul> <p>More info on Documentation section</p> Variable Description Default <code>CLOUDFLARE_EMAIL</code> Cloudflare account email <code>CLOUDFLARE_API_TOKEN</code> Cloudflare API token <code>CLOUDFLARE_ACCOUNT_ID</code> Cloudflare account <code>CLOUDFLARE_PROJECT_NAME</code> Project name, that will also be used for site URL Built from git branch name <code>CLOUDFLARE_DEFAULT_LOGIN_METHOD_TYPE</code> Cloudflare default login method type <code>onetimepin</code> <code>CLOUDFLARE_DEFAULT_ACCESS_EMAIL_DOMAIN</code> Cloudflare default access email domain <code>@cloudity.com</code> <code>CLOUDFLARE_EXTRA_ACCESS_POLICY_ID_LIST</code> Policies to assign to every application access"},{"location":"hardis/doc/mkdocs-to-cf/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/doc/mkdocs-to-cf/#examples","title":"Examples","text":"<pre><code>$ sf hardis:doc:mkdocs-to-cf\n</code></pre>"},{"location":"hardis/doc/mkdocs-to-salesforce/","title":"mkdocs-to-salesforce","text":""},{"location":"hardis/doc/mkdocs-to-salesforce/#hardisdocmkdocs-to-salesforce","title":"hardis:doc:mkdocs-to-salesforce","text":""},{"location":"hardis/doc/mkdocs-to-salesforce/#description","title":"Description","text":"<p>Generates MkDocs HTML pages and upload them to Salesforce as a static resource</p> <p>This command performs the following operations:</p> <ul> <li>Generates MkDocs HTML pages (using locally installed mkdocs-material, or using mkdocs docker image)</li> <li>Creates a Static Resource, a VisualForce page and a Custom Tab metadata</li> <li>Upload the metadatas to the default org</li> <li>Opens the Custom Tab in the default browser (only if not in CI context)</li> </ul> <p>Note: the documentation must have been previously generated using \"sf hardis:doc:project2markdown --with-history\"</p> <p>You can:</p> <ul> <li>Specify the type of documentation to generate (CICD or Monitoring) using the --type flag. Default is CICD.</li> <li>Override default styles by customizing mkdocs.yml</li> </ul> <p>More info on Documentation section</p>"},{"location":"hardis/doc/mkdocs-to-salesforce/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-org-o option undefined type-t option Type of the documentation to generate. Default is \"all\" CICD CICDMonitoring websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/doc/mkdocs-to-salesforce/#examples","title":"Examples","text":"<pre><code>$ sf hardis:doc:mkdocs-to-salesforce\n</code></pre>"},{"location":"hardis/doc/packagexml2markdown/","title":"packagexml2markdown","text":""},{"location":"hardis/doc/packagexml2markdown/#hardisdocpackagexml2markdown","title":"hardis:doc:packagexml2markdown","text":""},{"location":"hardis/doc/packagexml2markdown/#description","title":"Description","text":"<p>Generates a markdown documentation from a package.xml file</p>"},{"location":"hardis/doc/packagexml2markdown/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined inputfile-x option Path to package.xml file. If not specified, the command will look in manifest folder json boolean Format output as json. outputfile-f option Force the path and name of output report file. Must end with .md skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/doc/packagexml2markdown/#examples","title":"Examples","text":"<pre><code>$ sf hardis:doc:packagexml2markdown\n</code></pre> <pre><code>$ sf hardis:doc:packagexml2markdown --inputfile manifest/package-all.xml\n</code></pre>"},{"location":"hardis/doc/project2markdown/","title":"project2markdown","text":""},{"location":"hardis/doc/project2markdown/#hardisdocproject2markdown","title":"hardis:doc:project2markdown","text":""},{"location":"hardis/doc/project2markdown/#description","title":"Description","text":"<p>Generates a markdown documentation from a SFDX project</p> <ul> <li>Objects</li> <li>Flows</li> <li>Apex</li> <li>Lightning Pages</li> <li>SFDX-Hardis Config</li> <li>Branches &amp; Orgs</li> <li>Installed Packages</li> <li>Manifests</li> </ul> <p>Can work on any sfdx project, no need for it to be a sfdx-hardis flavored one.</p> <p>Generates markdown files will be written in docs folder (except README.md where a link to doc index is added)</p> <ul> <li>You can customize the pages following mkdocs-material setup documentation</li> <li>You can manually add new markdown files in the \"docs\" folder to extend this documentation and add references to them in \"mkdocs.yml\"</li> <li>You can also add images in folder \"docs/assets\" and embed them in markdown files.</li> </ul> <p>To read Flow documentations if your markdown reader doesn't handle MermaidJS syntax, this command could require @mermaid-js/mermaid-cli</p> <ul> <li>Run <code>npm install @mermaid-js/mermaid-cli --global</code> if puppeteer works in your environment</li> <li>It can also be run as a docker image</li> </ul> <p>Both modes will be tried by default, but you can also force one of them by defining environment variable <code>MERMAID_MODES=docker</code> or <code>MERMAID_MODES=cli</code></p> <p>sfdx-hardis docker image is alpine-based and does not succeed to run mermaid/puppeteer: if you can help, please submit a PR !</p> <p>If Flow history doc always display a single state, you probably need to update your workflow configuration:</p> <ul> <li>on Gitlab: Env variable <code>GIT_FETCH_EXTRA_FLAGS: --depth 10000</code></li> <li>on GitHub: <code>fetch-depth: 0</code></li> <li>on Azure: <code>fetchDepth: \"0\"</code></li> <li>on Bitbucket: <code>step: clone: depth: full</code></li> </ul> <p></p> <p></p> <p></p> <p></p> <p></p> <p>If it is a sfdx-hardis CI/CD project, a diagram of the branches and orgs strategy will be generated.</p> <p></p> <p>If AI integration is configured, documentation will contain a summary of the Flow.</p> <p>If you have a complex strategy, you might need to input property mergeTargets in branch-scoped sfdx-hardis.yml file to have a correct diagram.</p>"},{"location":"hardis/doc/project2markdown/#doc-html-pages","title":"Doc HTML Pages","text":"<p>To read the documentation as HTML pages, run the following code (you need Python on your computer)</p> <pre><code>pip install mkdocs-material mkdocs-exclude-search mdx_truly_sane_lists || python -m pip install mkdocs-material mkdocs-exclude-search mdx_truly_sane_lists || py -m pip install mkdocs-material mkdocs-exclude-search mdx_truly_sane_lists\nmkdocs serve -v || python -m mkdocs serve -v || py -m mkdocs serve -v\n</code></pre> <p>To just generate HTML pages that you can host anywhere, run <code>mkdocs build -v || python -m mkdocs build -v || py -m mkdocs build -v</code></p>"},{"location":"hardis/doc/project2markdown/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) diff-only boolean Generate documentation only for changed files (used for monitoring) flags-dir option undefined json boolean Format output as json. pdf boolean Also generate the documentation in PDF format skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration with-history boolean Generate a markdown file with the history diff of the Flow"},{"location":"hardis/doc/project2markdown/#examples","title":"Examples","text":"<pre><code>$ sf hardis:doc:project2markdown\n</code></pre> <pre><code>$ sf hardis:doc:project2markdown --with-history\n</code></pre> <pre><code>$ sf hardis:doc:project2markdown --with-history --pdf\n</code></pre>"},{"location":"hardis/doc/extract/permsetgroups/","title":"permsetgroups","text":""},{"location":"hardis/doc/extract/permsetgroups/#hardisdocextractpermsetgroups","title":"hardis:doc:extract:permsetgroups","text":""},{"location":"hardis/doc/extract/permsetgroups/#description","title":"Description","text":"<p>Generate markdown files with project documentation</p>"},{"location":"hardis/doc/extract/permsetgroups/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. outputfile-f option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/doc/extract/permsetgroups/#examples","title":"Examples","text":"<pre><code>$ sf hardis:doc:extract:permsetgroups\n</code></pre>"},{"location":"hardis/doc/plugin/generate/","title":"generate","text":""},{"location":"hardis/doc/plugin/generate/#hardisdocplugingenerate","title":"hardis:doc:plugin:generate","text":""},{"location":"hardis/doc/plugin/generate/#description","title":"Description","text":"<p>Generate Markdown documentation ready for HTML conversion with mkdocs</p> <p>After the first run, you need to update manually:</p> <ul> <li>mkdocs.yml</li> <li>.github/workflows/build-deploy-docs.yml</li> <li>docs/javascripts/gtag.js , if you want Google Analytics tracking</li> </ul> <p>Then, activate Github pages, with \"gh_pages\" as target branch</p> <p>At each merge into master/main branch, the GitHub Action build-deploy-docs will rebuild documentation and publish it in GitHub pages</p>"},{"location":"hardis/doc/plugin/generate/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/doc/plugin/generate/#examples","title":"Examples","text":"<pre><code>$ sf hardis:doc:plugin:generate\n</code></pre>"},{"location":"hardis/git/pull-requests/extract/","title":"extract","text":""},{"location":"hardis/git/pull-requests/extract/#hardisgitpull-requestsextract","title":"hardis:git:pull-requests:extract","text":""},{"location":"hardis/git/pull-requests/extract/#description","title":"Description","text":"<p>Extract pull requests with filtering criteria</p>"},{"location":"hardis/git/pull-requests/extract/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. min-date-m option Minimum date for PR outputfile-f option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required status-x option Status of the PR openmergedabandoned target-branch-t option Target branch of PRs websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/git/pull-requests/extract/#examples","title":"Examples","text":"<pre><code>$ sf hardis:git:pull-requests:extract\n</code></pre> <pre><code>$ sf hardis:git:pull-requests:extract --target-branch main --status merged\n</code></pre>"},{"location":"hardis/lint/access/","title":"access","text":""},{"location":"hardis/lint/access/#hardislintaccess","title":"hardis:lint:access","text":""},{"location":"hardis/lint/access/#description","title":"Description","text":"<p>Check if elements(apex class and field) are at least in one permission set</p> <p>This command is part of sfdx-hardis Monitoring and can output Grafana, Slack and MsTeams Notifications.</p>"},{"location":"hardis/lint/access/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) elementsignored-e option Ignore specific elements separated by commas flags-dir option undefined folder-f option Root folder force-app ignorerights-i option Ignore permission sets or profiles json boolean Format output as json. outputfile-x option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/lint/access/#examples","title":"Examples","text":"<pre><code>$ sf hardis:lint:access\n</code></pre> <pre><code>$ sf hardis:lint:access -e \"ApexClass:ClassA, CustomField:Account.CustomField\"\n</code></pre> <pre><code>$ sf hardis:lint:access -i \"PermissionSet:permissionSetA, Profile\"\n</code></pre>"},{"location":"hardis/lint/metadatastatus/","title":"metadatastatus","text":""},{"location":"hardis/lint/metadatastatus/#hardislintmetadatastatus","title":"hardis:lint:metadatastatus","text":""},{"location":"hardis/lint/metadatastatus/#description","title":"Description","text":"<p>Check if elements are inactive in the project:</p> <ul> <li>Approval Processes</li> <li>Assignment Rules</li> <li>Auto Response Rules</li> <li>Escalation Rules</li> <li>Flows</li> <li>Forecasting Types</li> <li>Record Types</li> <li>Validation Rules</li> <li>Workflow Rules</li> </ul> <p></p> <p>This command is part of sfdx-hardis Monitoring and can output Grafana, Slack and MsTeams Notifications.</p>"},{"location":"hardis/lint/metadatastatus/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. outputfile-f option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/lint/metadatastatus/#examples","title":"Examples","text":"<pre><code>$ sf hardis:lint:metadatastatus\n</code></pre>"},{"location":"hardis/lint/missingattributes/","title":"missingattributes","text":""},{"location":"hardis/lint/missingattributes/#hardislintmissingattributes","title":"hardis:lint:missingattributes","text":""},{"location":"hardis/lint/missingattributes/#description","title":"Description","text":"<p>Check if elements(custom fields) aren't description</p>"},{"location":"hardis/lint/missingattributes/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. outputfile-f option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/lint/missingattributes/#examples","title":"Examples","text":"<pre><code>$ sf hardis:lint:missingattributes\n</code></pre>"},{"location":"hardis/lint/unusedmetadatas/","title":"unusedmetadatas","text":""},{"location":"hardis/lint/unusedmetadatas/#hardislintunusedmetadatas","title":"hardis:lint:unusedmetadatas","text":""},{"location":"hardis/lint/unusedmetadatas/#description","title":"Description","text":"<p>Check if elements (custom labels and custom permissions) are used in the project</p> <p>This command is part of sfdx-hardis Monitoring and can output Grafana, Slack and MsTeams Notifications.</p>"},{"location":"hardis/lint/unusedmetadatas/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. outputfile-f option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/lint/unusedmetadatas/#examples","title":"Examples","text":"<pre><code>$ sf hardis:lint:unusedmetadatas\n</code></pre>"},{"location":"hardis/mdapi/deploy/","title":"deploy","text":""},{"location":"hardis/mdapi/deploy/#hardismdapideploy","title":"hardis:mdapi:deploy","text":""},{"location":"hardis/mdapi/deploy/#description","title":"Description","text":"<p>sfdx-hardis wrapper for sfdx force:mdapi:deploy that displays tips to solve deployment errors.</p> <p></p> <p>See documentation of Salesforce command</p>"},{"location":"hardis/mdapi/deploy/#parameters","title":"Parameters","text":"Name Type Description Default Required Options checkonly-c boolean checkOnly concise boolean concise debug boolean debug deploydir-d option deployDir flags-dir option undefined ignoreerrors boolean ignoreErrors ignorewarnings-g boolean ignoreWarnings json boolean Format output as json. purgeondelete boolean purgeOnDelete runtests-r option runTests singlepackage-s boolean singlePackage soapdeploy boolean soapDeploy target-org-o option undefined testlevel-l option testLevel NoTestRun NoTestRunRunSpecifiedTestsRunLocalTestsRunAllTestsInOrg validateddeployrequestid-q option validatedDeployRequestId verbose boolean verbose wait-w option wait 120 websocket option websocket zipfile-f option zipFile"},{"location":"hardis/mdapi/deploy/#examples","title":"Examples","text":""},{"location":"hardis/misc/purge-references/","title":"purge-references","text":""},{"location":"hardis/misc/purge-references/#hardismiscpurge-references","title":"hardis:misc:purge-references","text":""},{"location":"hardis/misc/purge-references/#description","title":"Description","text":"<p>Purge references to any string in org metadatas before a deployment.</p> <p>For example, this can be handy if you need to change the type of a custom field from Master Detail to Lookup.</p> <p>USE WITH EXTREME CAUTION AND CAREFULLY READ THE MESSAGES !</p>"},{"location":"hardis/misc/purge-references/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. references-r option Comma-separated list of references to find in metadatas skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/misc/purge-references/#examples","title":"Examples","text":"<pre><code>$ sf hardis:misc:purge-references\n</code></pre>"},{"location":"hardis/misc/toml2csv/","title":"toml2csv","text":""},{"location":"hardis/misc/toml2csv/#hardismisctoml2csv","title":"hardis:misc:toml2csv","text":""},{"location":"hardis/misc/toml2csv/#description","title":"Description","text":"<p>Split TOML file into distinct CSV files</p>"},{"location":"hardis/misc/toml2csv/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) filtersections-l option List of sections to process (if not set, all sections will be processed) flags-dir option undefined json boolean Format output as json. outputdir-z option Output directory skipauth boolean Skip authentication check when a default username is required skiptransfo-s boolean Do not apply transformation to input data target-org-o option undefined tomlfile-f option Input TOML file path transfoconfig-t option Path to JSON config file for mapping and transformation websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/misc/toml2csv/#examples","title":"Examples","text":"<pre><code>$ sf hardis:misc:toml2csv --tomlfile 'D:/clients/toto/V1_full.txt' \n</code></pre> <pre><code>$ sf hardis:misc:toml2csv --skiptransfo --tomlfile 'D:/clients/toto/V1_full.txt' \n</code></pre> <pre><code>$ sf hardis:misc:toml2csv --skiptransfo --tomlfile 'D:/clients/toto/V1_full.txt' --outputdir 'C:/tmp/rrrr'\n</code></pre> <pre><code>$ NODE_OPTIONS=--max_old_space_size=9096 sf hardis:misc:toml2csv --skiptransfo --tomlfile './input/V1.txt' --outputdir './output' --filtersections 'COMPTES,SOUS'\n</code></pre>"},{"location":"hardis/org/connect/","title":"connect","text":""},{"location":"hardis/org/connect/#hardisorgconnect","title":"hardis:org:connect","text":""},{"location":"hardis/org/connect/#description","title":"Description","text":"<p>Connect to an org without setting it as default username, then proposes to open the org in web browser</p>"},{"location":"hardis/org/connect/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/connect/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:connect\n</code></pre>"},{"location":"hardis/org/create/","title":"create","text":""},{"location":"hardis/org/create/#hardisorgcreate","title":"hardis:org:create","text":""},{"location":"hardis/org/create/#description","title":"Description","text":"<p>Create and initialize sandbox org</p>"},{"location":"hardis/org/create/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/create/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:create\n</code></pre>"},{"location":"hardis/org/multi-org-query/","title":"multi-org-query","text":""},{"location":"hardis/org/multi-org-query/#hardisorgmulti-org-query","title":"hardis:org:multi-org-query","text":""},{"location":"hardis/org/multi-org-query/#description","title":"Description","text":"<p>Executes a SOQL query in multiple orgs and generate a single report from it</p> <p>You can send a custom query using --query, or use one of the predefined queries using --query-template.</p> <p>If you use the command from a CI/CD job, you must previously authenticate to the usernames present in --target-orgs.</p> <p></p>"},{"location":"hardis/org/multi-org-query/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. outputfile-f option Force the path and name of output report file. Must end with .csv query-q option SOQL Query to run on multiple orgs query-template-t option Use one of predefined SOQL Query templates active-usersall-users skipauth boolean Skip authentication check when a default username is required target-orgs-x option List of org usernames or aliases. websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/multi-org-query/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:multi-org-query\n</code></pre> <pre><code>$ sf hardis:org:multi-org-query --query \"SELECT Id,Username FROM User\"\n</code></pre> <pre><code>$ sf hardis:org:multi-org-query --query \"SELECT Id,Username FROM User\" --target-orgs nico@cloudity.com nico@cloudity.com.preprod nico@cloudity.com.uat\n</code></pre> <pre><code>$ sf hardis:org:multi-org-query --query-template active-users --target-orgs nico@cloudity.com nico@cloudity.com.preprod nico@cloudity.com.uat\n</code></pre>"},{"location":"hardis/org/select/","title":"select","text":""},{"location":"hardis/org/select/#hardisorgselect","title":"hardis:org:select","text":""},{"location":"hardis/org/select/#description","title":"Description","text":"<p>Interactive org selection for user</p>"},{"location":"hardis/org/select/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) devhub-h boolean Also connect associated DevHub flags-dir option undefined json boolean Format output as json. scratch-s boolean Select scratch org related to default DevHub skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/select/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:select\n</code></pre>"},{"location":"hardis/org/community/update/","title":"update","text":""},{"location":"hardis/org/community/update/#hardisorgcommunityupdate","title":"hardis:org:community:update","text":""},{"location":"hardis/org/community/update/#description","title":"Description","text":"<p>Activate or deactivate a community by changing it's status:</p> <ul> <li>Live</li> <li>DownForMaintenance</li> </ul>"},{"location":"hardis/org/community/update/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. name-n option List of Networks Names that you want to update, separated by comma status-s option New status for the community, available values are: Live, DownForMaintenance target-org-o option undefined"},{"location":"hardis/org/community/update/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:community:update --name 'MyNetworkName' --status DownForMaintenance\n</code></pre> <pre><code>$ sf hardis:org:community:update --name 'MyNetworkName,MySecondNetworkName' --status Live\n</code></pre>"},{"location":"hardis/org/configure/data/","title":"data","text":""},{"location":"hardis/org/configure/data/#hardisorgconfiguredata","title":"hardis:org:configure:data","text":""},{"location":"hardis/org/configure/data/#description","title":"Description","text":"<p>Configure Data Export/Import with a SFDX Data Loader Project</p> <p>See article:</p> <p></p>"},{"location":"hardis/org/configure/data/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/configure/data/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:configure:data\n</code></pre>"},{"location":"hardis/org/configure/files/","title":"files","text":""},{"location":"hardis/org/configure/files/#hardisorgconfigurefiles","title":"hardis:org:configure:files","text":""},{"location":"hardis/org/configure/files/#description","title":"Description","text":"<p>Configure export of file attachments from a Salesforce org</p> <p>See article below</p> <p></p>"},{"location":"hardis/org/configure/files/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/configure/files/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:configure:files\n</code></pre>"},{"location":"hardis/org/configure/monitoring/","title":"monitoring","text":""},{"location":"hardis/org/configure/monitoring/#hardisorgconfiguremonitoring","title":"hardis:org:configure:monitoring","text":""},{"location":"hardis/org/configure/monitoring/#description","title":"Description","text":"<p>Configure monitoring of an org</p>"},{"location":"hardis/org/configure/monitoring/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. orginstanceurl option Org instance url (technical param, do not use manually) skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/configure/monitoring/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:configure:monitoring\n</code></pre>"},{"location":"hardis/org/data/delete/","title":"delete","text":""},{"location":"hardis/org/data/delete/#hardisorgdatadelete","title":"hardis:org:data:delete","text":""},{"location":"hardis/org/data/delete/#description","title":"Description","text":"<p>Delete records in multiple objects using SFDMU Workspace</p> <p>If you need to run this command in production, you need to:</p> <ul> <li>define runnableInProduction in export.json</li> <li>define sfdmuCanModify: YOUR_INSTANCE_URL in config/branches/.sfdx-hardis.YOUR_BRANCH.yml</li> </ul>"},{"location":"hardis/org/data/delete/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. path-p option Path to the sfdmu workspace folder skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/data/delete/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:data:delete\n</code></pre>"},{"location":"hardis/org/data/export/","title":"export","text":""},{"location":"hardis/org/data/export/#hardisorgdataexport","title":"hardis:org:data:export","text":""},{"location":"hardis/org/data/export/#description","title":"Description","text":"<p>Export data from an org using a SFDX Data Loader Project</p> <p>See article:</p> <p></p>"},{"location":"hardis/org/data/export/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. path-p option Path to the sfdmu workspace folder skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/data/export/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:data:export\n</code></pre>"},{"location":"hardis/org/data/import/","title":"import","text":""},{"location":"hardis/org/data/import/#hardisorgdataimport","title":"hardis:org:data:import","text":""},{"location":"hardis/org/data/import/#description","title":"Description","text":"<p>Import/Load data in an org using a SFDX Data Loader Project</p> <p>If you need to run this command in a production org, you need to either:</p> <ul> <li>Define sfdmuCanModify in your .sfdx-hardis.yml config file. (Example: <code>sfdmuCanModify: prod-instance.my.salesforce.com</code>)</li> <li>Define an environment variable SFDMU_CAN_MODIFY. (Example: <code>SFDMU_CAN_MODIFY=prod-instance.my.salesforce.com</code>)</li> </ul> <p>See article:</p> <p></p>"},{"location":"hardis/org/data/import/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. path-p option Path to the sfdmu workspace folder skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/data/import/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:data:import\n</code></pre>"},{"location":"hardis/org/diagnose/audittrail/","title":"audittrail","text":""},{"location":"hardis/org/diagnose/audittrail/#hardisorgdiagnoseaudittrail","title":"hardis:org:diagnose:audittrail","text":""},{"location":"hardis/org/diagnose/audittrail/#description","title":"Description","text":"<p>Export Audit trail into a CSV file with selected criteria, and highlight suspect actions</p> <p>Regular setup actions performed in major orgs are filtered.</p> <ul> <li>\"\"<ul> <li>createScratchOrg</li> <li>changedsenderemail</li> <li>deleteScratchOrg</li> <li>loginasgrantedtopartnerbt</li> </ul> </li> <li>Certificate and Key Management<ul> <li>insertCertificate</li> </ul> </li> <li>Custom App Licenses<ul> <li>addeduserpackagelicense</li> <li>granteduserpackagelicense</li> <li>revokeduserpackagelicense</li> </ul> </li> <li>Customer Portal<ul> <li>createdcustomersuccessuser</li> <li>CSPUserDisabled</li> </ul> </li> <li>Currency<ul> <li>updateddatedexchrate</li> </ul> </li> <li>Data Management<ul> <li>queueMembership</li> </ul> </li> <li>Email Administration<ul> <li>dkimRotationPreparationSuccessful</li> <li>dkimRotationSuccessful</li> </ul> </li> <li>Groups<ul> <li>groupMembership</li> </ul> </li> <li>Holidays<ul> <li>holiday_insert</li> </ul> </li> <li>Inbox mobile and legacy desktop apps<ul> <li>enableSIQUserNonEAC</li> </ul> </li> <li>Manage Users<ul> <li>activateduser</li> <li>createduser</li> <li>changedcommunitynickname</li> <li>changedemail</li> <li>changedfederationid</li> <li>changedpassword</li> <li>changedinteractionuseroffon</li> <li>changedinteractionuseronoff</li> <li>changedmarketinguseroffon</li> <li>changedmarketinguseronoff</li> <li>changedprofileforuser</li> <li>changedprofileforusercusttostd</li> <li>changedprofileforuserstdtocust</li> <li>changedroleforusertonone</li> <li>changedroleforuser</li> <li>changedroleforuserfromnone</li> <li>changedUserEmailVerifiedStatusUnverified</li> <li>changedUserEmailVerifiedStatusVerified</li> <li>changedknowledgeuseroffon</li> <li>changedsfcontentuseroffon</li> <li>changedsupportuseroffon</li> <li>changedUserPhoneNumber</li> <li>changedUserPhoneVerifiedStatusUnverified</li> <li>deactivateduser</li> <li>deleteAuthenticatorPairing</li> <li>deleteTwoFactorInfo2</li> <li>deleteTwoFactorTempCode</li> <li>frozeuser</li> <li>insertAuthenticatorPairing</li> <li>insertTwoFactorInfo2</li> <li>insertTwoFactorTempCode</li> <li>lightningloginenroll</li> <li>PermSetAssign</li> <li>PermSetGroupAssign</li> <li>PermSetGroupUnassign</li> <li>PermSetLicenseAssign</li> <li>PermSetUnassign</li> <li>PermSetLicenseUnassign</li> <li>registeredUserPhoneNumber</li> <li>resetpassword</li> <li>suNetworkAdminLogin</li> <li>suNetworkAdminLogout</li> <li>suOrgAdminLogin</li> <li>suOrgAdminLogout</li> <li>unfrozeuser</li> <li>useremailchangesent</li> </ul> </li> <li>Mobile Administration<ul> <li>assigneduserstomobileconfig</li> </ul> </li> <li>Reporting Snapshots<ul> <li>createdReportJob</li> <li>deletedReportJob</li> </ul> </li> <li>Sandboxes<ul> <li>DeleteSandbox</li> </ul> </li> </ul> <p>By default, deployment user defined in .sfdx-hardis.yml targetUsername property will be excluded.</p> <p>You can define additional users to exclude in .sfdx-hardis.yml monitoringExcludeUsernames property.</p> <p>You can also add more sections / actions considered as not suspect using property monitoringAllowedSectionsActions</p> <p>Example:</p> <pre><code>monitoringExcludeUsernames:\n  - deploymentuser@cloudity.com\n  - marketingcloud@cloudity.com\n  - integration-user@cloudity.com\n\nmonitoringAllowedSectionsActions:\n  \"Some section\": [] // Will ignore all actions from such section\n  \"Some other section\": [\"actionType1\",\"actionType2\",\"actionType3\"] // Will ignore only those 3 actions from section \"Some other section\". Other actions in the same section will be considered as suspect.\n</code></pre>"},{"location":"hardis/org/diagnose/audittrail/#excel-output-example","title":"Excel output example","text":""},{"location":"hardis/org/diagnose/audittrail/#local-output-example","title":"Local output example","text":"<p>This command is part of sfdx-hardis Monitoring and can output Grafana, Slack and MsTeams Notifications.</p>"},{"location":"hardis/org/diagnose/audittrail/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) excludeusers-e option Comma-separated list of usernames to exclude flags-dir option undefined json boolean Format output as json. lastndays-t option Number of days to extract from today (included) outputfile-f option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/diagnose/audittrail/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:diagnose:audittrail\n</code></pre> <pre><code>$ sf hardis:org:diagnose:audittrail --excludeusers baptiste@titi.com\n</code></pre> <pre><code>$ sf hardis:org:diagnose:audittrail --excludeusers baptiste@titi.com,bertrand@titi.com\n</code></pre> <pre><code>$ sf hardis:org:diagnose:audittrail --lastndays 5\n</code></pre>"},{"location":"hardis/org/diagnose/instanceupgrade/","title":"instanceupgrade","text":""},{"location":"hardis/org/diagnose/instanceupgrade/#hardisorgdiagnoseinstanceupgrade","title":"hardis:org:diagnose:instanceupgrade","text":""},{"location":"hardis/org/diagnose/instanceupgrade/#description","title":"Description","text":"<p>Get the date when the org instance will be upgraded (to Spring, Summer or Winter)</p>"},{"location":"hardis/org/diagnose/instanceupgrade/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/diagnose/instanceupgrade/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:diagnose:instanceupgrade\n</code></pre>"},{"location":"hardis/org/diagnose/legacyapi/","title":"legacyapi","text":""},{"location":"hardis/org/diagnose/legacyapi/#hardisorgdiagnoselegacyapi","title":"hardis:org:diagnose:legacyapi","text":""},{"location":"hardis/org/diagnose/legacyapi/#description","title":"Description","text":"<p>Checks if an org uses retired or someday retired API version</p> <p>See article below</p> <p></p> <p>This command is part of sfdx-hardis Monitoring and can output Grafana, Slack and MsTeams Notifications.</p>"},{"location":"hardis/org/diagnose/legacyapi/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) eventtype-e option Type of EventLogFile event to analyze ApiTotalUsage flags-dir option undefined json boolean Format output as json. limit-l option Number of latest EventLogFile events to analyze 999 outputfile-f option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/diagnose/legacyapi/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:diagnose:legacyapi\n</code></pre> <pre><code>$ sf hardis:org:diagnose:legacyapi -u hardis@myclient.com\n</code></pre> <pre><code>$ sf hardis:org:diagnose:legacyapi --outputfile 'c:/path/to/folder/legacyapi.csv'\n</code></pre> <pre><code>$ sf hardis:org:diagnose:legacyapi -u hardis@myclient.com --outputfile ./tmp/legacyapi.csv\n</code></pre>"},{"location":"hardis/org/diagnose/licenses/","title":"licenses","text":""},{"location":"hardis/org/diagnose/licenses/#hardisorgdiagnoselicenses","title":"hardis:org:diagnose:licenses","text":""},{"location":"hardis/org/diagnose/licenses/#description","title":"Description","text":"<p>Mostly used for monitoring (Grafana) but you can also use it manually :)</p>"},{"location":"hardis/org/diagnose/licenses/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. outputfile-f option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required target-org-o option undefined usedonly-u boolean Filter to have only used licenses websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/diagnose/licenses/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:diagnose:licenses\n</code></pre>"},{"location":"hardis/org/diagnose/releaseupdates/","title":"releaseupdates","text":""},{"location":"hardis/org/diagnose/releaseupdates/#hardisorgdiagnosereleaseupdates","title":"hardis:org:diagnose:releaseupdates","text":""},{"location":"hardis/org/diagnose/releaseupdates/#description","title":"Description","text":"<p>Export Release Updates into a CSV file with selected criteria, and highlight Release Updates that should be checked.</p> <p>Before publishing Breaking Changes \u274c, Salesforce announce them in the setup menu Release Updates</p> <p>\u26a0\ufe0f Some of them are very important, because if you don't make the related upgrades in time (ex: before Winter 25) , your production org can crash !</p> <p>This command is part of sfdx-hardis Monitoring and can output Grafana, Slack and MsTeams Notifications.</p>"},{"location":"hardis/org/diagnose/releaseupdates/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. outputfile-f option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/diagnose/releaseupdates/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:diagnose:releaseupdates\n</code></pre>"},{"location":"hardis/org/diagnose/unused-apex-classes/","title":"unused-apex-classes","text":""},{"location":"hardis/org/diagnose/unused-apex-classes/#hardisorgdiagnoseunused-apex-classes","title":"hardis:org:diagnose:unused-apex-classes","text":""},{"location":"hardis/org/diagnose/unused-apex-classes/#description","title":"Description","text":"<p>List all async Apex classes (Batch,Queueable,Schedulable) that has not been called for more than 365 days.</p> <p>The result class list probably can be removed from the project, and that will improve your test classes performances :)</p> <p>The number of unused day is overridable using --days option. </p> <p>The command uses queries on AsyncApexJob and CronTrigger technical tables to build the result.</p> <p>Apex Classes CreatedBy and CreatedOn fields are calculated from MIN(date from git, date from org)</p> <p>This command is part of sfdx-hardis Monitoring and can output Grafana, Slack and MsTeams Notifications.</p> <p></p>"},{"location":"hardis/org/diagnose/unused-apex-classes/#parameters","title":"Parameters","text":"Name Type Description Default Required Options days-t option Extracts the users that have been inactive for the amount of days specified. In CI, default is 180 days debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. outputfile-f option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/diagnose/unused-apex-classes/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:diagnose:unused-apex-classes\n</code></pre> <pre><code>$ sf hardis:org:diagnose:unused-apex-classes --days 700\n</code></pre>"},{"location":"hardis/org/diagnose/unused-connected-apps/","title":"unused-connected-apps","text":""},{"location":"hardis/org/diagnose/unused-connected-apps/#hardisorgdiagnoseunused-connected-apps","title":"hardis:org:diagnose:unused-connected-apps","text":""},{"location":"hardis/org/diagnose/unused-connected-apps/#description","title":"Description","text":"<p>Request objects ConnectedApp, LoginHistory and OAuthToken to find which connected apps might not be used anymore, and could be deleted for security / technical debt reasons.</p> <p>Check with Connected Apps metadatas if the app is still active (inactive = \"Admin Users are pre-authorized + no Profile or Permission set assigned\")</p> <p>The following default Salesforce Connected Apps are ignored:</p> <ul> <li>Ant Migration Tool</li> <li>Chatter Desktop</li> <li>Chatter Mobile for BlackBerry</li> <li>Force.com IDE</li> <li>OIQ_Integration</li> <li>Salesforce CLI</li> <li>Salesforce Files</li> <li>Salesforce Mobile Dashboards</li> <li>Salesforce Touch</li> <li>Salesforce for Outlook</li> <li>SalesforceA</li> <li>SalesforceA for Android</li> <li>SalesforceA for iOS</li> <li>SalesforceDX Namespace Registry</li> <li>SalesforceIQ</li> </ul> <p>You can add more ignored apps by defining a comma-separated list of names in variable ALLOWED_INACTIVE_CONNECTED_APPS</p> <p>Example: ALLOWED_INACTIVE_CONNECTED_APPS=My App 1,My App 2, My App 3</p> <p>This command is part of sfdx-hardis Monitoring and can output Grafana, Slack and MsTeams Notifications.</p>"},{"location":"hardis/org/diagnose/unused-connected-apps/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. outputfile-f option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/diagnose/unused-connected-apps/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:diagnose:unused-connected-apps\n</code></pre>"},{"location":"hardis/org/diagnose/unusedlicenses/","title":"unusedlicenses","text":""},{"location":"hardis/org/diagnose/unusedlicenses/#hardisorgdiagnoseunusedlicenses","title":"hardis:org:diagnose:unusedlicenses","text":""},{"location":"hardis/org/diagnose/unusedlicenses/#description","title":"Description","text":"<p>When you assign a Permission Set to a user, and that this Permission Set is related to a Permission Set License, a Permission Set License Assignment is automatically created for the user.</p> <p>But when you unassign this Permission Set from the user, the Permission Set License Assignment is not deleted.</p> <p>This leads that you can be charged for Permission Set Licenses that are not used !</p> <p>This command detects such useless Permission Set Licenses Assignments and suggests to delete them.</p> <p>Many thanks to Vincent Finet for the inspiration during his great speaker session at French Touch Dreamin '23, and his kind agreement for reusing such inspiration in this command :)</p> <p>This command is part of sfdx-hardis Monitoring and can output Grafana, Slack and MsTeams Notifications.</p>"},{"location":"hardis/org/diagnose/unusedlicenses/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. outputfile-f option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/diagnose/unusedlicenses/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:diagnose:unusedlicenses\n</code></pre> <pre><code>$ sf hardis:org:diagnose:unusedlicenses --fix\n</code></pre>"},{"location":"hardis/org/diagnose/unusedusers/","title":"unusedusers","text":""},{"location":"hardis/org/diagnose/unusedusers/#hardisorgdiagnoseunusedusers","title":"hardis:org:diagnose:unusedusers","text":""},{"location":"hardis/org/diagnose/unusedusers/#description","title":"Description","text":"<p>Efficient user management is vital in Salesforce to ensure resources are optimized and costs are controlled. However, inactive or unused user accounts can often go unnoticed, leading to wasted licenses and potential security risks. This tool addresses this challenge by enabling administrators to identify users who haven't logged in within a specified period.</p> <p>By analyzing user login activity and last login timestamps, this feature highlights inactive user accounts, allowing administrators to take appropriate action. Whether it's deactivating dormant accounts, freeing up licenses, or ensuring compliance with security policies, this functionality empowers administrators to maintain a lean and secure Salesforce environment.</p> <p>licensetypes values are the following:</p> <ul> <li>all-crm: SFDC,AUL,AUL1,AULL_IGHT</li> </ul> <ul> <li>all-paying: SFDC,AUL,AUL1,AULL_IGHT,PID_Customer_Community,PID_Customer_Community_Login,PID_Partner_Community,PID_Partner_Community_Login</li> </ul> <p>Note: You can see the full list of available license identifiers in Salesforce Documentation</p> <p>Use --returnactiveusers to revert the command and retrieve active users that has logged in during the period.</p> <p>This command is part of sfdx-hardis Monitoring and can output Grafana, Slack and MsTeams Notifications.</p>"},{"location":"hardis/org/diagnose/unusedusers/#parameters","title":"Parameters","text":"Name Type Description Default Required Options days-t option Extracts the users that have been inactive for the amount of days specified. In CI, default is 180 days debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. licenseidentifiers-i option Comma-separated list of license identifiers, in case licensetypes is not used.. Identifiers available at https://developer.salesforce.com/docs/atlas.en-us.object_reference.meta/object_reference/sforce_api_objects_userlicense.htm licensetypes-l option Type of licenses to check. If set, do not use licenseidentifiers option. In CI, default is all-crm allall-crmall-paying outputfile-f option Force the path and name of output report file. Must end with .csv returnactiveusers boolean Inverts the command by returning the active users skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/diagnose/unusedusers/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:diagnose:unusedusers\n</code></pre> <pre><code>$ sf hardis:org:diagnose:unusedusers --days 365\n</code></pre> <pre><code>$ sf hardis:org:diagnose:unusedusers --days 60 --licensetypes all-crm\n</code></pre> <pre><code>$ sf hardis:org:diagnose:unusedusers --days 60 --licenseidentifiers SFDC,AUL,AUL1\n</code></pre> <pre><code>$ sf hardis:org:diagnose:unusedusers --days 60 --licensetypes all-crm --returnactiveusers\n</code></pre>"},{"location":"hardis/org/files/export/","title":"export","text":""},{"location":"hardis/org/files/export/#hardisorgfilesexport","title":"hardis:org:files:export","text":""},{"location":"hardis/org/files/export/#description","title":"Description","text":"<p>Export file attachments from a Salesforce org</p> <p>Handles:</p> <ul> <li>ContentVersion</li> <li>Attachment</li> </ul> <p>See article below:</p> <p></p>"},{"location":"hardis/org/files/export/#parameters","title":"Parameters","text":"Name Type Description Default Required Options chunksize-c option Number of records to add in a chunk before it is processed 1000 debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. path-p option Path to the file export project polltimeout-t option Timeout in MS for Bulk API calls 300000 skipauth boolean Skip authentication check when a default username is required startchunknumber-s option Chunk number to start from target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/files/export/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:files:export\n</code></pre>"},{"location":"hardis/org/files/import/","title":"import","text":""},{"location":"hardis/org/files/import/#hardisorgfilesimport","title":"hardis:org:files:import","text":""},{"location":"hardis/org/files/import/#description","title":"Description","text":"<p>Import file attachments into a Salesforce org</p> <p>See article below to see how to Export them.</p> <p></p>"},{"location":"hardis/org/files/import/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. overwrite-f boolean Override existing files (doubles the number of API calls) path-p option Path to the file export project skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/files/import/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:files:import\n</code></pre>"},{"location":"hardis/org/fix/listviewmine/","title":"listviewmine","text":""},{"location":"hardis/org/fix/listviewmine/#hardisorgfixlistviewmine","title":"hardis:org:fix:listviewmine","text":""},{"location":"hardis/org/fix/listviewmine/#description","title":"Description","text":"<p>Fix listviews whose scope Mine has been replaced by Everything</p> <p></p> <p>List of ListViews can be:</p> <ul> <li>read from .sfdx-hardis.yml file in property listViewsToSetToMine</li> <li>sent in argument listviews</li> </ul> <p>Note: property listViewsToSetToMine can be auto-generated by command hardis:work:save if .sfdx-hardis.yml contains the following configuration</p> <pre><code>autoCleanTypes:\n  - listViewsMine\n</code></pre> <ul> <li>Example of sfdx-hardis.yml property <code>listViewsToSetToMine</code>:</li> </ul> <pre><code>listViewsToSetToMine:\n  - \"force-app/main/default/objects/Operation__c/listViews/MyCurrentOperations.listView-meta.xml\"\n  - \"force-app/main/default/objects/Operation__c/listViews/MyFinalizedOperations.listView-meta.xml\"\n  - \"force-app/main/default/objects/Opportunity/listViews/Default_Opportunity_Pipeline.listView-meta.xml\"\n  - \"force-app/main/default/objects/Opportunity/listViews/MyCurrentSubscriptions.listView-meta.xml\"\n  - \"force-app/main/default/objects/Opportunity/listViews/MySubscriptions.listView-meta.xml\"\n  - \"force-app/main/default/objects/Account/listViews/MyActivePartners.listView-meta.xml\"\n</code></pre> <ul> <li>If manually written, this could also be:</li> </ul> <pre><code>listViewsToSetToMine:\n  - \"Operation__c:MyCurrentOperations\"\n  - \"Operation__c:MyFinalizedOperations\"\n  - \"Opportunity:Default_Opportunity_Pipeline\"\n  - \"Opportunity:MyCurrentSubscriptions\"\n  - \"Opportunity:MySubscriptions\"\n  - \"Account:MyActivePartners\"\n</code></pre> <p>Troubleshooting: if you need to run this command from an alpine-linux based docker image, use this workaround in your dockerfile:</p> <pre><code># Do not use puppeteer embedded chromium\nRUN apk add --update --no-cache chromium\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=\"true\"\nENV CHROMIUM_PATH=\"/usr/bin/chromium-browser\"\nENV PUPPETEER_EXECUTABLE_PATH=\"$\\{CHROMIUM_PATH}\" // remove \\ before {\n</code></pre>"},{"location":"hardis/org/fix/listviewmine/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. listviews-l option Comma-separated list of listviews following format Object:ListViewName Example: Contact:MyContacts,Contact:MyActiveContacts,Opportunity:MYClosedOpportunities skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/fix/listviewmine/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:fix:listviewmine\n</code></pre> <pre><code>$ sf hardis:org:fix:listviewmine --listviews Opportunity:MySubscriptions,Account:MyActivePartners\n</code></pre>"},{"location":"hardis/org/generate/packagexmlfull/","title":"packagexmlfull","text":""},{"location":"hardis/org/generate/packagexmlfull/#hardisorggeneratepackagexmlfull","title":"hardis:org:generate:packagexmlfull","text":""},{"location":"hardis/org/generate/packagexmlfull/#description","title":"Description","text":"<p>Generates full org package.xml, including managed items</p>"},{"location":"hardis/org/generate/packagexmlfull/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. outputfile option Output package.xml file skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/generate/packagexmlfull/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:generate:packagexmlfull\n</code></pre> <pre><code>$ sf hardis:org:generate:packagexmlfull --outputfile /tmp/packagexmlfull.xml\n</code></pre> <pre><code>$ sf hardis:org:generate:packagexmlfull --target-org nico@example.com\n</code></pre>"},{"location":"hardis/org/monitor/all/","title":"all","text":""},{"location":"hardis/org/monitor/all/#hardisorgmonitorall","title":"hardis:org:monitor:all","text":""},{"location":"hardis/org/monitor/all/#description","title":"Description","text":"<p>Monitor org, generate reports and sends notifications</p> <p>You can disable some commands defining either a monitoringDisable property in <code>.sfdx-hardis.yml</code>, or a comma separated list in env variable MONITORING_DISABLE</p> <p>Example in .sfdx-hardis.yml:</p> <pre><code>monitoringDisable:\n  - METADATA_STATUS\n  - MISSING_ATTRIBUTES\n  - UNUSED_METADATAS\n</code></pre> <p>Example in env var:</p> <pre><code>MONITORING_DISABLE=METADATA_STATUS,MISSING_ATTRIBUTES,UNUSED_METADATAS\n</code></pre> <p>A default list of monitoring commands is used, if you want to override it you can define property monitoringCommands in your .sfdx-hardis.yml file</p> <p>Example:</p> <pre><code>monitoringCommands:\n  - title: My Custom command\n    command: sf my:custom:command\n  - title: My Custom command 2\n    command: sf my:other:custom:command\n</code></pre> <p>You can force the daily run of all commands by defining env var <code>MONITORING_IGNORE_FREQUENCY=true</code></p> <p>The default list of commands is the following:</p> Key Description Command Frequency AUDIT_TRAIL Detect suspect setup actions in major org sf hardis:org:diagnose:audittrail daily LEGACY_API Detect calls to deprecated API versions sf hardis:org:diagnose:legacyapi daily ORG_LIMITS Detect if org limits are close to be reached sf hardis:org:monitor:limits daily LICENSES Extract licenses information sf hardis:org:diagnose:licenses weekly LINT_ACCESS Detect custom elements with no access rights defined in permission sets sf hardis:lint:access weekly UNUSED_LICENSES Detect permission set licenses that are assigned to users that do not need them sf hardis:org:diagnose:unusedlicenses weekly UNUSED_USERS Detect active users without recent logins sf hardis:org:diagnose:unusedusers weekly ACTIVE_USERS Detect active users with recent logins sf hardis:org:diagnose:unusedusers --returnactiveusers weekly ORG_INFO Get org info + SF instance info + next major upgrade date sf hardis:org:diagnose:instanceupgrade weekly RELEASE_UPDATES Gather warnings about incoming and overdue Release Updates sf hardis:org:diagnose:releaseupdates weekly UNUSED_METADATAS Detect custom labels and custom permissions that are not in use sf hardis:lint:unusedmetadatas weekly UNUSED_APEX_CLASSES Detect unused Apex classes in an org sf hardis:org:diagnose:unused-apex-classes weekly CONNECTED_APPS Detect unused Connected Apps in an org sf hardis:org:diagnose:unused-connected-apps weekly METADATA_STATUS Detect inactive metadata sf hardis:lint:metadatastatus weekly MISSING_ATTRIBUTES Detect missing description on custom field sf hardis:lint:missingattributes weekly"},{"location":"hardis/org/monitor/all/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/monitor/all/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:monitor:all\n</code></pre>"},{"location":"hardis/org/monitor/backup/","title":"backup","text":""},{"location":"hardis/org/monitor/backup/#hardisorgmonitorbackup","title":"hardis:org:monitor:backup","text":""},{"location":"hardis/org/monitor/backup/#description","title":"Description","text":"<p>Retrieve sfdx sources in the context of a monitoring backup</p> <p>The command exists in 2 modes: filtered(default &amp; recommended) and full.</p>"},{"location":"hardis/org/monitor/backup/#filtered-mode-default-better-performances","title":"Filtered mode (default, better performances)","text":"<p>Automatically skips metadatas from installed packages with namespace.  </p> <p>You can remove more metadata types from backup, especially in case you have too many metadatas and that provokes a crash, using:</p> <ul> <li> <p>Manual update of <code>manifest/package-skip-items.xml</code> config file (then commit &amp; push in the same branch)</p> <ul> <li>Works with full wildcard (<code>&lt;members&gt;*&lt;/members&gt;</code>) , named metadata (<code>&lt;members&gt;Account.Name&lt;/members&gt;</code>) or partial wildcards names (<code>&lt;members&gt;pi__*&lt;/members&gt;</code> , <code>&lt;members&gt;*__dlm&lt;/members&gt;</code> , or <code>&lt;members&gt;prefix*suffix&lt;/members&gt;</code>)</li> </ul> </li> </ul> <ul> <li>Environment variable MONITORING_BACKUP_SKIP_METADATA_TYPES (example: <code>MONITORING_BACKUP_SKIP_METADATA_TYPES=CustomLabel,StaticResource,Translation</code>): that will be applied to all monitoring branches.</li> </ul>"},{"location":"hardis/org/monitor/backup/#full-mode","title":"Full mode","text":"<p>Activate it with --full parameter, or variable MONITORING_BACKUP_MODE_FULL=true</p> <p>Ignores filters (namespaces items &amp; manifest/package-skip-items.xml) to retrieve ALL metadatas, including those you might not care about (reports, translations...)</p> <p>As we can retrieve only 10000 files by call, the list of all metadatas will be chunked to make multiple calls (and take more time than filtered mode)</p> <ul> <li>if you use <code>--full-apply-filters</code> , manifest/package-skip-items.xml and MONITORING_BACKUP_SKIP_METADATA_TYPES filters will be applied anyway</li> <li>if you use <code>--exclude-namespaces</code> , namespaced items will be ignored</li> </ul> <p>With those both options, it's like if you are not using --full, but with chunked metadata download</p>"},{"location":"hardis/org/monitor/backup/#in-cicd","title":"In CI/CD","text":"<p>This command is part of sfdx-hardis Monitoring and can output Grafana, Slack and MsTeams Notifications.</p>"},{"location":"hardis/org/monitor/backup/#troubleshooting","title":"Troubleshooting","text":"<p>If you have unknown errors (it happens !), you can investigate using the full command with smaller chunks.</p> <p>Example: <code>sf hardis:org:monitor:backup --full --exclude-namespaces --full-apply-filters --max-by-chunk 500</code></p> <p>It will allow you the identify the responsible metadata and ignore it using package-skip-items.xml or MONITORING_BACKUP_SKIP_METADATA_TYPES env variable.</p>"},{"location":"hardis/org/monitor/backup/#documentation","title":"Documentation","text":"<p>Doc generation (including visual flows) is triggered at the end of the command.</p> <p>If you want to also upload HTML Documentation on your Salesforce Org as static resource, use variable SFDX_HARDIS_DOC_DEPLOY_TO_ORG=\"true\"</p> <p>If you want to also upload HTML Documentation on Cloudflare, use variable SFDX_HARDIS_DOC_DEPLOY_TO_CLOUDFLARE=\"true\"</p> <p>If Flow history doc always display a single state, you probably need to update your workflow configuration:</p> <ul> <li>on Gitlab: Env variable <code>GIT_FETCH_EXTRA_FLAGS: --depth 10000</code></li> <li>on GitHub: <code>fetch-depth: 0</code></li> <li>on Azure: <code>fetchDepth: \"0\"</code></li> <li>on Bitbucket: <code>step: clone: depth: full</code></li> </ul>"},{"location":"hardis/org/monitor/backup/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) exclude-namespaces-e boolean If mode --full is activated, exclude namespaced metadatas flags-dir option undefined full boolean Dot not take in account filtering using package-skip-items.xml and MONITORING_BACKUP_SKIP_METADATA_TYPES. Efficient but much much slower ! full-apply-filters-z boolean If mode --full is activated, apply filters of manifest/package-skip-items.xml and MONITORING_BACKUP_SKIP_METADATA_TYPES anyway json boolean Format output as json. max-by-chunk-m option If mode --full is activated, maximum number of metadatas in a package.xml chunk 3000 outputfile-f option Force the path and name of output report file. Must end with .csv skip-doc boolean Skip the generation of project documentation at the end of the command skipauth boolean Skip authentication check when a default username is required start-chunk option Use this parameter to troubleshoot a specific chunk. It will be used as the first chunk to retrieve 1 target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/monitor/backup/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:monitor:backup\n</code></pre> <pre><code>$ sf hardis:org:monitor:backup --full\n</code></pre> <pre><code>$ sf hardis:org:monitor:backup --full --exclude-namespaces\n</code></pre> <pre><code>$ sf hardis:org:monitor:backup --full --exclude-namespaces --full-apply-filters\n</code></pre>"},{"location":"hardis/org/monitor/limits/","title":"limits","text":""},{"location":"hardis/org/monitor/limits/#hardisorgmonitorlimits","title":"hardis:org:monitor:limits","text":""},{"location":"hardis/org/monitor/limits/#description","title":"Description","text":"<p>Check limits of a SF org and send notifications about limits are superior to 50%, 75% or 100%.</p> <p>This command is part of sfdx-hardis Monitoring and can output Grafana, Slack and MsTeams Notifications.</p>"},{"location":"hardis/org/monitor/limits/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. outputfile-f option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/monitor/limits/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:monitor:limits\n</code></pre>"},{"location":"hardis/org/purge/apexlog/","title":"apexlog","text":""},{"location":"hardis/org/purge/apexlog/#hardisorgpurgeapexlog","title":"hardis:org:purge:apexlog","text":""},{"location":"hardis/org/purge/apexlog/#description","title":"Description","text":"<p>Purge apex logs in selected org</p>"},{"location":"hardis/org/purge/apexlog/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. prompt-z boolean Prompt for confirmation (true by default, use --no-prompt to skip) skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/purge/apexlog/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:purge:apexlog\n</code></pre> <pre><code>$ sf hardis:org:purge:apexlog --target-org nicolas.vuillamy@gmail.com\n</code></pre>"},{"location":"hardis/org/purge/flow/","title":"flow","text":""},{"location":"hardis/org/purge/flow/#hardisorgpurgeflow","title":"hardis:org:purge:flow","text":""},{"location":"hardis/org/purge/flow/#description","title":"Description","text":"<p>Purge Obsolete flow versions to avoid the 50 max versions limit. Filters on Status and Name</p>"},{"location":"hardis/org/purge/flow/#parameters","title":"Parameters","text":"Name Type Description Default Required Options allowpurgefailure-f boolean Allows purges to fail without exiting with 1. Use --no-allowpurgefailure to disable debug-d boolean Activate debug mode (more logs) delete-flow-interviews-w boolean If the presence of Flow interviews prevent to delete flows versions, delete them before retrying to delete flow versions flags-dir option undefined instanceurl-r option URL of org instance https://login.salesforce.com json boolean Format output as json. name-n option Filter according to Name criteria prompt-z boolean Prompt for confirmation (true by default, use --no-prompt to skip) skipauth boolean Skip authentication check when a default username is required status-s option Filter according to Status criteria target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/purge/flow/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:purge:flow\n</code></pre> <pre><code>$ sf hardis:org:purge:flow --target-org nicolas.vuillamy@gmail.com --no-prompt --delete-flow-interviews\n</code></pre> <pre><code>$ sf hardis:org:purge:flow --target-org nicolas.vuillamy@gmail.com --status \"Obsolete,Draft,InvalidDraft\" --name TestFlow\n</code></pre>"},{"location":"hardis/org/retrieve/packageconfig/","title":"packageconfig","text":""},{"location":"hardis/org/retrieve/packageconfig/#hardisorgretrievepackageconfig","title":"hardis:org:retrieve:packageconfig","text":""},{"location":"hardis/org/retrieve/packageconfig/#description","title":"Description","text":"<p>Retrieve package configuration from an org</p>"},{"location":"hardis/org/retrieve/packageconfig/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/retrieve/packageconfig/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:retrieve:packageconfig\n</code></pre> <pre><code>sf hardis:org:retrieve:packageconfig -u myOrg\n</code></pre>"},{"location":"hardis/org/retrieve/sources/analytics/","title":"analytics","text":""},{"location":"hardis/org/retrieve/sources/analytics/#hardisorgretrievesourcesanalytics","title":"hardis:org:retrieve:sources:analytics","text":""},{"location":"hardis/org/retrieve/sources/analytics/#description","title":"Description","text":"<p>Retrieve all CRM Analytics sources from an org, with workarounds for SFDX bugs</p>"},{"location":"hardis/org/retrieve/sources/analytics/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/retrieve/sources/analytics/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:retrieve:sources:analytics\n</code></pre>"},{"location":"hardis/org/retrieve/sources/dx/","title":"dx","text":""},{"location":"hardis/org/retrieve/sources/dx/#hardisorgretrievesourcesdx","title":"hardis:org:retrieve:sources:dx","text":""},{"location":"hardis/org/retrieve/sources/dx/#description","title":"Description","text":"<p>Retrieve Salesforce DX project from org</p>"},{"location":"hardis/org/retrieve/sources/dx/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) filteredmetadatas-m option Comma separated list of Metadatas keys to remove from PackageXml file flags-dir option undefined folder-f option Folder . instanceurl-r option URL of org instance json boolean Format output as json. keepmetadatatypes-k option Comma separated list of metadatas types that will be the only ones to be retrieved shape-s boolean Updates project-scratch-def.json from org shape skipauth boolean Skip authentication check when a default username is required target-org-o option undefined tempfolder-t option Temporary folder ./tmp websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/retrieve/sources/dx/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:retrieve:sources:dx\n</code></pre>"},{"location":"hardis/org/retrieve/sources/dx2/","title":"dx2","text":""},{"location":"hardis/org/retrieve/sources/dx2/#hardisorgretrievesourcesdx2","title":"hardis:org:retrieve:sources:dx2","text":""},{"location":"hardis/org/retrieve/sources/dx2/#description","title":"Description","text":"<p>Retrieve Salesforce DX project from org</p>"},{"location":"hardis/org/retrieve/sources/dx2/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. packagexml-x option Path to package.xml file skipauth boolean Skip authentication check when a default username is required target-org-o option undefined template-t option sfdx-hardis package.xml Template name. ex: wave websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/retrieve/sources/dx2/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:retrieve:sources:dx2\n</code></pre>"},{"location":"hardis/org/retrieve/sources/metadata/","title":"metadata","text":""},{"location":"hardis/org/retrieve/sources/metadata/#hardisorgretrievesourcesmetadata","title":"hardis:org:retrieve:sources:metadata","text":""},{"location":"hardis/org/retrieve/sources/metadata/#description","title":"Description","text":"<p>Retrieve Salesforce DX project from org</p>"},{"location":"hardis/org/retrieve/sources/metadata/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined folder-f option Folder . includemanaged boolean Include items from managed packages instanceurl-r option URL of org instance json boolean Format output as json. packagexml-p option Path to package.xml manifest file skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/retrieve/sources/metadata/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:retrieve:sources:metadata\n</code></pre> <pre><code>$ SFDX_RETRIEVE_WAIT_MINUTES=200 sf hardis:org:retrieve:sources:metadata\n</code></pre>"},{"location":"hardis/org/retrieve/sources/retrofit/","title":"retrofit","text":""},{"location":"hardis/org/retrieve/sources/retrofit/#hardisorgretrievesourcesretrofit","title":"hardis:org:retrieve:sources:retrofit","text":""},{"location":"hardis/org/retrieve/sources/retrofit/#description","title":"Description","text":"<p>Retrieve changes from org link to a ref branch not present in sources</p> <p>This command need to be triggered from a branch that is connected to a SF org. It will then retrieve all changes not present in that branch sources, commit them and create a merge request against the default branch. If a merge request already exists, it will simply add a new commit.</p> <p>Define the following properties in .sfdx-hardis.yml</p> <p>- productionBranch : Name of the git branch that is corresponding to production org   - retrofitBranch : Name of the git branch that will be used as merge request target</p> <p>List of metadata to retrieve can be set in three way, in order of priority :</p> <p>- <code>CI_SOURCES_TO_RETROFIT</code>: env variable (can be defined in CI context)   - <code>sourcesToRetrofit</code> property in <code>.sfdx-hardis.yml</code>   - Default list:</p> <pre><code>- CompactLayout\n- CustomApplication\n- CustomField\n- CustomLabel\n- CustomLabels\n- CustomMetadata\n- CustomObject\n- CustomObjectTranslation\n- CustomTab\n- DuplicateRule\n- EmailTemplate\n- FlexiPage\n- GlobalValueSet\n- Layout\n- ListView\n- MatchingRules\n- PermissionSet\n- RecordType\n- StandardValueSet\n- Translations\n- ValidationRule\n</code></pre> <p>You can also ignore some files even if they have been updated in production. To do that, define property retrofitIgnoredFiles in .sfdx-hardis.yml</p> <p>Example of full retrofit configuration:</p> <pre><code>productionBranch: master\nretrofitBranch: preprod\nretrofitIgnoredFiles:\n- force-app/main/default/applications/MyApp.app-meta.xml\n- force-app/main/default/applications/MyOtherApp.app-meta.xml\n- force-app/main/default/flexipages/MyFlexipageContainingDashboards.flexipage-meta.xml\n</code></pre>"},{"location":"hardis/org/retrieve/sources/retrofit/#parameters","title":"Parameters","text":"Name Type Description Default Required Options commit boolean If true, a commit will be performed after the retrofit commitmode option Defines if we commit all retrieved updates, or all updates including creations updated updatedall debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. productionbranch option Name of the git branch corresponding to the org we want to perform the retrofit on. Can be defined in productionBranch property in .sfdx-hardis.yml push boolean If true, a push will be performed after the retrofit pushmode option Defines if we send merge request options to git push arguments default defaultmergerequest retrofittargetbranch option Name of branch the merge request will have as target Can be defined in retrofitBranch property in .sfdx-hardis.yml skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/retrieve/sources/retrofit/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:retrieve:sources:retrofit\n</code></pre> <pre><code>sf hardis:org:retrieve:sources:retrofit --productionbranch master --commit --commitmode updated\n</code></pre> <pre><code>sf hardis:org:retrieve:sources:retrofit --productionbranch master  --retrofitbranch preprod --commit --commitmode updated --push --pushmode mergerequest\n</code></pre>"},{"location":"hardis/org/test/apex/","title":"apex","text":""},{"location":"hardis/org/test/apex/#hardisorgtestapex","title":"hardis:org:test:apex","text":""},{"location":"hardis/org/test/apex/#description","title":"Description","text":"<p>Run apex tests in Salesforce org</p> <p>If following configuration is defined, it will fail if apex coverage target is not reached:</p> <ul> <li>Env <code>APEX_TESTS_MIN_COVERAGE_ORG_WIDE</code> or <code>.sfdx-hardis</code> property <code>apexTestsMinCoverageOrgWide</code></li> <li>Env <code>APEX_TESTS_MIN_COVERAGE_ORG_WIDE</code> or <code>.sfdx-hardis</code> property <code>apexTestsMinCoverageOrgWide</code></li> </ul> <p>You can override env var SFDX_TEST_WAIT_MINUTES to wait more than 60 minutes.</p> <p>This command is part of sfdx-hardis Monitoring and can output Grafana, Slack and MsTeams Notifications.</p>"},{"location":"hardis/org/test/apex/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-org-o option undefined testlevel-l option Level of tests to apply to validate deployment RunLocalTests NoTestRunRunSpecifiedTestsRunLocalTestsRunAllTestsInOrg websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/test/apex/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:test:apex\n</code></pre>"},{"location":"hardis/org/user/activateinvalid/","title":"activateinvalid","text":""},{"location":"hardis/org/user/activateinvalid/#hardisorguseractivateinvalid","title":"hardis:org:user:activateinvalid","text":""},{"location":"hardis/org/user/activateinvalid/#description","title":"Description","text":"<p>Update sandbox users so their email is valid</p> <p>Example: replaces <code>toto@company.com.dev.invalid</code> with <code>toto@company.com.dev.invalid</code></p> <p>See article below</p> <p></p>"},{"location":"hardis/org/user/activateinvalid/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. profiles-p option Comma-separated list of profiles names that you want to reactive users assigned to and with a .invalid email skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/user/activateinvalid/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:user:activateinvalid\n</code></pre> <pre><code>$ sf hardis:org:user:activateinvalid --target-org my-user@myorg.com\n</code></pre> <pre><code>$ sf hardis:org:user:activateinvalid --profiles 'System Administrator,MyCustomProfile' --target-org my-user@myorg.com\n</code></pre>"},{"location":"hardis/org/user/freeze/","title":"freeze","text":""},{"location":"hardis/org/user/freeze/#hardisorguserfreeze","title":"hardis:org:user:freeze","text":""},{"location":"hardis/org/user/freeze/#description","title":"Description","text":"<p>Mass freeze users in org before a maintenance or go live</p> <p>See user guide in the following article</p> <p>https://medium.com/@dimitrimonge/freeze-unfreeze-users-during-salesforce-deployment-8a1488bf8dd3</p> <p></p>"},{"location":"hardis/org/user/freeze/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) excludeprofiles-e option List of profiles that you want to NOT freeze, separated by commas flags-dir option undefined includeprofiles-p option List of profiles that you want to freeze, separated by commas json boolean Format output as json. maxuserdisplay-m option Maximum users to display in logs 100 name-n option Filter according to Name criteria skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/user/freeze/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:user:freeze\n</code></pre> <pre><code>$ sf hardis:org:user:freeze --target-org my-user@myorg.com\n</code></pre> <pre><code>$ sf hardis:org:user:freeze --includeprofiles 'Standard'\n</code></pre> <pre><code>$ sf hardis:org:user:freeze --excludeprofiles 'System Administrator,Some Other Profile'\n</code></pre>"},{"location":"hardis/org/user/unfreeze/","title":"unfreeze","text":""},{"location":"hardis/org/user/unfreeze/#hardisorguserunfreeze","title":"hardis:org:user:unfreeze","text":""},{"location":"hardis/org/user/unfreeze/#description","title":"Description","text":"<p>Mass unfreeze users in org after a maintenance or go live</p> <p>See user guide in the following article</p> <p>https://medium.com/@dimitrimonge/freeze-unfreeze-users-during-salesforce-deployment-8a1488bf8dd3</p> <p></p>"},{"location":"hardis/org/user/unfreeze/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) excludeprofiles-e option List of profiles that you want to NOT unfreeze, separated by commas flags-dir option undefined includeprofiles-p option List of profiles that you want to unfreeze, separated by commas json boolean Format output as json. maxuserdisplay-m option Maximum users to display in logs 100 name-n option Filter according to Name criteria skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/org/user/unfreeze/#examples","title":"Examples","text":"<pre><code>$ sf hardis:org:user:unfreeze\n</code></pre> <pre><code>$ sf hardis:org:user:unfreeze --target-org my-user@myorg.com\n</code></pre> <pre><code>$ sf hardis:org:user:unfreeze --includeprofiles 'Standard'\n</code></pre> <pre><code>$ sf hardis:org:user:unfreeze --excludeprofiles 'System Administrator,Some Other Profile'\n</code></pre>"},{"location":"hardis/package/create/","title":"create","text":""},{"location":"hardis/package/create/#hardiscreate","title":"hardiscreate","text":""},{"location":"hardis/package/create/#description","title":"Description","text":"<p>Create a new package</p>"},{"location":"hardis/package/create/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-dev-hub-v option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/package/create/#examples","title":"Examples","text":"<pre><code>$ sf hardis:package:create\n</code></pre>"},{"location":"hardis/package/install/","title":"install","text":""},{"location":"hardis/package/install/#hardisinstall","title":"hardisinstall","text":""},{"location":"hardis/package/install/#description","title":"Description","text":"<p>Install a package in an org using its id (starting with 04t)</p> <p>Assisted menu to propose to update <code>installedPackages</code> property in <code>.sfdx-hardis.yml</code></p>"},{"location":"hardis/package/install/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined installationkey-k option installation key for key-protected package (default: null) json boolean Format output as json. package-p option Package Version Id to install (04t...) skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/package/install/#examples","title":"Examples","text":"<pre><code>$ sf hardis:package:install\n</code></pre>"},{"location":"hardis/package/mergexml/","title":"mergexml","text":""},{"location":"hardis/package/mergexml/#hardismergexml","title":"hardismergexml","text":""},{"location":"hardis/package/mergexml/#description","title":"Description","text":"<p>Select and merge package.xml files</p>"},{"location":"hardis/package/mergexml/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug boolean debug flags-dir option undefined folder-f option Root folder manifest json boolean Format output as json. packagexmls-p option Comma separated list of package.xml files to merge. Will be prompted to user if not provided pattern-x option Name criteria to list package.xml files //package.xml result-r option Result package.xml file name skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/package/mergexml/#examples","title":"Examples","text":"<pre><code>$ sf hardis:package:mergexml\n</code></pre> <pre><code>$ sf hardis:package:mergexml --folder packages --pattern /**/*.xml --result myMergedPackage.xml\n</code></pre> <pre><code>$ sf hardis:package:mergexml --packagexmls \"config/mypackage1.xml,config/mypackage2.xml,config/mypackage3.xml\" --result myMergedPackage.xml\n</code></pre>"},{"location":"hardis/package/version/create/","title":"create","text":""},{"location":"hardis/package/version/create/#hardisversioncreate","title":"hardisversion:create","text":""},{"location":"hardis/package/version/create/#description","title":"Description","text":"<p>Create a new version of an unlocked package</p>"},{"location":"hardis/package/version/create/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) deleteafter boolean Delete package version after creating it flags-dir option undefined install-i boolean Install package version on default org after generation installkey-k option Package installation key json boolean Format output as json. package-p option Package identifier that you want to use to generate a new package version skipauth boolean Skip authentication check when a default username is required target-dev-hub-v option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/package/version/create/#examples","title":"Examples","text":"<pre><code>$ sf hardis:package:version:create\n</code></pre>"},{"location":"hardis/package/version/list/","title":"list","text":""},{"location":"hardis/package/version/list/#hardisversionlist","title":"hardisversion:list","text":""},{"location":"hardis/package/version/list/#description","title":"Description","text":"<p>List versions of unlocked package</p>"},{"location":"hardis/package/version/list/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-dev-hub-v option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/package/version/list/#examples","title":"Examples","text":"<pre><code>$ sf hardis:package:version:list\n</code></pre>"},{"location":"hardis/package/version/promote/","title":"promote","text":""},{"location":"hardis/package/version/promote/#hardisversionpromote","title":"hardisversion:promote","text":""},{"location":"hardis/package/version/promote/#description","title":"Description","text":"<p>Promote package(s) version(s): convert it from beta to released</p>"},{"location":"hardis/package/version/promote/#parameters","title":"Parameters","text":"Name Type Description Default Required Options auto-f boolean Auto-detect which versions of which packages need to be promoted debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-dev-hub-v option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/package/version/promote/#examples","title":"Examples","text":"<pre><code>$ sf hardis:package:version:promote\n</code></pre> <pre><code>$ sf hardis:package:version:promote --auto\n</code></pre>"},{"location":"hardis/packagexml/append/","title":"append","text":""},{"location":"hardis/packagexml/append/#hardispackagexmlappend","title":"hardis:packagexml:append","text":""},{"location":"hardis/packagexml/append/#description","title":"Description","text":"<p>Append one or multiple package.xml files into a single one</p>"},{"location":"hardis/packagexml/append/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug boolean debug flags-dir option undefined json boolean Format output as json. outputfile-f option package.xml output file packagexmls-p option package.xml files path (separated by commas) websocket option websocket"},{"location":"hardis/packagexml/append/#examples","title":"Examples","text":"<pre><code>$ sf hardis packagexml append -p package1.xml,package2.xml -o package3.xml\n</code></pre>"},{"location":"hardis/packagexml/remove/","title":"remove","text":""},{"location":"hardis/packagexml/remove/#hardispackagexmlremove","title":"hardis:packagexml:remove","text":""},{"location":"hardis/packagexml/remove/#description","title":"Description","text":"<p>Removes the content of a package.xml file matching another package.xml file</p>"},{"location":"hardis/packagexml/remove/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug boolean debug flags-dir option undefined json boolean Format output as json. outputfile-f option package.xml output file packagexml-p option package.xml file to reduce removedonly-z boolean Use this flag to generate a package.xml with only removed items removepackagexml-r option package.xml file to use to filter input package.xml websocket option websocket"},{"location":"hardis/packagexml/remove/#examples","title":"Examples","text":"<pre><code>$ sf hardis packagexml:remove -p package.xml -r destructiveChanges.xml -o my-reduced-package.xml\n</code></pre>"},{"location":"hardis/project/create/","title":"create","text":""},{"location":"hardis/project/create/#hardisprojectcreate","title":"hardis:project:create","text":""},{"location":"hardis/project/create/#description","title":"Description","text":"<p>Create a new SFDX Project</p>"},{"location":"hardis/project/create/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/create/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:create\n</code></pre>"},{"location":"hardis/project/lint/","title":"lint","text":""},{"location":"hardis/project/lint/#hardisprojectlint","title":"hardis:project:lint","text":""},{"location":"hardis/project/lint/#description","title":"Description","text":"<p>Apply syntactic analysis (linters) on the repository sources, using Mega-Linter</p>"},{"location":"hardis/project/lint/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) fix-f boolean Apply linters fixes flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/lint/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:lint\n</code></pre> <pre><code>$ sf hardis:project:lint --fix\n</code></pre>"},{"location":"hardis/project/audit/apiversion/","title":"apiversion","text":""},{"location":"hardis/project/audit/apiversion/#hardisprojectauditapiversion","title":"hardis:project:audit:apiversion","text":""},{"location":"hardis/project/audit/apiversion/#description","title":"Description","text":"<p>This command detects metadatas whose apiVersion is lower than parameter --minimumapiversion</p> <p>It can also fix the apiVersions with the latest one, if parameter --fix is sent</p> <p>Example to handle ApexClass / Trigger &amp; ApexPage mandatory version upgrade :</p> <p><code>sf hardis:project:audit:apiversion --metadatatype ApexClass,ApexTrigger,ApexPage --minimumapiversion 45.0 --fix</code></p>"},{"location":"hardis/project/audit/apiversion/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) failiferror-f boolean Fails (exit code 1) if an error is found fix boolean Fix ApiVersion on specified Metadata Types. flags-dir option undefined json boolean Format output as json. metadatatype option Metadata Types to fix. Comma separated. Supported Metadata types: ApexClass, ApexTrigger, ApexPage minimumapiversion-m option Minimum allowed API version 20 skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/audit/apiversion/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:audit:apiversion\n</code></pre> <pre><code>$ sf hardis:project:audit:apiversion --metadatatype ApexClass,ApexTrigger,ApexPage --minimumapiversion 45\n</code></pre> <pre><code>$ sf hardis:project:audit:apiversion --metadatatype ApexClass,ApexTrigger,ApexPage --minimumapiversion 45 --fix\n</code></pre>"},{"location":"hardis/project/audit/callincallout/","title":"callincallout","text":""},{"location":"hardis/project/audit/callincallout/#hardisprojectauditcallincallout","title":"hardis:project:audit:callincallout","text":""},{"location":"hardis/project/audit/callincallout/#description","title":"Description","text":"<p>Generate list of callIn and callouts from sfdx project</p>"},{"location":"hardis/project/audit/callincallout/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/audit/callincallout/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:audit:callouts\n</code></pre>"},{"location":"hardis/project/audit/duplicatefiles/","title":"duplicatefiles","text":""},{"location":"hardis/project/audit/duplicatefiles/#hardisprojectauditduplicatefiles","title":"hardis:project:audit:duplicatefiles","text":""},{"location":"hardis/project/audit/duplicatefiles/#description","title":"Description","text":"<p>Find duplicate files in sfdx folder (often from past @salesforce/cli bugs)</p>"},{"location":"hardis/project/audit/duplicatefiles/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. path-p option Root path to check /home/runner/work/sfdx-hardis/sfdx-hardis skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/audit/duplicatefiles/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:audit:duplicatefiles\n</code></pre>"},{"location":"hardis/project/audit/remotesites/","title":"remotesites","text":""},{"location":"hardis/project/audit/remotesites/#hardisprojectauditremotesites","title":"hardis:project:audit:remotesites","text":""},{"location":"hardis/project/audit/remotesites/#description","title":"Description","text":"<p>Generate list of remote sites</p>"},{"location":"hardis/project/audit/remotesites/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/audit/remotesites/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:audit:remotesites\n</code></pre>"},{"location":"hardis/project/clean/emptyitems/","title":"emptyitems","text":""},{"location":"hardis/project/clean/emptyitems/#hardisprojectcleanemptyitems","title":"hardis:project:clean:emptyitems","text":""},{"location":"hardis/project/clean/emptyitems/#description","title":"Description","text":"<p>Remove unwanted empty items within sfdx project sources</p>"},{"location":"hardis/project/clean/emptyitems/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined folder-f option Root folder force-app json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/clean/emptyitems/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:clean:emptyitems\n</code></pre>"},{"location":"hardis/project/clean/filter-xml-content/","title":"filter-xml-content","text":""},{"location":"hardis/project/clean/filter-xml-content/#hardisprojectcleanfilter-xml-content","title":"hardis:project:clean:filter-xml-content","text":""},{"location":"hardis/project/clean/filter-xml-content/#description","title":"Description","text":"<p>Filter content of metadatas (XML) in order to be able to deploy only part of them on an org (See Example configuration)</p> <p>When you perform deployments from one org to another, the features activated in the target org may not fit the content of the sfdx/metadata files extracted from the source org.</p> <p>You may need to filter some elements in the XML files, for example in the Profiles</p> <p>This script requires a filter-config.json file</p>"},{"location":"hardis/project/clean/filter-xml-content/#parameters","title":"Parameters","text":"Name Type Description Default Required Options configfile-c option Config JSON file path debug boolean debug flags-dir option undefined inputfolder-i option Input folder (default: \".\" ) json boolean Format output as json. outputfolder-f option Output folder (default: parentFolder + _xml_content_filtered) websocket option websocket"},{"location":"hardis/project/clean/filter-xml-content/#examples","title":"Examples","text":"<pre><code>sf hardis:project:clean:filter-xml-content -i \"./mdapi_output\"\n</code></pre> <pre><code>sf hardis:project:clean:filter-xml-content -i \"retrieveUnpackaged\"\n</code></pre>"},{"location":"hardis/project/clean/flowpositions/","title":"flowpositions","text":""},{"location":"hardis/project/clean/flowpositions/#hardisprojectcleanflowpositions","title":"hardis:project:clean:flowpositions","text":""},{"location":"hardis/project/clean/flowpositions/#description","title":"Description","text":"<p>Replace all positions in Auto-Layout Flows by 0 to simplify conflicts management</p> <p>As Flows are defined as Auto-Layout, the edition in Setup UI is not impacted.</p> <p>Before:</p> <pre><code>&lt;locationX&gt;380&lt;/locationX&gt;\n&lt;locationY&gt;259&lt;/locationY&gt;\n</code></pre> <p>After:</p> <pre><code>&lt;locationX&gt;0&lt;/locationX&gt;\n&lt;locationY&gt;0&lt;/locationY&gt;\n</code></pre> <p>Can be automated at each hardis:work:save if flowPositions is added in .sfdx-hardis.yml autoCleanTypes property  </p> <p>Example in config/.sfdx-hardis.yml:</p> <pre><code>autoCleanTypes:\n  - destructivechanges\n  - flowPositions\n</code></pre>"},{"location":"hardis/project/clean/flowpositions/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined folder-f option Root folder force-app json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/clean/flowpositions/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:clean:flowpositions\n</code></pre>"},{"location":"hardis/project/clean/hiddenitems/","title":"hiddenitems","text":""},{"location":"hardis/project/clean/hiddenitems/#hardisprojectcleanhiddenitems","title":"hardis:project:clean:hiddenitems","text":""},{"location":"hardis/project/clean/hiddenitems/#description","title":"Description","text":"<p>Remove unwanted hidden items within sfdx project sources</p>"},{"location":"hardis/project/clean/hiddenitems/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined folder-f option Root folder force-app json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/clean/hiddenitems/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:clean:hiddenitems\n</code></pre>"},{"location":"hardis/project/clean/listviews/","title":"listviews","text":""},{"location":"hardis/project/clean/listviews/#hardisprojectcleanlistviews","title":"hardis:project:clean:listviews","text":""},{"location":"hardis/project/clean/listviews/#description","title":"Description","text":"<p>Replace Mine by Everything in ListView, and log the replacements in sfdx-hardis.yml</p>"},{"location":"hardis/project/clean/listviews/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined folder-f option Root folder force-app json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/clean/listviews/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:clean:listviews\n</code></pre>"},{"location":"hardis/project/clean/manageditems/","title":"manageditems","text":""},{"location":"hardis/project/clean/manageditems/#hardisprojectcleanmanageditems","title":"hardis:project:clean:manageditems","text":""},{"location":"hardis/project/clean/manageditems/#description","title":"Description","text":"<p>Remove unwanted managed items within sfdx project sources</p>"},{"location":"hardis/project/clean/manageditems/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined folder-f option Root folder force-app json boolean Format output as json. namespace-n option Namespace to remove skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/clean/manageditems/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:clean:manageditems --namespace crta\n</code></pre>"},{"location":"hardis/project/clean/minimizeprofiles/","title":"minimizeprofiles","text":""},{"location":"hardis/project/clean/minimizeprofiles/#hardisprojectcleanminimizeprofiles","title":"hardis:project:clean:minimizeprofiles","text":""},{"location":"hardis/project/clean/minimizeprofiles/#description","title":"Description","text":"<p>Remove all profile attributes that exist on Permission Sets</p> <p>It is a bad practice to define on Profiles elements that can be defined on Permission Sets.</p> <p>Salesforce will deprecate such capability in Spring 26.</p> <p>Don't wait for that, and use minimizeProfiles cleaning to automatically remove from Profiles any permission that exists on a Permission Set !</p> <p>The following XML tags are removed automatically:</p> <ul> <li>classAccesses</li> <li>customMetadataTypeAccesses</li> <li>externalDataSourceAccesses</li> <li>fieldPermissions</li> <li>objectPermissions</li> <li>pageAccesses</li> <li>userPermissions (except on Admin Profile)</li> </ul> <p>You can override this list by defining a property minimizeProfilesNodesToRemove in your .sfdx-hardis.yml config file.</p> <p>You can also skip profiles using property skipMinimizeProfiles</p> <p>Example: </p> <pre><code>skipMinimizeProfiles\n  - MyClient Customer Community Login User\n  - MyClientPortail Profile\n</code></pre>"},{"location":"hardis/project/clean/minimizeprofiles/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined folder-f option Root folder force-app json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/clean/minimizeprofiles/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:clean:minimizeprofiles\n</code></pre>"},{"location":"hardis/project/clean/orgmissingitems/","title":"orgmissingitems","text":""},{"location":"hardis/project/clean/orgmissingitems/#hardisprojectcleanorgmissingitems","title":"hardis:project:clean:orgmissingitems","text":""},{"location":"hardis/project/clean/orgmissingitems/#description","title":"Description","text":"<p>Clean SFDX sources from items present neither in target org nor local package.xml</p>"},{"location":"hardis/project/clean/orgmissingitems/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined folder-f option Root folder force-app json boolean Format output as json. packagexmlfull-p option Path to packagexml used for cleaning. Must contain also standard CustomObject and CustomField elements. If not provided, it will be generated from a remote org packagexmltargetorg-t option Target org username or alias to build package.xml (SF CLI must be authenticated). If not provided, will be prompted to the user. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/clean/orgmissingitems/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:clean:orgmissingitems\n</code></pre>"},{"location":"hardis/project/clean/references/","title":"references","text":""},{"location":"hardis/project/clean/references/#hardisprojectcleanreferences","title":"hardis:project:clean:references","text":""},{"location":"hardis/project/clean/references/#description","title":"Description","text":"<p>Remove unwanted references within sfdx project sources</p>"},{"location":"hardis/project/clean/references/#parameters","title":"Parameters","text":"Name Type Description Default Required Options config-c option Path to a JSON config file or a destructiveChanges.xml file debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required type-t option Cleaning type allcaseentitlementdashboardsdatadotcomdestructivechangeslocalfieldsproductrequestentitlementflowPositionssensitiveMetadatasminimizeProfiles websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/clean/references/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:clean:references\n</code></pre> <pre><code>$ sf hardis:project:clean:references --type all\n</code></pre> <pre><code>$ sf hardis:project:clean:references --config ./cleaning/myconfig.json\n</code></pre> <pre><code>$ sf hardis:project:clean:references --config ./somefolder/myDestructivePackage.xml\n</code></pre>"},{"location":"hardis/project/clean/retrievefolders/","title":"retrievefolders","text":""},{"location":"hardis/project/clean/retrievefolders/#hardisprojectcleanretrievefolders","title":"hardis:project:clean:retrievefolders","text":""},{"location":"hardis/project/clean/retrievefolders/#description","title":"Description","text":"<p>Retrieve dashboards, documents and report folders in DX sources. Use -u ORGALIAS</p>"},{"location":"hardis/project/clean/retrievefolders/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/clean/retrievefolders/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:clean:retrievefolders\n</code></pre>"},{"location":"hardis/project/clean/sensitive-metadatas/","title":"sensitive-metadatas","text":""},{"location":"hardis/project/clean/sensitive-metadatas/#hardisprojectcleansensitive-metadatas","title":"hardis:project:clean:sensitive-metadatas","text":""},{"location":"hardis/project/clean/sensitive-metadatas/#description","title":"Description","text":"<p>Sensitive data like credentials and certificates are not supposed to be stored in Git, to avoid security breaches.</p> <p>This command detects the related metadata and replaces their sensitive content by \"HIDDEN_BY_SFDX_HARDIS\"</p> <p>Can be automated at each hardis:work:save if sensitiveMetadatas is added in .sfdx-hardis.yml autoCleanTypes property  </p> <p>Example in config/.sfdx-hardis.yml:</p> <pre><code>autoCleanTypes:\n  - destructivechanges\n  - sensitiveMetadatas\n</code></pre>"},{"location":"hardis/project/clean/sensitive-metadatas/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined folder-f option Root folder force-app json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/clean/sensitive-metadatas/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:clean:sensitive-metadatas\n</code></pre>"},{"location":"hardis/project/clean/standarditems/","title":"standarditems","text":""},{"location":"hardis/project/clean/standarditems/#hardisprojectcleanstandarditems","title":"hardis:project:clean:standarditems","text":""},{"location":"hardis/project/clean/standarditems/#description","title":"Description","text":"<p>Remove unwanted standard items within sfdx project sources</p>"},{"location":"hardis/project/clean/standarditems/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/clean/standarditems/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:clean:standarditems\n</code></pre>"},{"location":"hardis/project/clean/systemdebug/","title":"systemdebug","text":""},{"location":"hardis/project/clean/systemdebug/#hardisprojectcleansystemdebug","title":"hardis:project:clean:systemdebug","text":""},{"location":"hardis/project/clean/systemdebug/#description","title":"Description","text":"<p>Clean System.debug() lines in APEX Code (classes and triggers)</p>"},{"location":"hardis/project/clean/systemdebug/#parameters","title":"Parameters","text":"Name Type Description Default Required Options delete-d boolean Delete lines with System.debug flags-dir option undefined folder-f option Root folder force-app json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/clean/systemdebug/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:clean:systemdebug\n</code></pre>"},{"location":"hardis/project/clean/xml/","title":"xml","text":""},{"location":"hardis/project/clean/xml/#hardisprojectcleanxml","title":"hardis:project:clean:xml","text":""},{"location":"hardis/project/clean/xml/#description","title":"Description","text":"<p>Remove XML elements using Glob patterns and XPath expressions</p> <p>This can be very useful to avoid to always remove manually the same elements in the same XML file.</p> <ul> <li>globpattern can be any glob pattern allowing to identify the XML files to update, for example <code>/**/*.flexipage-meta.xml</code></li> </ul> <ul> <li>xpath can be any xpath following the format <code>//ns:PARENT-TAG-NAME//ns:TAG-NAME[contains(text(),'TAG-VALUE')]</code>. If an element is found, the whole PARENT-TAG-NAME (with its subtree) will be removed.</li> </ul> <p></p> <p>Note: If globpattern and xpath are not sent, elements defined in property cleanXmlPatterns in .sfdx-hardis.yml config file will be used</p>"},{"location":"hardis/project/clean/xml/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined folder-f option Root folder force-app globpattern-p option Glob pattern to find files to clean. Ex: /*/.flexipage-meta.xml json boolean Format output as json. namespace-n option XML Namespace to use http://soap.sforce.com/2006/04/metadata skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration xpath-x option XPath to use to detect the elements to remove. Ex: //ns:flexiPageRegions//ns:name[contains(text(),'dashboardName')]"},{"location":"hardis/project/clean/xml/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:clean:xml\n</code></pre> <pre><code>$ sf hardis:project:clean:xml --globpattern \"/**/*.flexipage-meta.xml\" --xpath \"//ns:flexiPageRegions//ns:name[contains(text(),'dashboardName')]\"\n</code></pre>"},{"location":"hardis/project/configure/auth/","title":"auth","text":""},{"location":"hardis/project/configure/auth/#hardisprojectconfigureauth","title":"hardis:project:configure:auth","text":""},{"location":"hardis/project/configure/auth/#description","title":"Description","text":"<p>Configure authentication from git branch to target org</p>"},{"location":"hardis/project/configure/auth/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) devhub-b boolean Configure project DevHub flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-dev-hub-v option undefined target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/configure/auth/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:configure:auth\n</code></pre>"},{"location":"hardis/project/convert/profilestopermsets/","title":"profilestopermsets","text":""},{"location":"hardis/project/convert/profilestopermsets/#hardisprojectconvertprofilestopermsets","title":"hardis:project:convert:profilestopermsets","text":""},{"location":"hardis/project/convert/profilestopermsets/#description","title":"Description","text":"<p>Creates permission sets from existing profiles, with id PS_PROFILENAME</p>"},{"location":"hardis/project/convert/profilestopermsets/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) except-e option List of filters flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/convert/profilestopermsets/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:convert:profilestopermsets\n</code></pre>"},{"location":"hardis/project/deploy/notify/","title":"notify","text":""},{"location":"hardis/project/deploy/notify/#hardisprojectdeploynotify","title":"hardis:project:deploy:notify","text":""},{"location":"hardis/project/deploy/notify/#description","title":"Description","text":"<p>Post notifications related to:</p> <ul> <li>Deployment simulation (use with --check-only)</li> </ul> <ul> <li>Deployment process (to call only if your deployment is successful)</li> </ul>"},{"location":"hardis/project/deploy/notify/#integrations","title":"Integrations","text":"<p>According to the integrations you configured, notifications can contain deployment information and Flow Visual Git Diff</p> <p>- GitHub, Gitlab, Azure DevOps, Bitbucket comments on Pull Requests (including Flows Visual Git Diff)</p> <p>- Slack, Microsoft Teams, Email deployment summary after a successful deployment</p> <p>- JIRA tags and comments on tickets that just has been deployed</p> <p></p> <p></p>"},{"location":"hardis/project/deploy/notify/#flows-visual-git-diff","title":"Flows Visual Git Diff","text":"<ul> <li>Visually show you the differences on a diagram</li> </ul> <ul> <li>Display the update details without having to open any XML !</li> </ul> <p>\ud83d\udfe9 = added</p> <p>\ud83d\udfe5 = removed</p> <p>\ud83d\udfe7 = updated</p> <p></p> <p></p>"},{"location":"hardis/project/deploy/notify/#in-custom-cicd-workflow","title":"In custom CI/CD workflow","text":"<p>Example of usage in a custom CI/CD pipeline:</p> <pre><code># Disable exit-on-error temporarily\nset +e\n\n# Run the deploy command\nsf project deploy start [....]\nRET_CODE=$?\n\n# Re-enable exit-on-error\nset -e\n\n# Determine MYSTATUS based on return code\nif [ $RET_CODE -eq 0 ]; then\n    MYSTATUS=\"valid\"\nelse\n    MYSTATUS=\"invalid\"\nfi\n\n# Run the notify command with MYSTATUS\nsf hardis:project:deploy:notify --check-only --deploy-status \"$MYSTATUS\"\n</code></pre>"},{"location":"hardis/project/deploy/notify/#other-usages","title":"Other usages","text":"<p>This command is for custom SF Cli pipelines, if you are a sfdx-hardis user, it is already embedded in sf hardis:deploy:smart.</p> <p>You can also use sfdx-hardis wrapper commands of SF deployment commands</p>"},{"location":"hardis/project/deploy/notify/#parameters","title":"Parameters","text":"Name Type Description Default Required Options check-only-c boolean Use this option to send notifications from a Deployment simulation job debug-d boolean Activate debug mode (more logs) deploy-status-s option Send success, failure or unknown (default) to indicate if the deployment or deployment simulation is in success or not unknown validinvalidunknown flags-dir option undefined json boolean Format output as json. message-m option Custom message that you want to be added in notifications (string or markdown format) skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/deploy/notify/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:deploy:notify --check-only --deploy-status valid --message \"This deployment check is valid\\n\\nYahooo !!\"\n</code></pre> <pre><code>$ sf hardis:project:deploy:notify --check-only --deploy-status invalid --message \"This deployment check has failed !\\n\\Oh no !!\"\n</code></pre> <pre><code>$ sf hardis:project:deploy:notify --deploy-status valid --message \"This deployment has been processed !\\n\\nYahooo !!\"\n</code></pre>"},{"location":"hardis/project/deploy/quick/","title":"quick","text":""},{"location":"hardis/project/deploy/quick/#hardisprojectdeployquick","title":"hardis:project:deploy:quick","text":""},{"location":"hardis/project/deploy/quick/#description","title":"Description","text":"<p>sfdx-hardis wrapper for sf project deploy quick that displays tips to solve deployment errors.</p> <p>Note: Use --json argument to have better results</p> <p></p> <p>See documentation of Salesforce command</p>"},{"location":"hardis/project/deploy/quick/#deployment-pre-or-post-commands","title":"Deployment pre or post commands","text":"<p>You can define command lines to run before or after a deployment, with parameters:</p> <ul> <li>id: Unique Id for the command</li> <li>label: Human readable label for the command</li> <li>skipIfError: If defined to \"true\", the post-command won't be run if there is a deployment failure</li> <li>context: Defines the context where the command will be run. Can be all (default), check-deployment-only or process-deployment-only</li> <li>runOnlyOnceByOrg: If set to true, the command will be run only one time per org. A record of SfdxHardisTrace__c is stored to make that possible (it needs to be existing in target org)</li> </ul> <p>If the commands are not the same depending on the target org, you can define them into config/branches/.sfdx-hardis-BRANCHNAME.yml instead of root config/.sfdx-hardis.yml</p> <p>Example:</p> <pre><code>commandsPreDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to the deployment user\n    command: sf data update record --sobject User --where \"Username='deploy.github@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n\ncommandsPostDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to desired username\n    command: sf data update record --sobject User --where \"Username='admin-yser@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n  - id: someActionToRunJustOneTime\n    label: And to run only if deployment is success\n    command: sf sfdmu:run ...\n    skipIfError: true\n    context: process-deployment-only\n    runOnlyOnceByOrg: true\n</code></pre>"},{"location":"hardis/project/deploy/quick/#parameters","title":"Parameters","text":"Name Type Description Default Required Options --job-id-i option job-id --use-most-recent-r boolean use-most-recent api-version-a option api-version async boolean async debug boolean debug flags-dir option undefined json boolean Format output as json. target-org-o option undefined tests option tests wait-w option wait 33"},{"location":"hardis/project/deploy/quick/#examples","title":"Examples","text":""},{"location":"hardis/project/deploy/simulate/","title":"simulate","text":""},{"location":"hardis/project/deploy/simulate/#hardisprojectdeploysimulate","title":"hardis:project:deploy:simulate","text":""},{"location":"hardis/project/deploy/simulate/#description","title":"Description","text":"<p>Simulate the deployment of a metadata in an org prompted to the user</p> <p>For example, helps to solve the issue in a Permission Set without having to run a CI/CD job.</p> <p>Used by VsCode Extension</p>"},{"location":"hardis/project/deploy/simulate/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required source-dir-f option Source file or directory to simulate the deployment target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/deploy/simulate/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:deploy:simulate --source-dir force-app/defaut/main/permissionset/PS_Admin.permissionset-meta.xml\n</code></pre>"},{"location":"hardis/project/deploy/smart/","title":"smart","text":""},{"location":"hardis/project/deploy/smart/#hardisprojectdeploysmart","title":"hardis:project:deploy:smart","text":""},{"location":"hardis/project/deploy/smart/#description","title":"Description","text":"<p>Smart deploy of SFDX sources to target org, with many useful options.</p> <p>In case of errors, tips to fix them will be included within the error messages.</p>"},{"location":"hardis/project/deploy/smart/#quick-deploy","title":"Quick Deploy","text":"<p>In case Pull Request comments are configured on the project, Quick Deploy will try to be used (equivalent to button Quick Deploy)</p> <p>If you do not want to use QuickDeploy, define variable <code>SFDX_HARDIS_QUICK_DEPLOY=false</code></p> <ul> <li>GitHub Pull Requests comments config</li> <li>Gitlab Merge requests notes config</li> <li>Azure Pull Requests comments config</li> </ul>"},{"location":"hardis/project/deploy/smart/#delta-deployments","title":"Delta deployments","text":"<p>To activate delta deployments, define property <code>useDeltaDeployment: true</code> in <code>config/.sfdx-hardis.yml</code>.</p> <p>This will activate delta deployments only between minor and major branches (major to major remains full deployment mode)</p> <p>If you want to force the delta deployment into major orgs (ex: preprod to prod), this is not recommended but you can use env variable ALWAYS_ENABLE_DELTA_DEPLOYMENT=true</p>"},{"location":"hardis/project/deploy/smart/#smart-deployments-tests","title":"Smart Deployments Tests","text":"<p>Not all metadata updates can break test classes, use Smart Deployment Tests to skip running test classes if ALL the following conditions are met:</p> <ul> <li>Delta deployment is activated and applicable to the source and target branches</li> <li>Delta deployed metadatas are all matching the list of NOT_IMPACTING_METADATA_TYPES (see below)</li> <li>Target org is not a production org</li> </ul> <p>Activate Smart Deployment tests with:</p> <ul> <li>env variable <code>USE_SMART_DEPLOYMENT_TESTS=true</code></li> <li>.sfdx-hardis.yml config property <code>useSmartDeploymentTests: true</code></li> </ul> <p>Defaut list for NOT_IMPACTING_METADATA_TYPES (can be overridden with comma-separated list on env var NOT_IMPACTING_METADATA_TYPES)</p> <ul> <li>Audience</li> <li>AuraDefinitionBundle</li> <li>Bot</li> <li>BotVersion</li> <li>ContentAsset</li> <li>CustomObjectTranslation</li> <li>CustomSite</li> <li>CustomTab</li> <li>Dashboard</li> <li>ExperienceBundle</li> <li>Flexipage</li> <li>GlobalValueSetTranslation</li> <li>Layout</li> <li>LightningComponentBundle</li> <li>NavigationMenu</li> <li>ReportType</li> <li>Report</li> <li>SiteDotCom</li> <li>StandardValueSetTranslation</li> <li>StaticResource</li> <li>Translations</li> </ul> <p>Note: if you want to disable Smart test classes for a PR, add nosmart in the text of the latest commit.</p>"},{"location":"hardis/project/deploy/smart/#dynamic-deployment-items-overwrite-management","title":"Dynamic deployment items / Overwrite management","text":"<p>If necessary,you can define the following files (that supports wildcards *):</p> <ul> <li><code>manifest/package-no-overwrite.xml</code>: Every element defined in this file will be deployed only if it is not existing yet in the target org (can be useful with ListView for example, if the client wants to update them directly in production org).<ul> <li>Can be overridden for a branch using .sfdx-hardis.yml property packageNoOverwritePath or environment variable PACKAGE_NO_OVERWRITE_PATH (for example, define: <code>packageNoOverwritePath: manifest/package-no-overwrite-main.xml</code> in config file <code>config/.sfdx-hardis.main.yml</code>)</li> </ul> </li> <li><code>manifest/packageXmlOnChange.xml</code>: Every element defined in this file will not be deployed if it already has a similar definition in target org (can be useful for SharingRules for example)</li> </ul> <p>See Overwrite management documentation</p>"},{"location":"hardis/project/deploy/smart/#deployment-plan","title":"Deployment plan","text":"<p>If you need to deploy in multiple steps, you can define a property <code>deploymentPlan</code> in <code>.sfdx-hardis.yml</code>.</p> <ul> <li>If a file <code>manifest/package.xml</code> is found, it will be placed with order 0 in the deployment plan</li> </ul> <ul> <li>If a file <code>manifest/destructiveChanges.xml</code> is found, it will be executed as --postdestructivechanges</li> </ul> <ul> <li>If env var <code>SFDX_HARDIS_DEPLOY_IGNORE_SPLIT_PACKAGES</code> is defined as <code>false</code> , split of package.xml will be applied</li> </ul> <p>Example:</p> <pre><code>deploymentPlan:\n  packages:\n    - label: Deploy Flow-Workflow\n      packageXmlFile: manifest/splits/packageXmlFlowWorkflow.xml\n      order: 6\n    - label: Deploy SharingRules - Case\n      packageXmlFile: manifest/splits/packageXmlSharingRulesCase.xml\n      order: 30\n      waitAfter: 30\n</code></pre>"},{"location":"hardis/project/deploy/smart/#packages-installation","title":"Packages installation","text":"<p>You can define a list of package to install during deployments using property <code>installedPackages</code></p> <ul> <li>If <code>INSTALL_PACKAGES_DURING_CHECK_DEPLOY</code> is defined as <code>true</code> (or <code>installPackagesDuringCheckDeploy: true</code> in <code>.sfdx-hardis.yml</code>), packages will be installed even if the command is called with <code>--check</code> mode</li> <li>You can automatically update this property by listing all packages installed on an org using command <code>sf hardis:org:retrieve:packageconfig</code></li> </ul> <p>Example:</p> <pre><code>installedPackages:\n  - Id: 0A35r0000009EtECAU\n    SubscriberPackageId: 033i0000000LVMYAA4\n    SubscriberPackageName: Marketing Cloud\n    SubscriberPackageNamespace: et4ae5\n    SubscriberPackageVersionId: 04t6S000000l11iQAA\n    SubscriberPackageVersionName: Marketing Cloud\n    SubscriberPackageVersionNumber: 236.0.0.2\n    installOnScratchOrgs: true                  // true or false depending you want to install this package when creating a new scratch org\n    installDuringDeployments: true              // set as true to install package during a deployment using sf hardis:project:deploy:smart\n    installationkey: xxxxxxxxxxxxxxxxxxxx       // if the package has a password, write it in this property\n    - Id: 0A35r0000009F9CCAU\n    SubscriberPackageId: 033b0000000Pf2AAAS\n    SubscriberPackageName: Declarative Lookup Rollup Summaries Tool\n    SubscriberPackageNamespace: dlrs\n    SubscriberPackageVersionId: 04t5p000001BmLvAAK\n    SubscriberPackageVersionName: Release\n    SubscriberPackageVersionNumber: 2.15.0.9\n    installOnScratchOrgs: true\n    installDuringDeployments: true\n</code></pre>"},{"location":"hardis/project/deploy/smart/#deployment-pre-or-post-commands","title":"Deployment pre or post commands","text":"<p>You can define command lines to run before or after a deployment, with parameters:</p> <ul> <li>id: Unique Id for the command</li> <li>label: Human readable label for the command</li> <li>skipIfError: If defined to \"true\", the post-command won't be run if there is a deployment failure</li> <li>context: Defines the context where the command will be run. Can be all (default), check-deployment-only or process-deployment-only</li> <li>runOnlyOnceByOrg: If set to true, the command will be run only one time per org. A record of SfdxHardisTrace__c is stored to make that possible (it needs to be existing in target org)</li> </ul> <p>If the commands are not the same depending on the target org, you can define them into config/branches/.sfdx-hardis-BRANCHNAME.yml instead of root config/.sfdx-hardis.yml</p> <p>Example:</p> <pre><code>commandsPreDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to the deployment user\n    command: sf data update record --sobject User --where \"Username='deploy.github@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n\ncommandsPostDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to desired username\n    command: sf data update record --sobject User --where \"Username='admin-yser@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n  - id: someActionToRunJustOneTime\n    label: And to run only if deployment is success\n    command: sf sfdmu:run ...\n    skipIfError: true\n    context: process-deployment-only\n    runOnlyOnceByOrg: true\n</code></pre>"},{"location":"hardis/project/deploy/smart/#automated-fixes-post-deployments","title":"Automated fixes post deployments","text":""},{"location":"hardis/project/deploy/smart/#list-view-with-scope-mine","title":"List view with scope Mine","text":"<p>If you defined a property listViewsToSetToMine in your .sfdx-hardis.yml, related ListViews will be set to Mine ( see command https://sfdx-hardis.cloudity.com/hardis/org/fix/listviewmine/ )</p> <p>Example:</p> <pre><code>listViewsToSetToMine:\n  - \"Operation__c:MyCurrentOperations\"\n  - \"Operation__c:MyFinalizedOperations\"\n  - \"Opportunity:Default_Opportunity_Pipeline\"\n  - \"Opportunity:MyCurrentSubscriptions\"\n  - \"Opportunity:MySubscriptions\"\n  - \"Account:MyActivePartners\"\n</code></pre> <p>Troubleshooting: if you need to fix ListViews with mine from an alpine-linux based docker image, use this workaround in your dockerfile:</p> <pre><code># Do not use puppeteer embedded chromium\nRUN apk add --update --no-cache chromium\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=\"true\"\nENV CHROMIUM_PATH=\"/usr/bin/chromium-browser\"\nENV PUPPETEER_EXECUTABLE_PATH=\"$\\{CHROMIUM_PATH}\" // remove \\ before {\n</code></pre> <p>If you need to increase the deployment waiting time (sf project deploy start --wait arg), you can define env variable SFDX_DEPLOY_WAIT_MINUTES (default: 120)</p> <p>If you need notifications to be sent using the current Pull Request and not the one just merged (see use case), define env variable SFDX_HARDIS_DEPLOY_BEFORE_MERGE=true</p> <p>If you want to disable the calculation and display of Flow Visual Git Diff in Pull Request comments, define variable SFDX_DISABLE_FLOW_DIFF=true</p>"},{"location":"hardis/project/deploy/smart/#parameters","title":"Parameters","text":"Name Type Description Default Required Options check-c boolean Only checks the deployment, there is no impact on target org debug-d boolean Activate debug mode (more logs) delta boolean Applies sfdx-git-delta to package.xml before other deployment processes flags-dir option undefined json boolean Format output as json. packagexml-p option Path to package.xml containing what you want to deploy in target org runtests-r option If testlevel=RunSpecifiedTests, please provide a list of classes. If testlevel=RunRepositoryTests, can contain a regular expression to keep only class names matching it. If not set, will run all test classes found in the repo. skipauth boolean Skip authentication check when a default username is required target-org-o option undefined testlevel-l option Level of tests to validate deployment. RunRepositoryTests auto-detect and run all repository test classes NoTestRunRunSpecifiedTestsRunRepositoryTestsRunRepositoryTestsExceptSeeAllDataRunLocalTestsRunAllTestsInOrg websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/deploy/smart/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:deploy:smart\n</code></pre> <pre><code>$ sf hardis:project:deploy:smart --check\n</code></pre> <pre><code>$ sf hardis:project:deploy:smart --check --testlevel RunRepositoryTests\n</code></pre> <pre><code>$ sf hardis:project:deploy:smart --check --testlevel RunRepositoryTests --runtests '^(?!FLI|MyPrefix).*'\n</code></pre> <pre><code>$ sf hardis:project:deploy:smart --check --testlevel RunRepositoryTestsExceptSeeAllData\n</code></pre> <pre><code>$ sf hardis:project:deploy:smart\n</code></pre> <pre><code>$ FORCE_TARGET_BRANCH=preprod NODE_OPTIONS=--inspect-brk sf hardis:project:deploy:smart --check --websocket localhost:2702 --skipauth --target-org nicolas.vuillamy@myclient.com.preprod\n</code></pre> <pre><code>$ SYSTEM_ACCESSTOKEN=xxxxxx SYSTEM_COLLECTIONURI=https://dev.azure.com/xxxxxxx/ SYSTEM_TEAMPROJECT=\"xxxxxxx\" BUILD_REPOSITORY_ID=xxxxx SYSTEM_PULLREQUEST_PULLREQUESTID=1418 FORCE_TARGET_BRANCH=uat NODE_OPTIONS=--inspect-brk sf hardis:project:deploy:smart --check --websocket localhost:2702 --skipauth --target-org my.salesforce@org.com\n</code></pre> <pre><code>$ CI_SFDX_HARDIS_BITBUCKET_TOKEN=xxxxxx BITBUCKET_WORKSPACE=sfdxhardis-demo BITBUCKET_REPO_SLUG=test BITBUCKET_BUILD_NUMBER=1 BITBUCKET_BRANCH=uat BITBUCKET_PR_ID=2 FORCE_TARGET_BRANCH=uat NODE_OPTIONS=--inspect-brk sf hardis:project:deploy:smart --check --websocket localhost:2702 --skipauth --target-org my-salesforce-org@client.com\n</code></pre> <pre><code>$ GITHUB_TOKEN=xxxx GITHUB_REPOSITORY=my-user/my-repo FORCE_TARGET_BRANCH=uat NODE_OPTIONS=--inspect-brk sf hardis:project:deploy:smart --check --websocket localhost:2702 --skipauth --target-org my-salesforce-org@client.com\n</code></pre>"},{"location":"hardis/project/deploy/start/","title":"start","text":""},{"location":"hardis/project/deploy/start/#hardisprojectdeploystart","title":"hardis:project:deploy:start","text":""},{"location":"hardis/project/deploy/start/#description","title":"Description","text":"<p>sfdx-hardis wrapper for sf project deploy start that displays tips to solve deployment errors.</p> <p>Note: Use --json argument to have better results</p> <p></p> <p>See documentation of Salesforce command</p>"},{"location":"hardis/project/deploy/start/#deployment-pre-or-post-commands","title":"Deployment pre or post commands","text":"<p>You can define command lines to run before or after a deployment, with parameters:</p> <ul> <li>id: Unique Id for the command</li> <li>label: Human readable label for the command</li> <li>skipIfError: If defined to \"true\", the post-command won't be run if there is a deployment failure</li> <li>context: Defines the context where the command will be run. Can be all (default), check-deployment-only or process-deployment-only</li> <li>runOnlyOnceByOrg: If set to true, the command will be run only one time per org. A record of SfdxHardisTrace__c is stored to make that possible (it needs to be existing in target org)</li> </ul> <p>If the commands are not the same depending on the target org, you can define them into config/branches/.sfdx-hardis-BRANCHNAME.yml instead of root config/.sfdx-hardis.yml</p> <p>Example:</p> <pre><code>commandsPreDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to the deployment user\n    command: sf data update record --sobject User --where \"Username='deploy.github@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n\ncommandsPostDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to desired username\n    command: sf data update record --sobject User --where \"Username='admin-yser@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n  - id: someActionToRunJustOneTime\n    label: And to run only if deployment is success\n    command: sf sfdmu:run ...\n    skipIfError: true\n    context: process-deployment-only\n    runOnlyOnceByOrg: true\n</code></pre>"},{"location":"hardis/project/deploy/start/#parameters","title":"Parameters","text":"Name Type Description Default Required Options api-version-a option api-version async boolean async coverage-formatters option coverage-formatters debug boolean debug dry-run boolean dry-run flags-dir option undefined ignore-conflicts-c boolean ignore-conflicts ignore-errors-r boolean ignore-errors ignore-warnings-g boolean ignore-warnings json boolean Format output as json. junit boolean junit manifest-x option manifest metadata-m option metadata metadata-dir option metadata-dir post-destructive-changes option post-destructive-changes pre-destructive-changes option pre-destructive-changes purge-on-delete boolean purge-on-delete results-dir option results-dir single-package boolean single-package source-dir-d option source-dir target-org-o option undefined test-level option test-level tests option tests wait-w option wait 33"},{"location":"hardis/project/deploy/start/#examples","title":"Examples","text":""},{"location":"hardis/project/deploy/validate/","title":"validate","text":""},{"location":"hardis/project/deploy/validate/#hardisprojectdeployvalidate","title":"hardis:project:deploy:validate","text":""},{"location":"hardis/project/deploy/validate/#description","title":"Description","text":"<p>sfdx-hardis wrapper for sf project deploy validate that displays tips to solve deployment errors.</p> <p>Note: Use --json argument to have better results</p> <p></p> <p>See documentation of Salesforce command</p>"},{"location":"hardis/project/deploy/validate/#deployment-pre-or-post-commands","title":"Deployment pre or post commands","text":"<p>You can define command lines to run before or after a deployment, with parameters:</p> <ul> <li>id: Unique Id for the command</li> <li>label: Human readable label for the command</li> <li>skipIfError: If defined to \"true\", the post-command won't be run if there is a deployment failure</li> <li>context: Defines the context where the command will be run. Can be all (default), check-deployment-only or process-deployment-only</li> <li>runOnlyOnceByOrg: If set to true, the command will be run only one time per org. A record of SfdxHardisTrace__c is stored to make that possible (it needs to be existing in target org)</li> </ul> <p>If the commands are not the same depending on the target org, you can define them into config/branches/.sfdx-hardis-BRANCHNAME.yml instead of root config/.sfdx-hardis.yml</p> <p>Example:</p> <pre><code>commandsPreDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to the deployment user\n    command: sf data update record --sobject User --where \"Username='deploy.github@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n\ncommandsPostDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to desired username\n    command: sf data update record --sobject User --where \"Username='admin-yser@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n  - id: someActionToRunJustOneTime\n    label: And to run only if deployment is success\n    command: sf sfdmu:run ...\n    skipIfError: true\n    context: process-deployment-only\n    runOnlyOnceByOrg: true\n</code></pre>"},{"location":"hardis/project/deploy/validate/#parameters","title":"Parameters","text":"Name Type Description Default Required Options api-version-a option api-version async boolean async coverage-formatters option coverage-formatters debug boolean debug dry-run boolean dry-run flags-dir option undefined ignore-conflicts-c boolean ignore-conflicts ignore-errors-r boolean ignore-errors ignore-warnings-g boolean ignore-warnings json boolean Format output as json. junit boolean junit manifest-x option manifest metadata-m option metadata metadata-dir option metadata-dir post-destructive-changes option post-destructive-changes pre-destructive-changes option pre-destructive-changes purge-on-delete boolean purge-on-delete results-dir option results-dir single-package boolean single-package source-dir-d option source-dir target-org-o option undefined test-level option test-level tests option tests wait-w option wait 33"},{"location":"hardis/project/deploy/validate/#examples","title":"Examples","text":""},{"location":"hardis/project/deploy/sources/dx/","title":"dx","text":""},{"location":"hardis/project/deploy/sources/dx/#hardisprojectdeploysourcesdx","title":"hardis:project:deploy:sources:dx","text":""},{"location":"hardis/project/deploy/sources/dx/#description","title":"Description","text":"<p>Smart deploy of SFDX sources to target org, with many useful options.</p> <p>In case of errors, tips to fix them will be included within the error messages.</p>"},{"location":"hardis/project/deploy/sources/dx/#quick-deploy","title":"Quick Deploy","text":"<p>In case Pull Request comments are configured on the project, Quick Deploy will try to be used (equivalent to button Quick Deploy)</p> <p>If you do not want to use QuickDeploy, define variable <code>SFDX_HARDIS_QUICK_DEPLOY=false</code></p> <ul> <li>GitHub Pull Requests comments config</li> <li>Gitlab Merge requests notes config</li> <li>Azure Pull Requests comments config</li> </ul>"},{"location":"hardis/project/deploy/sources/dx/#delta-deployments","title":"Delta deployments","text":"<p>To activate delta deployments, define property <code>useDeltaDeployment: true</code> in <code>config/.sfdx-hardis.yml</code>.</p> <p>This will activate delta deployments only between minor and major branches (major to major remains full deployment mode)</p> <p>If you want to force the delta deployment into major orgs (ex: preprod to prod), this is not recommended but you can use env variable ALWAYS_ENABLE_DELTA_DEPLOYMENT=true</p>"},{"location":"hardis/project/deploy/sources/dx/#smart-deployments-tests","title":"Smart Deployments Tests","text":"<p>Not all metadata updates can break test classes, use Smart Deployment Tests to skip running test classes if ALL the following conditions are met:</p> <ul> <li>Delta deployment is activated and applicable to the source and target branches</li> <li>Delta deployed metadatas are all matching the list of NOT_IMPACTING_METADATA_TYPES (see below)</li> <li>Target org is not a production org</li> </ul> <p>Activate Smart Deployment tests with:</p> <ul> <li>env variable <code>USE_SMART_DEPLOYMENT_TESTS=true</code></li> <li>.sfdx-hardis.yml config property <code>useSmartDeploymentTests: true</code></li> </ul> <p>Defaut list for NOT_IMPACTING_METADATA_TYPES (can be overridden with comma-separated list on env var NOT_IMPACTING_METADATA_TYPES)</p> <ul> <li>Audience</li> <li>AuraDefinitionBundle</li> <li>Bot</li> <li>BotVersion</li> <li>ContentAsset</li> <li>CustomObjectTranslation</li> <li>CustomSite</li> <li>CustomTab</li> <li>Dashboard</li> <li>ExperienceBundle</li> <li>Flexipage</li> <li>GlobalValueSetTranslation</li> <li>Layout</li> <li>LightningComponentBundle</li> <li>NavigationMenu</li> <li>ReportType</li> <li>Report</li> <li>SiteDotCom</li> <li>StandardValueSetTranslation</li> <li>StaticResource</li> <li>Translations</li> </ul> <p>Note: if you want to disable Smart test classes for a PR, add nosmart in the text of the latest commit.</p>"},{"location":"hardis/project/deploy/sources/dx/#dynamic-deployment-items-overwrite-management","title":"Dynamic deployment items / Overwrite management","text":"<p>If necessary,you can define the following files (that supports wildcards *):</p> <ul> <li><code>manifest/package-no-overwrite.xml</code>: Every element defined in this file will be deployed only if it is not existing yet in the target org (can be useful with ListView for example, if the client wants to update them directly in production org).<ul> <li>Can be overridden for a branch using .sfdx-hardis.yml property packageNoOverwritePath or environment variable PACKAGE_NO_OVERWRITE_PATH (for example, define: <code>packageNoOverwritePath: manifest/package-no-overwrite-main.xml</code> in config file <code>config/.sfdx-hardis.main.yml</code>)</li> </ul> </li> <li><code>manifest/packageXmlOnChange.xml</code>: Every element defined in this file will not be deployed if it already has a similar definition in target org (can be useful for SharingRules for example)</li> </ul> <p>See Overwrite management documentation</p>"},{"location":"hardis/project/deploy/sources/dx/#deployment-plan","title":"Deployment plan","text":"<p>If you need to deploy in multiple steps, you can define a property <code>deploymentPlan</code> in <code>.sfdx-hardis.yml</code>.</p> <ul> <li>If a file <code>manifest/package.xml</code> is found, it will be placed with order 0 in the deployment plan</li> </ul> <ul> <li>If a file <code>manifest/destructiveChanges.xml</code> is found, it will be executed as --postdestructivechanges</li> </ul> <ul> <li>If env var <code>SFDX_HARDIS_DEPLOY_IGNORE_SPLIT_PACKAGES</code> is defined as <code>false</code> , split of package.xml will be applied</li> </ul> <p>Example:</p> <pre><code>deploymentPlan:\n  packages:\n    - label: Deploy Flow-Workflow\n      packageXmlFile: manifest/splits/packageXmlFlowWorkflow.xml\n      order: 6\n    - label: Deploy SharingRules - Case\n      packageXmlFile: manifest/splits/packageXmlSharingRulesCase.xml\n      order: 30\n      waitAfter: 30\n</code></pre>"},{"location":"hardis/project/deploy/sources/dx/#packages-installation","title":"Packages installation","text":"<p>You can define a list of package to install during deployments using property <code>installedPackages</code></p> <ul> <li>If <code>INSTALL_PACKAGES_DURING_CHECK_DEPLOY</code> is defined as <code>true</code> (or <code>installPackagesDuringCheckDeploy: true</code> in <code>.sfdx-hardis.yml</code>), packages will be installed even if the command is called with <code>--check</code> mode</li> <li>You can automatically update this property by listing all packages installed on an org using command <code>sf hardis:org:retrieve:packageconfig</code></li> </ul> <p>Example:</p> <pre><code>installedPackages:\n  - Id: 0A35r0000009EtECAU\n    SubscriberPackageId: 033i0000000LVMYAA4\n    SubscriberPackageName: Marketing Cloud\n    SubscriberPackageNamespace: et4ae5\n    SubscriberPackageVersionId: 04t6S000000l11iQAA\n    SubscriberPackageVersionName: Marketing Cloud\n    SubscriberPackageVersionNumber: 236.0.0.2\n    installOnScratchOrgs: true                  // true or false depending you want to install this package when creating a new scratch org\n    installDuringDeployments: true              // set as true to install package during a deployment using sf hardis:project:deploy:smart\n    installationkey: xxxxxxxxxxxxxxxxxxxx       // if the package has a password, write it in this property\n    - Id: 0A35r0000009F9CCAU\n    SubscriberPackageId: 033b0000000Pf2AAAS\n    SubscriberPackageName: Declarative Lookup Rollup Summaries Tool\n    SubscriberPackageNamespace: dlrs\n    SubscriberPackageVersionId: 04t5p000001BmLvAAK\n    SubscriberPackageVersionName: Release\n    SubscriberPackageVersionNumber: 2.15.0.9\n    installOnScratchOrgs: true\n    installDuringDeployments: true\n</code></pre>"},{"location":"hardis/project/deploy/sources/dx/#deployment-pre-or-post-commands","title":"Deployment pre or post commands","text":"<p>You can define command lines to run before or after a deployment, with parameters:</p> <ul> <li>id: Unique Id for the command</li> <li>label: Human readable label for the command</li> <li>skipIfError: If defined to \"true\", the post-command won't be run if there is a deployment failure</li> <li>context: Defines the context where the command will be run. Can be all (default), check-deployment-only or process-deployment-only</li> <li>runOnlyOnceByOrg: If set to true, the command will be run only one time per org. A record of SfdxHardisTrace__c is stored to make that possible (it needs to be existing in target org)</li> </ul> <p>If the commands are not the same depending on the target org, you can define them into config/branches/.sfdx-hardis-BRANCHNAME.yml instead of root config/.sfdx-hardis.yml</p> <p>Example:</p> <pre><code>commandsPreDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to the deployment user\n    command: sf data update record --sobject User --where \"Username='deploy.github@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n\ncommandsPostDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to desired username\n    command: sf data update record --sobject User --where \"Username='admin-yser@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n  - id: someActionToRunJustOneTime\n    label: And to run only if deployment is success\n    command: sf sfdmu:run ...\n    skipIfError: true\n    context: process-deployment-only\n    runOnlyOnceByOrg: true\n</code></pre>"},{"location":"hardis/project/deploy/sources/dx/#automated-fixes-post-deployments","title":"Automated fixes post deployments","text":""},{"location":"hardis/project/deploy/sources/dx/#list-view-with-scope-mine","title":"List view with scope Mine","text":"<p>If you defined a property listViewsToSetToMine in your .sfdx-hardis.yml, related ListViews will be set to Mine ( see command https://sfdx-hardis.cloudity.com/hardis/org/fix/listviewmine/ )</p> <p>Example:</p> <pre><code>listViewsToSetToMine:\n  - \"Operation__c:MyCurrentOperations\"\n  - \"Operation__c:MyFinalizedOperations\"\n  - \"Opportunity:Default_Opportunity_Pipeline\"\n  - \"Opportunity:MyCurrentSubscriptions\"\n  - \"Opportunity:MySubscriptions\"\n  - \"Account:MyActivePartners\"\n</code></pre> <p>Troubleshooting: if you need to fix ListViews with mine from an alpine-linux based docker image, use this workaround in your dockerfile:</p> <pre><code># Do not use puppeteer embedded chromium\nRUN apk add --update --no-cache chromium\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=\"true\"\nENV CHROMIUM_PATH=\"/usr/bin/chromium-browser\"\nENV PUPPETEER_EXECUTABLE_PATH=\"$\\{CHROMIUM_PATH}\" // remove \\ before {\n</code></pre> <p>If you need to increase the deployment waiting time (sf project deploy start --wait arg), you can define env variable SFDX_DEPLOY_WAIT_MINUTES (default: 120)</p> <p>If you need notifications to be sent using the current Pull Request and not the one just merged (see use case), define env variable SFDX_HARDIS_DEPLOY_BEFORE_MERGE=true</p> <p>If you want to disable the calculation and display of Flow Visual Git Diff in Pull Request comments, define variable SFDX_DISABLE_FLOW_DIFF=true</p>"},{"location":"hardis/project/deploy/sources/dx/#parameters","title":"Parameters","text":"Name Type Description Default Required Options check-c boolean Only checks the deployment, there is no impact on target org debug-d boolean Activate debug mode (more logs) delta boolean Applies sfdx-git-delta to package.xml before other deployment processes flags-dir option undefined json boolean Format output as json. packagexml-p option Path to package.xml containing what you want to deploy in target org runtests-r option If testlevel=RunSpecifiedTests, please provide a list of classes. If testlevel=RunRepositoryTests, can contain a regular expression to keep only class names matching it. If not set, will run all test classes found in the repo. skipauth boolean Skip authentication check when a default username is required target-org-o option undefined testlevel-l option Level of tests to validate deployment. RunRepositoryTests auto-detect and run all repository test classes NoTestRunRunSpecifiedTestsRunRepositoryTestsRunRepositoryTestsExceptSeeAllDataRunLocalTestsRunAllTestsInOrg websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/deploy/sources/dx/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:deploy:smart\n</code></pre> <pre><code>$ sf hardis:project:deploy:smart --check\n</code></pre> <pre><code>$ sf hardis:project:deploy:smart --check --testlevel RunRepositoryTests\n</code></pre> <pre><code>$ sf hardis:project:deploy:smart --check --testlevel RunRepositoryTests --runtests '^(?!FLI|MyPrefix).*'\n</code></pre> <pre><code>$ sf hardis:project:deploy:smart --check --testlevel RunRepositoryTestsExceptSeeAllData\n</code></pre> <pre><code>$ sf hardis:project:deploy:smart\n</code></pre> <pre><code>$ FORCE_TARGET_BRANCH=preprod NODE_OPTIONS=--inspect-brk sf hardis:project:deploy:smart --check --websocket localhost:2702 --skipauth --target-org nicolas.vuillamy@myclient.com.preprod\n</code></pre> <pre><code>$ SYSTEM_ACCESSTOKEN=xxxxxx SYSTEM_COLLECTIONURI=https://dev.azure.com/xxxxxxx/ SYSTEM_TEAMPROJECT=\"xxxxxxx\" BUILD_REPOSITORY_ID=xxxxx SYSTEM_PULLREQUEST_PULLREQUESTID=1418 FORCE_TARGET_BRANCH=uat NODE_OPTIONS=--inspect-brk sf hardis:project:deploy:smart --check --websocket localhost:2702 --skipauth --target-org my.salesforce@org.com\n</code></pre> <pre><code>$ CI_SFDX_HARDIS_BITBUCKET_TOKEN=xxxxxx BITBUCKET_WORKSPACE=sfdxhardis-demo BITBUCKET_REPO_SLUG=test BITBUCKET_BUILD_NUMBER=1 BITBUCKET_BRANCH=uat BITBUCKET_PR_ID=2 FORCE_TARGET_BRANCH=uat NODE_OPTIONS=--inspect-brk sf hardis:project:deploy:smart --check --websocket localhost:2702 --skipauth --target-org my-salesforce-org@client.com\n</code></pre> <pre><code>$ GITHUB_TOKEN=xxxx GITHUB_REPOSITORY=my-user/my-repo FORCE_TARGET_BRANCH=uat NODE_OPTIONS=--inspect-brk sf hardis:project:deploy:smart --check --websocket localhost:2702 --skipauth --target-org my-salesforce-org@client.com\n</code></pre>"},{"location":"hardis/project/deploy/sources/metadata/","title":"metadata","text":""},{"location":"hardis/project/deploy/sources/metadata/#hardisprojectdeploysourcesmetadata","title":"hardis:project:deploy:sources:metadata","text":""},{"location":"hardis/project/deploy/sources/metadata/#description","title":"Description","text":"<p>Deploy metadatas to source org</p>"},{"location":"hardis/project/deploy/sources/metadata/#parameters","title":"Parameters","text":"Name Type Description Default Required Options check-c boolean Only checks the deployment, there is no impact on target org debug-d boolean Activate debug mode (more logs) deploydir-x option Deploy directory . destructivepackagexml-k option Path to destructiveChanges.xml file to deploy filter-f boolean Filter metadatas before deploying flags-dir option undefined json boolean Format output as json. packagexml-p option Path to package.xml file to deploy skipauth boolean Skip authentication check when a default username is required target-org-o option undefined testlevel-l option Level of tests to apply to validate deployment RunLocalTests NoTestRunRunSpecifiedTestsRunLocalTestsRunAllTestsInOrg websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/deploy/sources/metadata/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:deploy:sources:metadata\n</code></pre>"},{"location":"hardis/project/fix/profiletabs/","title":"profiletabs","text":""},{"location":"hardis/project/fix/profiletabs/#hardisprojectfixprofiletabs","title":"hardis:project:fix:profiletabs","text":""},{"location":"hardis/project/fix/profiletabs/#description","title":"Description","text":"<p>Interactive prompts to add tab visibilities that are not retrieved by project retrieve start</p>"},{"location":"hardis/project/fix/profiletabs/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. path-p option Root folder /home/runner/work/sfdx-hardis/sfdx-hardis skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/fix/profiletabs/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:fix:profiletabs\n</code></pre>"},{"location":"hardis/project/fix/v53flexipages/","title":"v53flexipages","text":""},{"location":"hardis/project/fix/v53flexipages/#hardisprojectfixv53flexipages","title":"hardis:project:fix:v53flexipages","text":""},{"location":"hardis/project/fix/v53flexipages/#description","title":"Description","text":"<p>Fix flexipages for apiVersion v53 (Winter22).</p> <p>Note: Update api version to 53.0 in package.xml and sfdx-project.json</p>"},{"location":"hardis/project/fix/v53flexipages/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. path-p option Root folder /home/runner/work/sfdx-hardis/sfdx-hardis skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/fix/v53flexipages/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:fix:v53flexipages\n</code></pre>"},{"location":"hardis/project/generate/bypass/","title":"bypass","text":""},{"location":"hardis/project/generate/bypass/#hardisprojectgeneratebypass","title":"hardis:project:generate:bypass","text":""},{"location":"hardis/project/generate/bypass/#description","title":"Description","text":"<pre><code>Generates bypass custom permissions and permission sets for specified sObjects and automations (Flows, Triggers, and Validation Rules). If no parameters are provided, it prompts for user selection.\n</code></pre>"},{"location":"hardis/project/generate/bypass/#parameters","title":"Parameters","text":"Name Type Description Default Required Options automations-a option Comma-separated list of automations to bypass. Allowed values: Flow, Trigger, VR flags-dir option undefined global-g boolean Generate global bypasses for all automations (Flow, Trigger, VR) without selecting sObjects. json boolean Format output as json. sObjects-s option Comma-separated list of sObjects to bypass (e.g., Account,Contact,Opportunity). If omitted, you will be prompted to select. skipCredits-k boolean If true, omit the \"Generated by\" line in the XML files. skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/generate/bypass/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:generate:bypass\n</code></pre> <pre><code>$ sf hardis:project:generate:bypass --global\n</code></pre> <pre><code>$ sf hardis:project:generate:bypass --sObjects Account,Contact,Opportunity\n</code></pre> <pre><code>$ sf hardis:project:generate:bypass --automations Flow,Trigger,VR\n</code></pre> <pre><code>$ sf hardis:project:generate:bypass --sObjects Account,Opportunity --automations Flow,Trigger\n</code></pre> <pre><code>$ sf hardis:project:generate:bypass --skip-credits\n</code></pre>"},{"location":"hardis/project/generate/flow-git-diff/","title":"flow-git-diff","text":""},{"location":"hardis/project/generate/flow-git-diff/#hardisprojectgenerateflow-git-diff","title":"hardis:project:generate:flow-git-diff","text":""},{"location":"hardis/project/generate/flow-git-diff/#description","title":"Description","text":"<p>Generate Flow Visual Git Diff markdown between 2 commits</p> <p>Note: This command might requires @mermaid-js/mermaid-cli to be installed.</p> <p>Run <code>npm install @mermaid-js/mermaid-cli --global</code></p>"},{"location":"hardis/project/generate/flow-git-diff/#parameters","title":"Parameters","text":"Name Type Description Default Required Options commit-after option Hash of the commit of the new flow state (will be prompted if not set) commit-before option Hash of the commit of the previous flow state, or \"allStates\" (will be prompted if not set) debug-d boolean Activate debug mode (more logs) flags-dir option undefined flow option Path to flow file (will be prompted if not set) json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/generate/flow-git-diff/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:generate:flow-git-diff\n</code></pre> <pre><code>$ sf hardis:project:generate:flow-git-diff --flow \"force-app/main/default/flows/Opportunity_AfterUpdate_Cloudity.flow-meta.xml\" --commit-before 8bd290e914c9dbdde859dad7e3c399776160d704 --commit-after e0835251bef6e400fb91e42f3a31022f37840f65\n</code></pre>"},{"location":"hardis/project/generate/gitdelta/","title":"gitdelta","text":""},{"location":"hardis/project/generate/gitdelta/#hardisprojectgenerategitdelta","title":"hardis:project:generate:gitdelta","text":""},{"location":"hardis/project/generate/gitdelta/#description","title":"Description","text":"<p>Generate package.xml git delta between 2 commits</p>"},{"location":"hardis/project/generate/gitdelta/#parameters","title":"Parameters","text":"Name Type Description Default Required Options branch option Git branch to use to generate delta debug-d boolean Activate debug mode (more logs) flags-dir option undefined fromcommit option Hash of commit to start from json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required tocommit option Hash of commit to stop at websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/generate/gitdelta/#examples","title":"Examples","text":"<pre><code>$ sf hardis:project:generate:gitdelta\n</code></pre>"},{"location":"hardis/project/metadata/findduplicates/","title":"findduplicates","text":""},{"location":"hardis/project/metadata/findduplicates/#hardisprojectmetadatafindduplicates","title":"hardis:project:metadata:findduplicates","text":""},{"location":"hardis/project/metadata/findduplicates/#description","title":"Description","text":"<p>find duplicate values in XML file(s).   Find duplicate values in XML file(s). Keys to be checked can be configured in <code>config/sfdx-hardis.yml</code> using property metadataDuplicateFindKeys.</p> <p>Default config : metadataDuplicateFindKeys : [object Object]</p>"},{"location":"hardis/project/metadata/findduplicates/#parameters","title":"Parameters","text":"Name Type Description Default Required Options files-f option XML metadata files path flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/project/metadata/findduplicates/#examples","title":"Examples","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;Layout xmlns=\"http://soap.sforce.com/2006/04/metadata\"&gt;\n  &lt;layoutSections&gt;\n      ...\n      &lt;layoutColumns&gt;\n          &lt;layoutItems&gt;\n              &lt;behavior&gt;Required&lt;/behavior&gt;\n              &lt;field&gt;Name&lt;/field&gt;\n          &lt;/layoutItems&gt;\n          &lt;layoutItems&gt;\n              &lt;behavior&gt;Required&lt;/behavior&gt;\n              &lt;field&gt;Name&lt;/field&gt;\n          &lt;/layoutItems&gt;\n      &lt;/layoutColumns&gt;\n    &lt;/layoutSections&gt;\n&lt;/Layout&gt;\n</code></pre> <pre><code>$ sf hardis:project:metadata:findduplicates --file layout.layout-meta.xml\n[sfdx-hardis] Duplicate values in layout.layout-meta.xml\n  - Key    : Layout.layoutSections.layoutColumns.layoutItems.field\n  - Values : Name\n</code></pre> <pre><code>$ sf hardis:project.metadata:findduplicates -f \"force-app/main/default/**/*.xml\"\n[sfdx-hardis] hardis:project:metadata:findduplicates execution time 0:00:00.397\n[sfdx-hardis] Duplicate values in layout1.layout-meta.xml\n  - Key    : Layout.layoutSections.layoutColumns.layoutItems.field\n  - Values : CreatedById\n\n[sfdx-hardis] Duplicate values in layout2.layout-meta.xml\n  - Key    : Layout.layoutSections.layoutColumns.layoutItems.field\n  - Values : LastModifiedById, Name\n</code></pre>"},{"location":"hardis/scratch/create/","title":"create","text":""},{"location":"hardis/scratch/create/#hardisscratchcreate","title":"hardis:scratch:create","text":""},{"location":"hardis/scratch/create/#description","title":"Description","text":"<p>Create and initialize a scratch org or a source-tracked sandbox (config can be defined using <code>config/.sfdx-hardis.yml</code>):</p> <ul> <li>Install packages<ul> <li>Use property <code>installedPackages</code></li> </ul> </li> <li>Push sources</li> <li>Assign permission sets<ul> <li>Use property <code>initPermissionSets</code></li> </ul> </li> <li>Run apex initialization scripts<ul> <li>Use property <code>scratchOrgInitApexScripts</code></li> </ul> </li> <li>Load data<ul> <li>Use property <code>dataPackages</code></li> </ul> </li> </ul>"},{"location":"hardis/scratch/create/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined forcenew-n boolean If an existing scratch org exists, do not reuse it but create a new one json boolean Format output as json. pool boolean Creates the scratch org for a scratch org pool skipauth boolean Skip authentication check when a default username is required target-dev-hub-v option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/scratch/create/#examples","title":"Examples","text":"<pre><code>$ sf hardis:scratch:create\n</code></pre>"},{"location":"hardis/scratch/delete/","title":"delete","text":""},{"location":"hardis/scratch/delete/#hardisscratchdelete","title":"hardis:scratch:delete","text":""},{"location":"hardis/scratch/delete/#description","title":"Description","text":"<p>Assisted menu to delete scratch orgs associated to a DevHub</p>"},{"location":"hardis/scratch/delete/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-dev-hub-v option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/scratch/delete/#examples","title":"Examples","text":"<pre><code>$ sf hardis:scratch:delete\n</code></pre>"},{"location":"hardis/scratch/pull/","title":"pull","text":""},{"location":"hardis/scratch/pull/#hardisscratchpull","title":"hardis:scratch:pull","text":""},{"location":"hardis/scratch/pull/#description","title":"Description","text":"<p>This commands pulls the updates you performed in your scratch or sandbox org, into your local files</p> <p>Then, you probably want to stage and commit the files containing the updates you want to keep, as explained in this video.</p> <ul> <li>Calls <code>sf project retrieve start</code> under the hood</li> <li>If there are errors, proposes to automatically add erroneous item in <code>.forceignore</code>, then pull again</li> <li>If you don't see your updated items in the results, you can manually retrieve using SF Extension Org Browser or Salesforce CLI</li> <li>If you want to always retrieve sources like CustomApplication that are not always detected as updates by project:retrieve:start , you can define property autoRetrieveWhenPull in .sfdx-hardis.yml</li> </ul> <p>Example: <pre><code>autoRetrieveWhenPull:\n  - CustomApplication:MyCustomApplication\n  - CustomApplication:MyOtherCustomApplication\n  - CustomApplication:MyThirdCustomApp\n</code></pre></p>"},{"location":"hardis/scratch/pull/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/scratch/pull/#examples","title":"Examples","text":"<pre><code>$ sf hardis:scratch:pull\n</code></pre>"},{"location":"hardis/scratch/push/","title":"push","text":""},{"location":"hardis/scratch/push/#hardisscratchpush","title":"hardis:scratch:push","text":""},{"location":"hardis/scratch/push/#description","title":"Description","text":"<p>Push local files to scratch org</p> <p>Calls <code>sf project deploy start</code> under the hood</p>"},{"location":"hardis/scratch/push/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/scratch/push/#examples","title":"Examples","text":"<pre><code>$ sf hardis:scratch:push\n</code></pre>"},{"location":"hardis/scratch/pool/create/","title":"create","text":""},{"location":"hardis/scratch/pool/create/#hardisscratchpoolcreate","title":"hardis:scratch:pool:create","text":""},{"location":"hardis/scratch/pool/create/#description","title":"Description","text":"<p>Select a data storage service and configure information to build a scratch org pool</p> <p>Run the command, follow instruction, then you need to schedule a daily CI job for the pool maintenance:</p> <p>- Define CI ENV variable SCRATCH_ORG_POOL with value \"true\"</p> <p>- Call the following lines in the CI job:</p> <pre><code>  sf hardis:auth:login --devhub\n  sf hardis:scratch:pool:refresh\n</code></pre>"},{"location":"hardis/scratch/pool/create/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-dev-hub-v option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/scratch/pool/create/#examples","title":"Examples","text":"<pre><code>$ sf hardis:scratch:pool:configure\n</code></pre>"},{"location":"hardis/scratch/pool/localauth/","title":"localauth","text":""},{"location":"hardis/scratch/pool/localauth/#hardisscratchpoollocalauth","title":"hardis:scratch:pool:localauth","text":""},{"location":"hardis/scratch/pool/localauth/#description","title":"Description","text":"<p>Calls the related storage service to request api keys and secrets that allows a local user to fetch a scratch org from scratch org pool</p>"},{"location":"hardis/scratch/pool/localauth/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-dev-hub-v option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/scratch/pool/localauth/#examples","title":"Examples","text":"<pre><code>$ sf hardis:scratch:pool:localauth\n</code></pre>"},{"location":"hardis/scratch/pool/refresh/","title":"refresh","text":""},{"location":"hardis/scratch/pool/refresh/#hardisscratchpoolrefresh","title":"hardis:scratch:pool:refresh","text":""},{"location":"hardis/scratch/pool/refresh/#description","title":"Description","text":"<p>Create enough scratch orgs to fill the pool</p>"},{"location":"hardis/scratch/pool/refresh/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-dev-hub-v option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/scratch/pool/refresh/#examples","title":"Examples","text":"<pre><code>$ sf hardis:scratch:pool:refresh\n</code></pre>"},{"location":"hardis/scratch/pool/reset/","title":"reset","text":""},{"location":"hardis/scratch/pool/reset/#hardisscratchpoolreset","title":"hardis:scratch:pool:reset","text":""},{"location":"hardis/scratch/pool/reset/#description","title":"Description","text":"<p>Reset scratch org pool (delete all scratches in the pool)</p>"},{"location":"hardis/scratch/pool/reset/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-dev-hub-v option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/scratch/pool/reset/#examples","title":"Examples","text":"<pre><code>$ sf hardis:scratch:pool:refresh\n</code></pre>"},{"location":"hardis/scratch/pool/view/","title":"view","text":""},{"location":"hardis/scratch/pool/view/#hardisscratchpoolview","title":"hardis:scratch:pool:view","text":""},{"location":"hardis/scratch/pool/view/#description","title":"Description","text":"<p>Displays all stored content of project scratch org pool if defined</p>"},{"location":"hardis/scratch/pool/view/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-dev-hub-v option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/scratch/pool/view/#examples","title":"Examples","text":"<pre><code>$ sf hardis:scratch:pool:view\n</code></pre>"},{"location":"hardis/source/deploy/","title":"deploy","text":""},{"location":"hardis/source/deploy/#hardissourcedeploy","title":"hardis:source:deploy","text":""},{"location":"hardis/source/deploy/#description","title":"Description","text":"<p>sfdx-hardis wrapper for sfdx force:source:deploy that displays tips to solve deployment errors.</p> <p>Additional to the base command wrapper: If using --checkonly, add options --checkcoverage and --coverageformatters json-summary to check that org coverage is &gt; 75% (or value defined in .sfdx-hardis.yml property apexTestsMinCoverageOrgWide)</p>"},{"location":"hardis/source/deploy/#deployment-results","title":"Deployment results","text":"<p>You can also have deployment results as pull request comments, on:</p> <ul> <li>GitHub (see GitHub Pull Requests comments config)</li> <li>Gitlab (see Gitlab integration configuration)</li> <li>Azure DevOps (see Azure integration configuration)</li> </ul> <p></p>"},{"location":"hardis/source/deploy/#deployment-pre-or-post-commands","title":"Deployment pre or post commands","text":"<p>You can define command lines to run before or after a deployment, with parameters:</p> <ul> <li>id: Unique Id for the command</li> <li>label: Human readable label for the command</li> <li>skipIfError: If defined to \"true\", the post-command won't be run if there is a deployment failure</li> <li>context: Defines the context where the command will be run. Can be all (default), check-deployment-only or process-deployment-only</li> <li>runOnlyOnceByOrg: If set to true, the command will be run only one time per org. A record of SfdxHardisTrace__c is stored to make that possible (it needs to be existing in target org)</li> </ul> <p>If the commands are not the same depending on the target org, you can define them into config/branches/.sfdx-hardis-BRANCHNAME.yml instead of root config/.sfdx-hardis.yml</p> <p>Example:</p> <pre><code>commandsPreDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to the deployment user\n    command: sf data update record --sobject User --where \"Username='deploy.github@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n\ncommandsPostDeploy:\n  - id: knowledgeUnassign\n    label: Remove KnowledgeUser right to the user who has it\n    command: sf data update record --sobject User --where \"UserPermissionsKnowledgeUser='true'\" --values \"UserPermissionsKnowledgeUser='false'\" --json\n  - id: knowledgeAssign\n    label: Assign Knowledge user to desired username\n    command: sf data update record --sobject User --where \"Username='admin-yser@myclient.com'\" --values \"UserPermissionsKnowledgeUser='true'\" --json\n  - id: someActionToRunJustOneTime\n    label: And to run only if deployment is success\n    command: sf sfdmu:run ...\n    skipIfError: true\n    context: process-deployment-only\n    runOnlyOnceByOrg: true\n</code></pre> <p>Notes:</p> <ul> <li>You can disable coloring of errors in red by defining env variable SFDX_HARDIS_DEPLOY_ERR_COLORS=false</li> </ul> <p>See documentation of Salesforce command</p>"},{"location":"hardis/source/deploy/#parameters","title":"Parameters","text":"Name Type Description Default Required Options checkcoverage boolean Check Apex org coverage checkonly-c boolean checkonly coverageformatters option coverageformatters debug boolean debug flags-dir option undefined forceoverwrite-f boolean forceoverwrite ignoreerrors boolean ignoreErrors ignorewarnings-g boolean ignoreWarnings json boolean Format output as json. junit boolean junit manifest-x option flagsLong.manifest metadata-m option metadata postdestructivechanges option postdestructivechanges predestructivechanges option predestructivechanges resultsdir option resultsdir runtests-r option runTests soapdeploy boolean soapDeploy sourcepath-p option sourcePath target-org-o option undefined testlevel-l option testlevel NoTestRun NoTestRunRunSpecifiedTestsRunLocalTestsRunAllTestsInOrg tracksource-t boolean tracksource validateddeployrequestid-q option validateDeployRequestId verbose boolean verbose wait-w option wait 60 websocket option websocket"},{"location":"hardis/source/deploy/#examples","title":"Examples","text":"<pre><code>$ sf hardis:source:deploy -x manifest/package.xml --wait 60 --ignorewarnings --testlevel RunLocalTests --postdestructivechanges ./manifest/destructiveChanges.xml --target-org nicolas.vuillamy@cloudity.com.sfdxhardis --checkonly --checkcoverage --verbose --coverageformatters json-summary\n</code></pre>"},{"location":"hardis/source/push/","title":"push","text":""},{"location":"hardis/source/push/#hardissourcepush","title":"hardis:source:push","text":""},{"location":"hardis/source/push/#description","title":"Description","text":"<p>sfdx-hardis wrapper for sfdx force:source:push that displays tips to solve deployment errors.</p> <p></p> <p>See documentation of Salesforce command</p>"},{"location":"hardis/source/push/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug boolean debug flags-dir option undefined forceoverwrite-f boolean forceoverwrite ignorewarnings-g boolean ignorewarnings json boolean Format output as json. quiet boolean quiet target-org-o option undefined wait-w option wait 60 websocket option websocket"},{"location":"hardis/source/push/#examples","title":"Examples","text":""},{"location":"hardis/source/retrieve/","title":"retrieve","text":""},{"location":"hardis/source/retrieve/#hardissourceretrieve","title":"hardis:source:retrieve","text":""},{"location":"hardis/source/retrieve/#description","title":"Description","text":"<p>sfdx-hardis wrapper for sfdx force:source:retrieve</p> <ul> <li>If no retrieve constraint is sent, as assisted menu will request the list of metadatas to retrieve</li> <li>If no org is selected , an assisted menu will request the user to choose one</li> </ul> <p>See documentation of Salesforce command</p>"},{"location":"hardis/source/retrieve/#parameters","title":"Parameters","text":"Name Type Description Default Required Options apiversion-a option Override the api version used for api requests made by this command debug-d boolean debugMode flags-dir option undefined forceoverwrite-f boolean forceoverwrite json boolean Format output as json. manifest-x option manifest metadata-m option metadata packagenames-n option packagenames skipauth boolean Skip authentication check when a default username is required sourcepath-p option sourcePath target-org-o option undefined tracksource-t boolean tracksource verbose boolean verbose wait-w option wait websocket option websocket"},{"location":"hardis/source/retrieve/#examples","title":"Examples","text":""},{"location":"hardis/work/new/","title":"new","text":""},{"location":"hardis/work/new/#hardisworknew","title":"hardis:work:new","text":""},{"location":"hardis/work/new/#description","title":"Description","text":"<p>Assisted menu to start working on a Salesforce task.</p> <p>Advanced instructions in Create New Task documentation</p> <p>At the end of the command, it will allow you to work on either a scratch org or a sandbox, depending on your choices.</p> <p>Under the hood, it can:</p> <ul> <li>Make git pull to be up to date with target branch</li> <li>Create new git branch with formatted name (you can override the choices using .sfdx-hardis.yml property branchPrefixChoices)</li> <li>Create and initialize a scratch org or a source-tracked sandbox (config can be defined using <code>config/.sfdx-hardis.yml</code>):</li> <li>(and for scratch org only for now):<ul> <li>Install packages     - Use property <code>installedPackages</code><ul> <li>Push sources</li> <li>Assign permission sets<ul> <li>Use property <code>initPermissionSets</code></li> </ul> </li> <li>Run apex initialization scripts<ul> <li>Use property <code>scratchOrgInitApexScripts</code></li> </ul> </li> <li>Load data<ul> <li>Use property <code>dataPackages</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"hardis/work/new/#override-sfdx-hardisyml-config","title":"Override .sfdx-hardis.yml config","text":""},{"location":"hardis/work/new/#availabletargetbranches","title":"availableTargetBranches","text":"<p>By default, there is only one target branch (value of property developmentBranch).</p> <p>You can define multiple target branches (for the future Pull Request) by setting the property availableTargetBranches in your .sfdx-hardis.yml file.</p> <p>The selected branch will checked out and be used as base to create the user new feature branch.</p> <p>Examples:</p> <pre><code>availableTargetBranches:\n  - integration\n  - preprod\n</code></pre> <pre><code>availableTargetBranches:\n  - integration,Select this to work from the integration branch (project stream)\n  - preprod,Select this to work from the preprod branch (run stream)\n</code></pre>"},{"location":"hardis/work/new/#availableprojects","title":"availableProjects","text":"<p>You can add a first question \"What is the project your task is for\" if you define a property availableProjects</p> <p>The select will be used as first part of the git branch name. (ex: france/features/dev/JIRA123-webservice-get-account)</p> <p>Examples:</p> <pre><code>availableProjects:\n  - build\n  - run\n  - some-big-project\n  - france\n  - uk\n</code></pre> <pre><code>availableProjects:\n  - build,Select this to work on the build project\n  - run,Select this to work on the run project\n  - some-big-project,Select this to work on the some big project\n  - france,Select this to work on the France project\n  - uk,Select this to work on the UK project\n</code></pre>"},{"location":"hardis/work/new/#newtasknameregex","title":"newTaskNameRegex","text":"<p>If you want to force a specific format for the task name, you can define a property newTaskNameRegex in your .sfdx-hardis.yml file.</p> <p>Please also define a property newTaskNameRegexExample to give an example to the user.</p> <p>Example:</p> <pre><code>newTaskNameRegex: '^[A-Z]+-[0-9]+ .*'\nnewTaskNameRegexExample: 'MYPROJECT-123 Update account status validation rule'\n</code></pre>"},{"location":"hardis/work/new/#shareddevsandboxes","title":"sharedDevSandboxes","text":"<p>If contributors can share dev sandboxes, let's not ask them if they want to overwrite their colleagues' changes when creating a new task :)</p>"},{"location":"hardis/work/new/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-dev-hub-v option undefined target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/work/new/#examples","title":"Examples","text":"<pre><code>$ sf hardis:work:new\n</code></pre>"},{"location":"hardis/work/refresh/","title":"refresh","text":""},{"location":"hardis/work/refresh/#hardisworkrefresh","title":"hardis:work:refresh","text":""},{"location":"hardis/work/refresh/#description","title":"Description","text":"<p>Make my local branch and my scratch org up to date with the most recent sources</p>"},{"location":"hardis/work/refresh/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. nopull-n boolean No scratch pull before save (careful if you use that!) skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/work/refresh/#examples","title":"Examples","text":"<pre><code>$ sf hardis:work:refresh\n</code></pre>"},{"location":"hardis/work/resetselection/","title":"resetselection","text":""},{"location":"hardis/work/resetselection/#hardisworkresetselection","title":"hardis:work:resetselection","text":""},{"location":"hardis/work/resetselection/#description","title":"Description","text":"<p>Resets the selection that we want to add in the merge request</p> <p>Calls a soft git reset behind the hood  </p>"},{"location":"hardis/work/resetselection/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required target-org-o option undefined websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/work/resetselection/#examples","title":"Examples","text":"<pre><code>$ sf hardis:work:resetsave\n</code></pre>"},{"location":"hardis/work/save/","title":"save","text":""},{"location":"hardis/work/save/#hardisworksave","title":"hardis:work:save","text":""},{"location":"hardis/work/save/#description","title":"Description","text":"<p>When a work task is completed, guide user to create a merge request</p> <p>Advanced instructions in Publish a task</p> <ul> <li>Generate package-xml diff using sfdx-git-delta</li> <li>Automatically update <code>manifest/package.xml</code> and <code>manifest/destructiveChanges.xml</code> according to the committed updates</li> <li>Automatically Clean XML files using <code>.sfdx-hardis.yml</code> properties<ul> <li><code>autocleantypes</code>: List of auto-performed sources cleanings, available on command hardis:project:clean:references</li> <li><code>autoRemoveUserPermissions</code>: List of userPermission to automatically remove from profile metadatas</li> </ul> </li> </ul> <p>Example:</p> <pre><code>autoCleanTypes:\n  - checkPermissions\n  - destructivechanges\n  - datadotcom\n  - minimizeProfiles\n  - listViewsMine\nautoRemoveUserPermissions:\n  - EnableCommunityAppLauncher\n  - FieldServiceAccess\n  - OmnichannelInventorySync\n  - SendExternalEmailAvailable\n  - UseOmnichannelInventoryAPIs\n  - ViewDataLeakageEvents\n  - ViewMLModels\n  - ViewPlatformEvents\n  - WorkCalibrationUser\n</code></pre> <ul> <li>Push commit to server</li> </ul>"},{"location":"hardis/work/save/#parameters","title":"Parameters","text":"Name Type Description Default Required Options auto boolean No user prompts (when called from CI for example) debug-d boolean Activate debug mode (more logs) flags-dir option undefined json boolean Format output as json. noclean-c boolean No cleaning of local sources nogit-g boolean No automated git operations nopull-n boolean No scratch pull before save skipauth boolean Skip authentication check when a default username is required target-org-o option undefined targetbranch option Name of the Merge Request target branch. Will be guessed or prompted if not provided. websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/work/save/#examples","title":"Examples","text":"<pre><code>$ sf hardis:work:task:save\n</code></pre> <pre><code>$ sf hardis:work:task:save --nopull --nogit --noclean\n</code></pre>"},{"location":"hardis/work/ws/","title":"ws","text":""},{"location":"hardis/work/ws/#hardisworkws","title":"hardis:work:ws","text":""},{"location":"hardis/work/ws/#description","title":"Description","text":"<p>Technical calls to WebSocket functions</p>"},{"location":"hardis/work/ws/#parameters","title":"Parameters","text":"Name Type Description Default Required Options debug-d boolean Activate debug mode (more logs) event-e option WebSocket event flags-dir option undefined json boolean Format output as json. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration"},{"location":"hardis/work/ws/#examples","title":"Examples","text":"<pre><code>$ sf hardis:work:ws --event refreshStatus\n</code></pre>"},{"location":"hello/world/","title":"world","text":""},{"location":"hello/world/#helloworld","title":"hello:world","text":""},{"location":"hello/world/#description","title":"Description","text":"<p>Say hello either to the world or someone you know.</p>"},{"location":"hello/world/#parameters","title":"Parameters","text":"Name Type Description Default Required Options flags-dir option undefined json boolean Format output as json. name-n option This person can be anyone in the world! World"},{"location":"hello/world/#examples","title":"Examples","text":"<pre><code>Say hello to the world:\n&lt;%= config.bin %&gt; &lt;%= command.id %&gt;\n</code></pre> <pre><code>Say hello to someone you know:\n&lt;%= config.bin %&gt; &lt;%= command.id %&gt; --name Astro\n</code></pre>"},{"location":"sf-deployment-assistant/A-sharing-rule-may-be-useless/","title":"A sharing rule may be useless (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/A-sharing-rule-may-be-useless/#a-sharing-rule-may-be-useless","title":"A sharing rule may be useless","text":""},{"location":"sf-deployment-assistant/A-sharing-rule-may-be-useless/#detection","title":"Detection","text":"<ul> <li>String: <code>Required field is missing: sharingCriteriaRules</code></li> </ul>"},{"location":"sf-deployment-assistant/A-sharing-rule-may-be-useless/#resolution","title":"Resolution","text":"<pre><code>Are you sure you need this sharing rule ? You may remove it from the sfdx project\n</code></pre>"},{"location":"sf-deployment-assistant/API-Version-error/","title":"API Version error (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/API-Version-error/#api-version-error","title":"API Version error","text":""},{"location":"sf-deployment-assistant/API-Version-error/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) The (.*) apiVersion can't be \"([0-9]+)\"</code></li> </ul>"},{"location":"sf-deployment-assistant/API-Version-error/#resolution","title":"Resolution","text":"<pre><code>{1} metadata has probably been created/updated in a sandbox already upgraded to next platform version (ex: Sandbox in Summer'23 and Production in Spring'23)\n- First, try to update the api version in the XML of {1} metadata file (decrement the number in &lt;apiVersion&gt;{3}.0&lt;/apiVersion&gt;)\n- If it still doesn't work because the metadata structure has changed between version, you may try a sf project:retrieve:start of the metadata by forcing --api-version at the end of the command.\n</code></pre>"},{"location":"sf-deployment-assistant/Allow-deployment-with-pending-Apex-Jobs/","title":"Allow deployment with pending Apex Jobs (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Allow-deployment-with-pending-Apex-Jobs/#allow-deployment-with-pending-apex-jobs","title":"Allow deployment with pending Apex Jobs","text":""},{"location":"sf-deployment-assistant/Allow-deployment-with-pending-Apex-Jobs/#detection","title":"Detection","text":"<ul> <li>String: <code>You can bypass this error by allowing deployments with Apex jobs in the Deployment Settings page in Setup.</code></li> </ul>"},{"location":"sf-deployment-assistant/Allow-deployment-with-pending-Apex-Jobs/#resolution","title":"Resolution","text":"<pre><code>Go to target org, in Setup -&gt; Deployment Settings -&gt; Activate option \"Allow deployments of components when corresponding Apex jobs are pending or in progress.\"\n</code></pre>"},{"location":"sf-deployment-assistant/Async-exception-in-test-class/","title":"Async exception in test class (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Async-exception-in-test-class/#async-exception-in-test-class","title":"Async exception in test class","text":""},{"location":"sf-deployment-assistant/Async-exception-in-test-class/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>System.AsyncException: (.*) Apex</code></li> </ul>"},{"location":"sf-deployment-assistant/Async-exception-in-test-class/#resolution","title":"Resolution","text":"<pre><code>This may be a test class implementation issue in {1}.\nPlease check https://developer.salesforce.com/forums/?id=9060G0000005kVLQAY\n</code></pre>"},{"location":"sf-deployment-assistant/CRM-Analytics--A-Recipe-must-specify-a-DataFlow/","title":"CRM Analytics: A Recipe must specify a DataFlow (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/CRM-Analytics--A-Recipe-must-specify-a-DataFlow/#crm-analytics-a-recipe-must-specify-a-dataflow","title":"CRM Analytics: A Recipe must specify a DataFlow","text":""},{"location":"sf-deployment-assistant/CRM-Analytics--A-Recipe-must-specify-a-DataFlow/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) A Recipe must specify a Dataflow</code></li> </ul>"},{"location":"sf-deployment-assistant/CRM-Analytics--A-Recipe-must-specify-a-DataFlow/#resolution","title":"Resolution","text":"<pre><code>You must include related WaveDataFlow {1} in sources (and probably in package.xml too).\nTo retrieve it, run: sf project retrieve start -m WaveDataFlow:{1} -u SOURCE_ORG_USERNAME\nYou can also retrieve all analytics sources in one shot using sf hardis:org:retrieve:source:analytics -u SOURCE_ORG_USERNAME\n  - https://salesforce.stackexchange.com/a/365453/33522\n  - https://help.salesforce.com/s/articleView?id=000319274&amp;type=1\n</code></pre>"},{"location":"sf-deployment-assistant/Campaign-can-not-be-updated/","title":"Campaign can not be updated","text":"<p>title: \"Campaign can not be updated (Deployment assistant)\" description: \"How to solve Salesforce deployment error \\\"The object \"Campaign\" can't be updated\\\"\"</p>"},{"location":"sf-deployment-assistant/Campaign-can-not-be-updated/#campaign-can-not-be-updated","title":"Campaign can not be updated","text":""},{"location":"sf-deployment-assistant/Campaign-can-not-be-updated/#detection","title":"Detection","text":"<ul> <li>String: <code>The object \"Campaign\" can't be updated</code></li> </ul>"},{"location":"sf-deployment-assistant/Campaign-can-not-be-updated/#resolution","title":"Resolution","text":"<pre><code>Add \"MarketingUser\" in project-scratch-def.json features\nIf it is already done, you may manually check \"MarketingUser\" field on the scratch org user\n</code></pre>"},{"location":"sf-deployment-assistant/Can-not-change-field-type-to-a-formula-field/","title":"Can not change field type to a formula field (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Can-not-change-field-type-to-a-formula-field/#can-not-change-field-type-to-a-formula-field","title":"Can not change field type to a formula field","text":""},{"location":"sf-deployment-assistant/Can-not-change-field-type-to-a-formula-field/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Cannot update a field from a Formula to something else</code></li> </ul>"},{"location":"sf-deployment-assistant/Can-not-change-field-type-to-a-formula-field/#resolution","title":"Resolution","text":"<pre><code>You need to manually delete or rename the field in the target org to allow the deployment to pass\n- First, try to manually delete field {1} in the target org\n- if you can't delete {1}, rename it into {1}_ToDel, then once the deployment done, delete {1}_ToDel\n</code></pre>"},{"location":"sf-deployment-assistant/Can-not-change-field-type-with-picklist/","title":"Can not change field type with picklist (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Can-not-change-field-type-with-picklist/#can-not-change-field-type-with-picklist","title":"Can not change field type with picklist","text":""},{"location":"sf-deployment-assistant/Can-not-change-field-type-with-picklist/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Cannot change which global value set this picklist uses</code></li> </ul>"},{"location":"sf-deployment-assistant/Can-not-change-field-type-with-picklist/#resolution","title":"Resolution","text":"<pre><code>You probably updated the type of field {1}, and Salesforce does not allows that with deployments. You can:\n- Try to manually change the type of {1} directly in target org, but it may not be technically possible\n- Delete field {1} in target org: it will be recreated after deployment (but you will loose data on existing records, so be careful if your target is a production org)\n- Create another field with desired type and manage data recovery if the target is a production org\n</code></pre>"},{"location":"sf-deployment-assistant/Can-not-change-type-due-to-existing-data/","title":"Can not change type due to existing data (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Can-not-change-type-due-to-existing-data/#can-not-change-type-due-to-existing-data","title":"Can not change type due to existing data","text":""},{"location":"sf-deployment-assistant/Can-not-change-type-due-to-existing-data/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Cannot change type due to existing data</code></li> </ul>"},{"location":"sf-deployment-assistant/Can-not-change-type-due-to-existing-data/#resolution","title":"Resolution","text":"<pre><code>It is usually not recommended to change types of fields, but if it's really necessary you can:\n- Manually change the type of {1} in the target org\n- If you can't manually change the type:\n  - you may modify the dependencies (Formulas, Flows...) using {1}, so they don't use this field\n  - you can also delete dependencies (Formulas, Flows...) using {1}, but make sure they are deployed again later\n- More help: https://help.salesforce.com/s/articleView?id=000327186&amp;type=1\n</code></pre>"},{"location":"sf-deployment-assistant/Can-not-delete-custom-field/","title":"Can not delete custom field (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Can-not-delete-custom-field/#can-not-delete-custom-field","title":"Can not delete custom field","text":""},{"location":"sf-deployment-assistant/Can-not-delete-custom-field/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>This (.*) is referenced elsewhere in salesforce.com</code></li> <li>RegExp: <code>Le champ personnalis\u00e9 (.*) est utilis\u00e9 dans (.*)</code></li> </ul>"},{"location":"sf-deployment-assistant/Can-not-delete-custom-field/#resolution","title":"Resolution","text":"<pre><code>Custom field {1} can not be deleted because it is used elsewhere. Remove its references ans try again\nTHIS MAY BE A FALSE POSITIVE if you are just testing the deployment, as destructiveChanges are deployed separately from updated items deployment check\n</code></pre>"},{"location":"sf-deployment-assistant/Can-not-delete-record-type/","title":"Can not delete record type (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Can-not-delete-record-type/#can-not-delete-record-type","title":"Can not delete record type","text":""},{"location":"sf-deployment-assistant/Can-not-delete-record-type/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Cannot delete record type through API</code></li> </ul>"},{"location":"sf-deployment-assistant/Can-not-delete-record-type/#resolution","title":"Resolution","text":"<pre><code>You need to manually delete record type {1} in target org\n- Edit record type {1}, uncheck \"Active\"\n- Delete record type {1}\n</code></pre>"},{"location":"sf-deployment-assistant/Can-not-find-folder/","title":"Can not find folder (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Can-not-find-folder/#can-not-find-folder","title":"Can not find folder","text":""},{"location":"sf-deployment-assistant/Can-not-find-folder/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Cannot find folder:(.*)</code></li> </ul>"},{"location":"sf-deployment-assistant/Can-not-find-folder/#resolution","title":"Resolution","text":"<pre><code>Folder {2} is missing.\n- If folder {2} is existing in sources, add it in related package.xml\n- If folder {2} is not existing in DX sources, please use sf hardis:project:clean:retrievefolders to retrieve it\n- If both previous solutions did not work, go create manually folder {2} in target org\n</code></pre>"},{"location":"sf-deployment-assistant/Can-not-find-user--2-/","title":"Can not find user (2) (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Can-not-find-user--2-/#can-not-find-user-2","title":"Can not find user (2)","text":""},{"location":"sf-deployment-assistant/Can-not-find-user--2-/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) In field: (.*) - no User named (.*) found</code></li> </ul>"},{"location":"sf-deployment-assistant/Can-not-find-user--2-/#resolution","title":"Resolution","text":"<pre><code>You made reference to username {3} in {1}, and it probably does not exist in the target org.\n- Do not use named users, but user public groups for assignments -&gt; https://help.salesforce.com/s/articleView?id=sf.creating_and_editing_groups.htm&amp;type=5\n- or Create matching user {3} in the target deployment org\n- or open {1} metadata and remove the XML part referring to hardcoded username {3}\n</code></pre>"},{"location":"sf-deployment-assistant/Can-not-find-user/","title":"Can not find user (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Can-not-find-user/#can-not-find-user","title":"Can not find user","text":""},{"location":"sf-deployment-assistant/Can-not-find-user/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Cannot find a user that matches any of the following usernames</code></li> </ul>"},{"location":"sf-deployment-assistant/Can-not-find-user/#resolution","title":"Resolution","text":"<pre><code>You made reference to username(s) in {1}, and those users probably do not exist in target org.\n- Do not use named users, but user public groups for assignments -&gt; https://help.salesforce.com/s/articleView?id=sf.creating_and_editing_groups.htm&amp;type=5\n- or Create matching user(s) in the target deployment org\n- or Remove the XML part referring to hardcoded usernames\n\nExample of XML you have to remove in {1}:\n\n&lt;folderShares&gt;\n  &lt;accessLevel&gt;Manage&lt;/accessLevel&gt;\n  &lt;sharedTo&gt;nicolas.vuillamy@hardis-scratch-po-tgci-root-develop_20220412_0604.com&lt;/sharedTo&gt;\n  &lt;sharedToType&gt;User&lt;/sharedToType&gt;\n&lt;/folderShares&gt;\n</code></pre>"},{"location":"sf-deployment-assistant/Can-not-test-item-deployment-in-simulation-mode/","title":"Can not test item deployment in simulation mode (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Can-not-test-item-deployment-in-simulation-mode/#can-not-test-item-deployment-in-simulation-mode","title":"Can not test item deployment in simulation mode","text":""},{"location":"sf-deployment-assistant/Can-not-test-item-deployment-in-simulation-mode/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Test only deployment cannot update</code></li> </ul>"},{"location":"sf-deployment-assistant/Can-not-test-item-deployment-in-simulation-mode/#resolution","title":"Resolution","text":"<pre><code>THIS IS A FALSE POSITIVE\nWhen effective deployment will happen, it should pass\n</code></pre>"},{"location":"sf-deployment-assistant/Cannot-update-a-field-to-a-Summary-from-something-else/","title":"Cannot update a field to a Summary from something else (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Cannot-update-a-field-to-a-Summary-from-something-else/#cannot-update-a-field-to-a-summary-from-something-else","title":"Cannot update a field to a Summary from something else","text":""},{"location":"sf-deployment-assistant/Cannot-update-a-field-to-a-Summary-from-something-else/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Cannot update a field to a (.*) from something else</code></li> </ul>"},{"location":"sf-deployment-assistant/Cannot-update-a-field-to-a-Summary-from-something-else/#resolution","title":"Resolution","text":"<pre><code>You probably updated the type of field {1} to type {2}, and Salesforce does not allows that with deployments. You can:\n- Try to manually change the type of {1} directly in target org, but it may not be technically possible\n- Delete field {1} in target org: it will be recreated after deployment (but you will loose data on existing records, so be careful if your target is a production org)\n- Create another field with desired type and manage data recovery if the target is a production org\n</code></pre>"},{"location":"sf-deployment-assistant/Change-Matching-Rule/","title":"Change Matching Rule (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Change-Matching-Rule/#change-matching-rule","title":"Change Matching Rule","text":""},{"location":"sf-deployment-assistant/Change-Matching-Rule/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Before you change a matching rule, you must deactivate it</code></li> </ul>"},{"location":"sf-deployment-assistant/Change-Matching-Rule/#resolution","title":"Resolution","text":"<pre><code>To be able to deploy, you must go in target org setup to manually deactivate matching rule {1}\n</code></pre>"},{"location":"sf-deployment-assistant/Condition-missing-reference/","title":"Condition missing reference","text":"<p>title: \"Condition missing reference (Deployment assistant)\" description: \"How to solve Salesforce deployment error \\\"Error (.) field integrity exception: unknown (A condition has a reference to (.), which doesn't exist.)\\\"\"</p>"},{"location":"sf-deployment-assistant/Condition-missing-reference/#condition-missing-reference","title":"Condition missing reference","text":""},{"location":"sf-deployment-assistant/Condition-missing-reference/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) field integrity exception: unknown \\(A condition has a reference to (.*), which doesn't exist.\\)</code></li> </ul>"},{"location":"sf-deployment-assistant/Condition-missing-reference/#resolution","title":"Resolution","text":"<pre><code>There is a reference to {2} in {1}, and {2} is not found. You can either:\n- Add {2} in your deployment sources and make sure it is named in package.xml\n- Remove the reference to {2} in {1}\n</code></pre>"},{"location":"sf-deployment-assistant/Couldn-t-retrieve-or-load-information-on-the-field/","title":"Couldn t retrieve or load information on the field","text":"<p>title: \"Couldn't retrieve or load information on the field (Deployment assistant)\" description: \"How to solve Salesforce deployment error \\\"Error (.) Something went wrong. We couldn't retrieve or load the information on the field: (.).\\\"\"</p>"},{"location":"sf-deployment-assistant/Couldn-t-retrieve-or-load-information-on-the-field/#couldnt-retrieve-or-load-information-on-the-field","title":"Couldn't retrieve or load information on the field","text":""},{"location":"sf-deployment-assistant/Couldn-t-retrieve-or-load-information-on-the-field/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Something went wrong. We couldn't retrieve or load the information on the field: (.*)\\.</code></li> </ul>"},{"location":"sf-deployment-assistant/Couldn-t-retrieve-or-load-information-on-the-field/#resolution","title":"Resolution","text":"<pre><code>There is a reference to {2} in {1}, and {2} is not found. You can either:\n- Commit {2} in your deployment sources and make sure it is named in package.xml\n- Remove the reference to {2} in {1}\n</code></pre>"},{"location":"sf-deployment-assistant/Custom-field-not-found/","title":"Custom field not found (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Custom-field-not-found/#custom-field-not-found","title":"Custom field not found","text":""},{"location":"sf-deployment-assistant/Custom-field-not-found/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) In field: (.*) - no CustomField named (.*)\\.(.*) found</code></li> </ul>"},{"location":"sf-deployment-assistant/Custom-field-not-found/#examples","title":"Examples","text":"<ul> <li><code>Error PS_Admin In field: field - no CustomField named User.expcloud__Portal_Username__c found</code></li> </ul>"},{"location":"sf-deployment-assistant/Custom-field-not-found/#resolution","title":"Resolution","text":"<pre><code>A reference to a custom field {3}.{4} is not found in {1}:\n- If you renamed {3}.{4}, do a search/replace in {1} with previous field name and {4}\n- If you deleted {3}.{4}, or if you don't want to deploy it, do a search on {4} in all sources, and remove all XML elements referring to {3}.{4} (except in destructiveChanges.xml)\n- If {3}.{4} should exist, make sure it is in force-app/main/default/objects/{3}/fields and that {3}.{4} is in manifest/package.xml in CustomField section\n- If {3}.{4} is standard, the error is because {3}.{4} is not available in the org you are trying to deploy to. You can:\n  - Remove the reference to {4} in the XML of {1} ( maybe sf hardis:project:clean:references can clean automatically for you ! )\n  - Activate the required features/license in the target org\n</code></pre>"},{"location":"sf-deployment-assistant/Custom-metadata-entry-not-found/","title":"Custom metadata entry not found (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Custom-metadata-entry-not-found/#custom-metadata-entry-not-found","title":"Custom metadata entry not found","text":""},{"location":"sf-deployment-assistant/Custom-metadata-entry-not-found/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) In field: (.*) - no CustomMetadata named (.*) found</code></li> </ul>"},{"location":"sf-deployment-assistant/Custom-metadata-entry-not-found/#resolution","title":"Resolution","text":"<pre><code>A reference to a custom metadata {3} of type {2} is not found in {1}:\n- Are you sure you deployed {3} ?\n- If you use a package.xml, is {3} present within type CustomMetadata ?\n</code></pre>"},{"location":"sf-deployment-assistant/Custom-object-not-found/","title":"Custom object not found (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Custom-object-not-found/#custom-object-not-found","title":"Custom object not found","text":""},{"location":"sf-deployment-assistant/Custom-object-not-found/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) In field: field - no CustomObject named (.*) found</code></li> </ul>"},{"location":"sf-deployment-assistant/Custom-object-not-found/#resolution","title":"Resolution","text":"<pre><code>A reference to a custom object {2} is not found in {1}:\n- If you renamed the custom object, do a search/replace in sources with previous object name and new object name\n- If you deleted the custom object, or if you don't want to deploy it, do a search on the custom object name, and remove XML elements referencing it\n- If the object should exist, make sure it is in force-app/main/default/objects and that the object name is in manifest/package.xml in CustomObject section\nYou may also have a look to command sf hardis:project:clean:references\n</code></pre>"},{"location":"sf-deployment-assistant/Dependent-class-is-invalid-and-needs-recompilation/","title":"Dependent class is invalid and needs recompilation (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Dependent-class-is-invalid-and-needs-recompilation/#dependent-class-is-invalid-and-needs-recompilation","title":"Dependent class is invalid and needs recompilation","text":""},{"location":"sf-deployment-assistant/Dependent-class-is-invalid-and-needs-recompilation/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Dependent class is invalid and needs recompilation</code></li> </ul>"},{"location":"sf-deployment-assistant/Dependent-class-is-invalid-and-needs-recompilation/#resolution","title":"Resolution","text":"<pre><code>Solve the other errors and this one will disappear !\n</code></pre>"},{"location":"sf-deployment-assistant/Duplicate-label/","title":"Duplicate label (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Duplicate-label/#duplicate-label","title":"Duplicate label","text":""},{"location":"sf-deployment-assistant/Duplicate-label/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Duplicate label: (.*)</code></li> </ul>"},{"location":"sf-deployment-assistant/Duplicate-label/#resolution","title":"Resolution","text":"<pre><code>You probably renamed the picklist API name for {2}. Please update manually the picklist {1} in the target org to avoid to have a duplicate label\n</code></pre>"},{"location":"sf-deployment-assistant/Duplicate-value-Platform-Action-Id-List/","title":"Duplicate value Platform Action Id List (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Duplicate-value-Platform-Action-Id-List/#duplicate-value-platform-action-id-list","title":"Duplicate value Platform Action Id List","text":""},{"location":"sf-deployment-assistant/Duplicate-value-Platform-Action-Id-List/#detection","title":"Detection","text":"<ul> <li>String: <code>duplicate value found: PlatformActionListId duplicates value on record with id</code></li> </ul>"},{"location":"sf-deployment-assistant/Duplicate-value-Platform-Action-Id-List/#resolution","title":"Resolution","text":"<pre><code>There are probably issue with conflict management. Open the XML of the source item, and replace all &lt;sortOrder&gt; numbers to make an ascending order, starting with 0\n</code></pre>"},{"location":"sf-deployment-assistant/Empty-source-items/","title":"Empty source items (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Empty-source-items/#empty-source-items","title":"Empty source items","text":""},{"location":"sf-deployment-assistant/Empty-source-items/#detection","title":"Detection","text":"<ul> <li>String: <code>Required field is missing: sharingOwnerRules</code></li> <li>String: <code>Required field is missing: standardValue</code></li> <li>String: <code>Required field is missing: valueTranslation</code></li> </ul>"},{"location":"sf-deployment-assistant/Empty-source-items/#resolution","title":"Resolution","text":"<pre><code>You probably retrieved empty items, that must not be included within the SFDX project\nTo remove them, please run sfdx:hardis:project:clean:emptyitems\n</code></pre>"},{"location":"sf-deployment-assistant/Enable-CRM-Analytics/","title":"Enable CRM Analytics (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Enable-CRM-Analytics/#enable-crm-analytics","title":"Enable CRM Analytics","text":""},{"location":"sf-deployment-assistant/Enable-CRM-Analytics/#detection","title":"Detection","text":"<ul> <li>String: <code>It should be created by enabling the CRM Analytics Cloud preference</code></li> </ul>"},{"location":"sf-deployment-assistant/Enable-CRM-Analytics/#resolution","title":"Resolution","text":"<pre><code>You must enable CRM Analytics (ex Wave, Einstein Analytics &amp; Tableau CRM) in the target org.\nYou probably also need to add CRM Analytics Admin Permission Set assignment to the deployment user\n</code></pre>"},{"location":"sf-deployment-assistant/Error-parsing-file/","title":"Error parsing file (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Error-parsing-file/#error-parsing-file","title":"Error parsing file","text":""},{"location":"sf-deployment-assistant/Error-parsing-file/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Error parsing file: (.*)</code></li> </ul>"},{"location":"sf-deployment-assistant/Error-parsing-file/#resolution","title":"Resolution","text":"<pre><code>There has been an error parsing the XML file of {1}: {2}\n- Open file {1} and look where the error can be ! (merge issue, typo, XML tag not closed...)\n</code></pre>"},{"location":"sf-deployment-assistant/Expired-Access---Refresh-Token/","title":"Expired Access / Refresh Token (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Expired-Access---Refresh-Token/#expired-access-refresh-token","title":"Expired Access / Refresh Token","text":""},{"location":"sf-deployment-assistant/Expired-Access---Refresh-Token/#detection","title":"Detection","text":"<ul> <li>String: <code>expired access/refresh token</code></li> </ul>"},{"location":"sf-deployment-assistant/Expired-Access---Refresh-Token/#resolution","title":"Resolution","text":"<pre><code>Run command \"Select another org\" from Status panel (or sf hardis:org:select) to authenticate again to your org\n</code></pre>"},{"location":"sf-deployment-assistant/Field-not-available-for-element/","title":"Field not available for element (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Field-not-available-for-element/#field-not-available-for-element","title":"Field not available for element","text":""},{"location":"sf-deployment-assistant/Field-not-available-for-element/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Field (.*) is not available for</code></li> </ul>"},{"location":"sf-deployment-assistant/Field-not-available-for-element/#resolution","title":"Resolution","text":"<pre><code>You probably changed the type of field {1}.\nFind field {1} in the source XML, and remove the section using it\n</code></pre>"},{"location":"sf-deployment-assistant/Flow-must-be-deleted-manually/","title":"Flow must be deleted manually (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Flow-must-be-deleted-manually/#flow-must-be-deleted-manually","title":"Flow must be deleted manually","text":""},{"location":"sf-deployment-assistant/Flow-must-be-deleted-manually/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>.flow (.*) insufficient access rights on cross-reference id</code></li> </ul>"},{"location":"sf-deployment-assistant/Flow-must-be-deleted-manually/#resolution","title":"Resolution","text":"<pre><code>Flow {1} can not be deleted using deployments, please delete it manually in the target org using menu Setup -&gt; Flows , context menu on {1} -&gt; View details and versions -&gt; Deactivate all versions -&gt; Delete flow\n</code></pre>"},{"location":"sf-deployment-assistant/Formula-picklist-field-issue/","title":"Formula picklist field issue (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Formula-picklist-field-issue/#formula-picklist-field-issue","title":"Formula picklist field issue","text":""},{"location":"sf-deployment-assistant/Formula-picklist-field-issue/#detection","title":"Detection","text":"<ul> <li>String: <code>Les champs de liste de s\u00e9lection sont pris en charge uniquement dans certaines fonctions.</code></li> </ul>"},{"location":"sf-deployment-assistant/Formula-picklist-field-issue/#resolution","title":"Resolution","text":"<pre><code>You probably changed the type of a field that is used in a formula.\nUpdate the formula to use a field compliant with formulas.\nMore details at https://help.salesforce.com/articleView?id=sf.tips_on_building_formulas.htm&amp;type=5\n</code></pre>"},{"location":"sf-deployment-assistant/Insufficient-access-rights-on-cross-reference-id/","title":"Insufficient access rights on cross-reference id (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Insufficient-access-rights-on-cross-reference-id/#insufficient-access-rights-on-cross-reference-id","title":"Insufficient access rights on cross-reference id","text":""},{"location":"sf-deployment-assistant/Insufficient-access-rights-on-cross-reference-id/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) insufficient access rights on cross-reference id</code></li> </ul>"},{"location":"sf-deployment-assistant/Insufficient-access-rights-on-cross-reference-id/#resolution","title":"Resolution","text":"<pre><code>- If {1} is a Flow, it can not be deleted using deployments, please delete it manually in the target org using menu Setup -&gt; Flows , context menu on {1} -&gt; View details and versions -&gt; Deactivate all versions -&gt; Delete flow\n- If you changed a custom field from unique to not unique, you need to manually make the change in the target org\n</code></pre>"},{"location":"sf-deployment-assistant/Invalid-field-for-upsert/","title":"Invalid field for upsert","text":"<p>title: \"Invalid field for upsert (Deployment assistant)\" description: \"How to solve Salesforce deployment error \\\"Error (.) Invalid field for upsert, must be an External Id custom or standard indexed field: (.) ((.*))\\\"\"</p>"},{"location":"sf-deployment-assistant/Invalid-field-for-upsert/#invalid-field-for-upsert","title":"Invalid field for upsert","text":""},{"location":"sf-deployment-assistant/Invalid-field-for-upsert/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Invalid field for upsert, must be an External Id custom or standard indexed field: (.*) \\((.*)\\)</code></li> </ul>"},{"location":"sf-deployment-assistant/Invalid-field-for-upsert/#resolution","title":"Resolution","text":"<pre><code>You tried to use field {2} for an upsert call in {1}.\n- Is it declared as externalId ?\n- Is the customIndex source file present in the deployment ?\n- If it is declared as externalId and customIndex is present, you may have to go manually define the field as externalId in the target org\n</code></pre>"},{"location":"sf-deployment-assistant/Invalid-field-in-related-list/","title":"Invalid field in related list (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Invalid-field-in-related-list/#invalid-field-in-related-list","title":"Invalid field in related list","text":""},{"location":"sf-deployment-assistant/Invalid-field-in-related-list/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Invalid field:(.*) in related list:(.*)</code></li> </ul>"},{"location":"sf-deployment-assistant/Invalid-field-in-related-list/#resolution","title":"Resolution","text":"<pre><code>Field {2} is unknown. You can:\n- Activate the related feature license or option to make {2} existing in target org\n- Update XML of {1} to remove reference to field {2} in the related list {3}\n- Update XML of {1} to remove the whole related list {3}\nExample of XML to remove:\n&lt;relatedLists&gt;\n  &lt;fields&gt;SOLUTION.ISSUE&lt;/fields&gt;\n  &lt;fields&gt;SOLUTION.SOLUTION_NUMBER&lt;/fields&gt;\n  &lt;fields&gt;SOLUTION.STATUS&lt;/fields&gt;\n  &lt;fields&gt;CORE.USERS.ALIAS&lt;/fields&gt;\n  &lt;relatedList&gt;RelatedSolutionList&lt;/relatedList&gt;\n&lt;/relatedLists&gt;\n</code></pre>"},{"location":"sf-deployment-assistant/Invalid-formula-grouping-context/","title":"Invalid formula grouping context (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Invalid-formula-grouping-context/#invalid-formula-grouping-context","title":"Invalid formula grouping context","text":""},{"location":"sf-deployment-assistant/Invalid-formula-grouping-context/#detection","title":"Detection","text":"<ul> <li>String: <code>Invalid custom summary formula definition: You must select a grouping context to use any report summary function</code></li> </ul>"},{"location":"sf-deployment-assistant/Invalid-formula-grouping-context/#resolution","title":"Resolution","text":"<pre><code>You need to update your Report definition. See workaround here -&gt; https://salesforce.stackexchange.com/questions/294850/grouping-error-with-prevgroupval-function\n</code></pre>"},{"location":"sf-deployment-assistant/Invalid-report-type/","title":"Invalid report type (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Invalid-report-type/#invalid-report-type","title":"Invalid report type","text":""},{"location":"sf-deployment-assistant/Invalid-report-type/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) invalid report type</code></li> </ul>"},{"location":"sf-deployment-assistant/Invalid-report-type/#resolution","title":"Resolution","text":"<pre><code>Report type is missing for report {1}\n- Open report {1} to se what report type is used\n- Retrieve the report type from an org and add it to the sfdx sources\n</code></pre>"},{"location":"sf-deployment-assistant/Invalid-scope-Mine--not-allowed/","title":"Invalid scope:Mine, not allowed (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Invalid-scope-Mine--not-allowed/#invalid-scopemine-not-allowed","title":"Invalid scope:Mine, not allowed","text":""},{"location":"sf-deployment-assistant/Invalid-scope-Mine--not-allowed/#detection","title":"Detection","text":"<ul> <li>String: <code>Invalid scope:Mine, not allowed</code></li> </ul>"},{"location":"sf-deployment-assistant/Invalid-scope-Mine--not-allowed/#resolution","title":"Resolution","text":"<pre><code>Replace Mine by Everything in the list view SFDX source XML.\nHave a look at this command to manage that automatically :)\nhttps://sfdx-hardis.cloudity.com/hardis/org/fix/listviewmine/ \n</code></pre>"},{"location":"sf-deployment-assistant/Invalid-type/","title":"Invalid type","text":"<p>title: \"Invalid type (Deployment assistant)\" description: \"How to solve Salesforce deployment error \\\"Error (.) Invalid type: (.) ((.*))\\\"\"</p>"},{"location":"sf-deployment-assistant/Invalid-type/#invalid-type","title":"Invalid type","text":""},{"location":"sf-deployment-assistant/Invalid-type/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Invalid type: (.*) \\((.*)\\)</code></li> </ul>"},{"location":"sf-deployment-assistant/Invalid-type/#resolution","title":"Resolution","text":"<pre><code>Apex error in {1} with unknown type {2} at position {3}. If {2} is a class name, try to fix it, or maybe it is missing in the files or in package.xml !\n</code></pre>"},{"location":"sf-deployment-assistant/Mandatory-custom-field-can-not-be-in-a-profile-permission-set/","title":"Mandatory custom field can not be in a profile/permission set (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Mandatory-custom-field-can-not-be-in-a-profile-permission-set/#mandatory-custom-field-can-not-be-in-a-profilepermission-set","title":"Mandatory custom field can not be in a profile/permission set","text":""},{"location":"sf-deployment-assistant/Mandatory-custom-field-can-not-be-in-a-profile-permission-set/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) You cannot deploy to a required field: (.*)</code></li> </ul>"},{"location":"sf-deployment-assistant/Mandatory-custom-field-can-not-be-in-a-profile-permission-set/#resolution","title":"Resolution","text":"<pre><code>- Search for {2} in source file XML of {1}, then remove the entries matching the results\nExample of element to delete:\n&lt;fieldPermissions&gt;\n  &lt;editable&gt;true&lt;/editable&gt;\n  &lt;field&gt;{2}&lt;/field&gt;\n  &lt;readable&gt;true&lt;/readable&gt;\n&lt;/fieldPermissions&gt;\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-Data-Category-Group/","title":"Missing Data Category Group (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-Data-Category-Group/#missing-data-category-group","title":"Missing Data Category Group","text":""},{"location":"sf-deployment-assistant/Missing-Data-Category-Group/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) In field: DeveloperName - no DataCategoryGroup named (.*) found</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-Data-Category-Group/#resolution","title":"Resolution","text":"<pre><code>If Data Category Group {2} is not existing yet in target org, you might need to:\n- create it manually in target org before deployment\n- comment DataCategoryGroup in {1} XML\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-Feature-Work-Com/","title":"Missing Feature Work.Com (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-Feature-Work-Com/#missing-feature-workcom","title":"Missing Feature Work.Com","text":""},{"location":"sf-deployment-assistant/Missing-Feature-Work-Com/#detection","title":"Detection","text":"<ul> <li>String: <code>WorkBadgeDefinition</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-Feature-Work-Com/#resolution","title":"Resolution","text":"<pre><code>Work.com feature must be activated in the target org.\n- Org &amp; Scratch: https://developer.salesforce.com/docs/atlas.en-us.workdotcom_dev_guide.meta/workdotcom_dev_guide/wdc_cc_setup_dev_org.htm\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-Quick-Action/","title":"Missing Quick Action (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-Quick-Action/#missing-quick-action","title":"Missing Quick Action","text":""},{"location":"sf-deployment-assistant/Missing-Quick-Action/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) In field: QuickAction - no QuickAction named (.*) found</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-Quick-Action/#resolution","title":"Resolution","text":"<pre><code>QuickAction {2} referred in {1} is unknown. You can either:\n- Make sure your QuickAction {2} is present in source files and in package.xml\n- If {2} is a standard QuickAction, activate related feature in target org\n- Solve other errors that could impact QuickAction {2}\n- Remove QuickAction {2} in the source XML of {1}. Example of XML to remove below:\n&lt;quickActionListItems&gt;\n  &lt;quickActionName&gt;FeedItem.RypplePost&lt;/quickActionName&gt;\n&lt;/quickActionListItems&gt;\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-Sales-Team/","title":"Missing Sales Team (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-Sales-Team/#missing-sales-team","title":"Missing Sales Team","text":""},{"location":"sf-deployment-assistant/Missing-Sales-Team/#detection","title":"Detection","text":"<ul> <li>String: <code>related list:RelatedAccountSalesTeam</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-Sales-Team/#resolution","title":"Resolution","text":"<pre><code>Account Teams must be activated in the target org.\n- Org: Setup -&gt; Account Teams -&gt; Enable\n- Scratch org setting:\n\"accountSettings\": {\n  \"enableAccountTeams\": true\n}\n}\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-e-mail-template/","title":"Missing e-mail template (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-e-mail-template/#missing-e-mail-template","title":"Missing e-mail template","text":""},{"location":"sf-deployment-assistant/Missing-e-mail-template/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>In field: template - no EmailTemplate named (.*) found</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-e-mail-template/#resolution","title":"Resolution","text":"<pre><code>An email template should be present in the sources. To retrieve it, you can run:\nsf project retrieve start -m EmailTemplate:{1} -o YOUR_ORG_USERNAME\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-feature-Chatter-Collaboration-Group/","title":"Missing feature Chatter Collaboration Group (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-feature-Chatter-Collaboration-Group/#missing-feature-chatter-collaboration-group","title":"Missing feature Chatter Collaboration Group","text":""},{"location":"sf-deployment-assistant/Missing-feature-Chatter-Collaboration-Group/#detection","title":"Detection","text":"<ul> <li>String: <code>CollaborationGroup</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-feature-Chatter-Collaboration-Group/#resolution","title":"Resolution","text":"<pre><code>Quotes must be activated in the target org.\n- Org: Setup -&gt; Chatter settings -&gt; Allow Records in Groups\n- Scratch org setting:\n\"chatterSettings\": {\n  \"allowRecordsInChatterGroup\": true\n},\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-feature-ContactToMultipleAccounts/","title":"Missing feature ContactToMultipleAccounts (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-feature-ContactToMultipleAccounts/#missing-feature-contacttomultipleaccounts","title":"Missing feature ContactToMultipleAccounts","text":""},{"location":"sf-deployment-assistant/Missing-feature-ContactToMultipleAccounts/#detection","title":"Detection","text":"<ul> <li>String: <code>no CustomObject named AccountContactRelation found</code></li> <li>String: <code>Invalid field:ACCOUNT.NAME in related list:RelatedContactAccountRelationList</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-feature-ContactToMultipleAccounts/#resolution","title":"Resolution","text":"<pre><code>Contacts to multiple accounts be activated in the target org.\n- Help: https://help.salesforce.com/articleView?id=sf.shared_contacts_set_up.htm&amp;type=5\n- Scratch org setting:\n\"features\": [\"ContactsToMultipleAccounts\"]\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-feature-Enhanced-notes/","title":"Missing feature Enhanced notes (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-feature-Enhanced-notes/#missing-feature-enhanced-notes","title":"Missing feature Enhanced notes","text":""},{"location":"sf-deployment-assistant/Missing-feature-Enhanced-notes/#detection","title":"Detection","text":"<ul> <li>String: <code>FeedItem.ContentNote</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-feature-Enhanced-notes/#resolution","title":"Resolution","text":"<pre><code>Enhanced Notes must be activated in the target org.\n- Org: Setup -&gt; Notes settings -&gt; Enable Notes\n- Scratch org setting:\n\"enhancedNotesSettings\": {\n  \"enableEnhancedNotes\": true\n},\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-feature-Ideas-notes/","title":"Missing feature Ideas notes (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-feature-Ideas-notes/#missing-feature-ideas-notes","title":"Missing feature Ideas notes","text":""},{"location":"sf-deployment-assistant/Missing-feature-Ideas-notes/#detection","title":"Detection","text":"<ul> <li>String: <code>Idea.InternalIdeasIdeaRecordType</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-feature-Ideas-notes/#resolution","title":"Resolution","text":"<pre><code>Ideas must be activated in the target org.\n- Org: https://help.salesforce.com/articleView?id=networks_enable_ideas.htm&amp;type=0\n- Scratch org setting:\n\"ideasSettings\": {\n  \"enableIdeas\": true\n}\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-feature-Live-Agent/","title":"Missing feature Live Agent (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-feature-Live-Agent/#missing-feature-live-agent","title":"Missing feature Live Agent","text":""},{"location":"sf-deployment-assistant/Missing-feature-Live-Agent/#detection","title":"Detection","text":"<ul> <li>String: <code>FeedItem.ContentNote</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-feature-Live-Agent/#resolution","title":"Resolution","text":"<pre><code>Live Agent must be activated in the target org.\n- Org: Setup -&gt; Live Agent Settings -&gt; Enable Live Agent\n- Scratch org feature: LiveAgent\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-feature-Opportunity-Teams/","title":"Missing feature Opportunity Teams (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-feature-Opportunity-Teams/#missing-feature-opportunity-teams","title":"Missing feature Opportunity Teams","text":""},{"location":"sf-deployment-assistant/Missing-feature-Opportunity-Teams/#detection","title":"Detection","text":"<ul> <li>String: <code>OpportunityTeam</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-feature-Opportunity-Teams/#resolution","title":"Resolution","text":"<pre><code>Opportunity Teams must be activated in the target org.\n- Org: Setup -&gt; Opportunity Team Settings -&gt; Enable Team Selling\n- Scratch org:\n\"opportunitySettings\": {\n  \"enableOpportunityTeam\": true\n}\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-feature-Product-Request/","title":"Missing feature Product Request (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-feature-Product-Request/#missing-feature-product-request","title":"Missing feature Product Request","text":""},{"location":"sf-deployment-assistant/Missing-feature-Product-Request/#detection","title":"Detection","text":"<ul> <li>String: <code>ProductRequest</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-feature-Product-Request/#resolution","title":"Resolution","text":"<pre><code>ProductRequest object is not available in the target org.\nMaybe you would like to clean its references within Profiles / PS using the following command ?\nsf hardis:project:clean:references , then select \"ProductRequest references\"\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-feature-Social-Customer-Service/","title":"Missing feature Social Customer Service (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-feature-Social-Customer-Service/#missing-feature-social-customer-service","title":"Missing feature Social Customer Service","text":""},{"location":"sf-deployment-assistant/Missing-feature-Social-Customer-Service/#detection","title":"Detection","text":"<ul> <li>String: <code>SocialPersona.AreWeFollowing</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-feature-Social-Customer-Service/#resolution","title":"Resolution","text":"<pre><code>Social Custom Service must be activated in the target org.\n- Org: Setup -&gt; https://help.salesforce.com/articleView?id=sf.social_customer_service_setup_enable.htm&amp;type=5\n- Scratch org feature: SocialCustomerService\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-feature-Translation-Workbench/","title":"Missing feature Translation Workbench (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-feature-Translation-Workbench/#missing-feature-translation-workbench","title":"Missing feature Translation Workbench","text":""},{"location":"sf-deployment-assistant/Missing-feature-Translation-Workbench/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>report-meta.xml(.*)filterlanguage</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-feature-Translation-Workbench/#resolution","title":"Resolution","text":"<pre><code>Translation workbench must be activated in the target org.\n- Org: Setup -&gt; https://help.salesforce.com/articleView?id=sf.customize_wbench.htm&amp;type=5\n- Scratch org:\n\"languageSettings\": {\n  \"enableTranslationWorkbench\":  true,\n  \"enableEndUserLanguages\": true\n}\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-field-MiddleName/","title":"Missing field MiddleName (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-field-MiddleName/#missing-field-middlename","title":"Missing field MiddleName","text":""},{"location":"sf-deployment-assistant/Missing-field-MiddleName/#detection","title":"Detection","text":"<ul> <li>String: <code>field MiddleName</code></li> <li>String: <code>Variable does not exist: MiddleName</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-field-MiddleName/#resolution","title":"Resolution","text":"<pre><code>MiddleNames must be activated in the target org.\n- Help: https://help.salesforce.com/articleView?id=000332623&amp;type=1&amp;mode=1\n- Scratch org setting:\n\"nameSettings\": {\n  \"enableMiddleName\": true\n}\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-field-Suffix/","title":"Missing field Suffix (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-field-Suffix/#missing-field-suffix","title":"Missing field Suffix","text":""},{"location":"sf-deployment-assistant/Missing-field-Suffix/#detection","title":"Detection","text":"<ul> <li>String: <code>field Suffix</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-field-Suffix/#resolution","title":"Resolution","text":"<pre><code>Suffix must be activated in the target org.\n- Help: https://help.salesforce.com/articleView?id=000332623&amp;type=1&amp;mode=1\n- Scratch org setting:\n\"nameSettings\": {\n  \"enableNameSuffix\": true\n},\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-field-SyncedQuoteId/","title":"Missing field SyncedQuoteId (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-field-SyncedQuoteId/#missing-field-syncedquoteid","title":"Missing field SyncedQuoteId","text":""},{"location":"sf-deployment-assistant/Missing-field-SyncedQuoteId/#detection","title":"Detection","text":"<ul> <li>String: <code>field SyncedQuoteId</code></li> <li>String: <code>Error  force-app/main/default/objects/Quote/Quote.object-meta.xml</code></li> <li>String: <code>Error  force-app/main/default/objects/Opportunity/fields/SyncedQuoteId.field-meta.xml</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-field-SyncedQuoteId/#resolution","title":"Resolution","text":"<pre><code>Quotes must be activated in the target org.\n- Help: https://help.salesforce.com/articleView?id=sf.quotes_enable.htm&amp;type=5\n- Scratch org setting:\n\"quoteSettings\": {\n  \"enableQuote\": true\n}\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-multi-currency-field/","title":"Missing multi-currency field (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-multi-currency-field/#missing-multi-currency-field","title":"Missing multi-currency field","text":""},{"location":"sf-deployment-assistant/Missing-multi-currency-field/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>A reference to a custom field (.*)CurrencyIsoCode</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-multi-currency-field/#resolution","title":"Resolution","text":"<pre><code>You probably need to activate MultiCurrency (from Setup -&gt; Company information)\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-object-referenced-in-package-xml/","title":"Missing object referenced in package.xml (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-object-referenced-in-package-xml/#missing-object-referenced-in-packagexml","title":"Missing object referenced in package.xml","text":""},{"location":"sf-deployment-assistant/Missing-object-referenced-in-package-xml/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>An object (.*) of type (.*) was named in package.xml, but was not found in zipped directory</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-object-referenced-in-package-xml/#resolution","title":"Resolution","text":"<pre><code>You can either:\n- Update the package.xml to remove the reference to the missing {2} {1}\n- Add the missing {2} {1} in your project source files\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-profile-default-application/","title":"Missing profile default application (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-profile-default-application/#missing-profile-default-application","title":"Missing profile default application","text":""},{"location":"sf-deployment-assistant/Missing-profile-default-application/#detection","title":"Detection","text":"<ul> <li>String: <code>You can't remove the only default app from the profile.</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-profile-default-application/#resolution","title":"Resolution","text":"<pre><code>You must have a default application for a profile. You can:\n - Update it in UI\n - Update the XML of the profile to set \"true\" in the &lt;default&gt; tag of one of the applicationVisibilities item.\n Ex:\n &lt;applicationVisibilities&gt;\n    &lt;application&gt;standard__LightningSales&lt;/application&gt;\n    &lt;default&gt;true&lt;/default&gt;\n    &lt;visible&gt;true&lt;/visible&gt;\n&lt;/applicationVisibilities&gt;\n</code></pre>"},{"location":"sf-deployment-assistant/Missing-report/","title":"Missing report (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Missing-report/#missing-report","title":"Missing report","text":""},{"location":"sf-deployment-assistant/Missing-report/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) The (.*) report chart has a problem with the \"reportName\" field</code></li> </ul>"},{"location":"sf-deployment-assistant/Missing-report/#resolution","title":"Resolution","text":"<pre><code>{1} is referring to unknown report {2}. To retrieve it, you can run:\n- sf project retrieve start -m Report:{2} -o YOUR_ORG_USERNAME\n- If it fails, looks for the report folder and add it before report name to the retrieve command (ex: MYFOLDER/MYREPORTNAME)\n</code></pre>"},{"location":"sf-deployment-assistant/Network-issue/","title":"Network issue (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Network-issue/#network-issue","title":"Network issue","text":""},{"location":"sf-deployment-assistant/Network-issue/#detection","title":"Detection","text":"<ul> <li>String: <code>ECONNABORTED</code></li> <li>String: <code>ECONNRESET</code></li> </ul>"},{"location":"sf-deployment-assistant/Network-issue/#resolution","title":"Resolution","text":"<pre><code>The network connection has been aborted, this is a purely technical issue.\nTry again, and if you still see errors, check the status of Salesforce instance on https://status.salesforce.com\n</code></pre>"},{"location":"sf-deployment-assistant/Not-available-for-deploy-for-this-organization/","title":"Not available for deploy for this organization (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Not-available-for-deploy-for-this-organization/#not-available-for-deploy-for-this-organization","title":"Not available for deploy for this organization","text":""},{"location":"sf-deployment-assistant/Not-available-for-deploy-for-this-organization/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Not available for deploy for this organization</code></li> </ul>"},{"location":"sf-deployment-assistant/Not-available-for-deploy-for-this-organization/#resolution","title":"Resolution","text":"<pre><code>The user you use for deployments probably lacks of the rights (Profiles, Permission sets...) to manage {1}.\n- Assign the deployment user to the good Permission Sets, or modify its profile rights, then try again\n</code></pre>"},{"location":"sf-deployment-assistant/Not-valid-sharing-model/","title":"Not valid sharing model (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Not-valid-sharing-model/#not-valid-sharing-model","title":"Not valid sharing model","text":""},{"location":"sf-deployment-assistant/Not-valid-sharing-model/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) (.*) is not a valid sharing model for (.*) when (.*) sharing model is (.*)</code></li> </ul>"},{"location":"sf-deployment-assistant/Not-valid-sharing-model/#resolution","title":"Resolution","text":"<pre><code>It seems that Sharing Models of {1} and {4} are not compatible in target org.\n- Use compatible sharing models between {1} and {4} by updating Sharing model of {1} or {4}\n- Make sure that sfdx sources {1}.object-meta.xml and {4}.object-meta.xml and in the files, and that {1} and {4} are in package.xml in CustomObject block\n- You may directly update sharingModel in XML. For example, replace &lt;sharingModel&gt;ReadWrite&lt;/sharingModel&gt; by &lt;sharingModel&gt;Private&lt;/sharingModel&gt; in {3}.object-meta.xml\n</code></pre>"},{"location":"sf-deployment-assistant/Objects-rights-on-a-role-is-below-org-default/","title":"Objects rights on a role is below org default (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Objects-rights-on-a-role-is-below-org-default/#objects-rights-on-a-role-is-below-org-default","title":"Objects rights on a role is below org default","text":""},{"location":"sf-deployment-assistant/Objects-rights-on-a-role-is-below-org-default/#detection","title":"Detection","text":"<ul> <li>String: <code>access level below organization default</code></li> </ul>"},{"location":"sf-deployment-assistant/Objects-rights-on-a-role-is-below-org-default/#resolution","title":"Resolution","text":"<pre><code>Your org wide settings default must be lower than the level defined in roles:\n- If you are in a scratch org, it can be fixable using \"objectProperties\" in project-scratch-def.json (see \"Set Object-Level Sharing Settings\" paragraph in page https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_scratch_orgs_def_file.htm)\n- If you are in a sandbox/dev/prod org, you need to update default org wide settings before deployment. See https://www.sfdcpoint.com/salesforce/organization-wide-defaults-owd-in-salesforce/\n</code></pre>"},{"location":"sf-deployment-assistant/Picklist-sharing-is-not-supported/","title":"Picklist sharing is not supported (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Picklist-sharing-is-not-supported/#picklist-sharing-is-not-supported","title":"Picklist sharing is not supported","text":""},{"location":"sf-deployment-assistant/Picklist-sharing-is-not-supported/#detection","title":"Detection","text":"<ul> <li>String: <code>Picklist sharing is not supported</code></li> </ul>"},{"location":"sf-deployment-assistant/Picklist-sharing-is-not-supported/#resolution","title":"Resolution","text":"<pre><code>You probably changed the type of a field.\nGo manually make the change in the target org, so the deployment will pass\n</code></pre>"},{"location":"sf-deployment-assistant/Picklist-value-not-found/","title":"Picklist value not found (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Picklist-value-not-found/#picklist-value-not-found","title":"Picklist value not found","text":""},{"location":"sf-deployment-assistant/Picklist-value-not-found/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Picklist value: (.*) in picklist: (.*) not found</code></li> </ul>"},{"location":"sf-deployment-assistant/Picklist-value-not-found/#resolution","title":"Resolution","text":"<pre><code>Sources have references to value {1} of picklist {2}\n- If picklist {2} is standard, add the picklist to sfdx sources by using \"sf project retrieve start -m StandardValueSet:{2}\", then save again\n- Else, perform a search in all code of {1}, then remove XML tags referring to {1} (for example in record types metadatas)\n</code></pre>"},{"location":"sf-deployment-assistant/Please-choose-a-different-name/","title":"Please choose a different name (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Please-choose-a-different-name/#please-choose-a-different-name","title":"Please choose a different name","text":""},{"location":"sf-deployment-assistant/Please-choose-a-different-name/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) This (.*) already exists or has been previously used(.*)Please choose a different name.</code></li> </ul>"},{"location":"sf-deployment-assistant/Please-choose-a-different-name/#resolution","title":"Resolution","text":"<pre><code>- Rename {1} in the target org, then try again the deployment. if it succeeds, delete the renamed item.\n- or Delete {1} in the target org, then try again the deployment\n</code></pre>"},{"location":"sf-deployment-assistant/Record-Type-not-found/","title":"Record Type not found (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Record-Type-not-found/#record-type-not-found","title":"Record Type not found","text":""},{"location":"sf-deployment-assistant/Record-Type-not-found/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) In field: recordType - no RecordType named (.*) found</code></li> </ul>"},{"location":"sf-deployment-assistant/Record-Type-not-found/#resolution","title":"Resolution","text":"<pre><code>An unknown record type {2} is referenced in {1}\n- If record type {2} is not supposed to exist, perform a search in all files of {1}, then remove matching XML elements referring to this record type\n- If record type {2} is supposed to exist, you may have to create it manually in the target org to make the deployment pass\n</code></pre>"},{"location":"sf-deployment-assistant/Send-email-is-disabled/","title":"Send email is disabled (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Send-email-is-disabled/#send-email-is-disabled","title":"Send email is disabled","text":""},{"location":"sf-deployment-assistant/Send-email-is-disabled/#detection","title":"Detection","text":"<ul> <li>String: <code>Send Email is disabled or activities are not allowed</code></li> <li>String: <code>Unknown user permission: SendExternalEmailAvailable</code></li> </ul>"},{"location":"sf-deployment-assistant/Send-email-is-disabled/#resolution","title":"Resolution","text":"<pre><code>Go to Email -&gt; Deliverability -&gt; Select value \"All emails\"\n</code></pre>"},{"location":"sf-deployment-assistant/Sharing-recalculation-lock/","title":"Sharing recalculation lock (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Sharing-recalculation-lock/#sharing-recalculation-lock","title":"Sharing recalculation lock","text":""},{"location":"sf-deployment-assistant/Sharing-recalculation-lock/#detection","title":"Detection","text":"<ul> <li>String: <code>because it interferes with another operation already in progress</code></li> <li>String: <code>Le calcul de partage demand\u00e9 ne peut \u00eatre trait\u00e9 maintenant car il interf\u00e8re avec une autre op\u00e9ration en cours</code></li> </ul>"},{"location":"sf-deployment-assistant/Sharing-recalculation-lock/#resolution","title":"Resolution","text":"<pre><code>If you changed a field from MasterDetail to Lookup, you must do it manually in the target org before being able to deploy\n</code></pre>"},{"location":"sf-deployment-assistant/Sort-order-must-be-in-sequential-order/","title":"Sort order must be in sequential order (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Sort-order-must-be-in-sequential-order/#sort-order-must-be-in-sequential-order","title":"Sort order must be in sequential order","text":""},{"location":"sf-deployment-assistant/Sort-order-must-be-in-sequential-order/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) SortOrder must be in sequential order from</code></li> </ul>"},{"location":"sf-deployment-assistant/Sort-order-must-be-in-sequential-order/#resolution","title":"Resolution","text":"<pre><code>You probably have a default DuplicateRule in the target org. Retrieve it from target org, or delete it manually in target org, so you can deploy.\nRef: https://developer.salesforce.com/forums/?id=9060G000000I6SoQAK\n</code></pre>"},{"location":"sf-deployment-assistant/Tableau-CRM---Wave-digest-error/","title":"Tableau CRM / Wave digest error (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Tableau-CRM---Wave-digest-error/#tableau-crm-wave-digest-error","title":"Tableau CRM / Wave digest error","text":""},{"location":"sf-deployment-assistant/Tableau-CRM---Wave-digest-error/#detection","title":"Detection","text":"<ul> <li>String: <code>Fix the sfdcDigest node errors and then upload the file again</code></li> </ul>"},{"location":"sf-deployment-assistant/Tableau-CRM---Wave-digest-error/#resolution","title":"Resolution","text":"<pre><code>Go to the target org, open profile \"Analytics Cloud Integration User\" and add READ rights to the missing object fields \n</code></pre>"},{"location":"sf-deployment-assistant/Test-classes-with-0--coverage/","title":"Test classes with 0% coverage (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Test-classes-with-0--coverage/#test-classes-with-0-coverage","title":"Test classes with 0% coverage","text":""},{"location":"sf-deployment-assistant/Test-classes-with-0--coverage/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>0%</code></li> </ul>"},{"location":"sf-deployment-assistant/Test-classes-with-0--coverage/#resolution","title":"Resolution","text":"<pre><code>Please make sure that none of the test classes are 0% covered\n</code></pre>"},{"location":"sf-deployment-assistant/Unknown-user-permission--CreateAuditFields/","title":"Unknown user permission: CreateAuditFields (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Unknown-user-permission--CreateAuditFields/#unknown-user-permission-createauditfields","title":"Unknown user permission: CreateAuditFields","text":""},{"location":"sf-deployment-assistant/Unknown-user-permission--CreateAuditFields/#detection","title":"Detection","text":"<ul> <li>String: <code>Unknown user permission: CreateAuditFields</code></li> </ul>"},{"location":"sf-deployment-assistant/Unknown-user-permission--CreateAuditFields/#resolution","title":"Resolution","text":"<pre><code>You need to enable the \"Create audit field\" permission in the target org\nPlease check https://help.salesforce.com/articleView?id=000334139&amp;type=1&amp;mode=1\n</code></pre>"},{"location":"sf-deployment-assistant/Unknown-user-permission--FieldServiceAccess/","title":"Unknown user permission: FieldServiceAccess (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Unknown-user-permission--FieldServiceAccess/#unknown-user-permission-fieldserviceaccess","title":"Unknown user permission: FieldServiceAccess","text":""},{"location":"sf-deployment-assistant/Unknown-user-permission--FieldServiceAccess/#detection","title":"Detection","text":"<ul> <li>String: <code>Unknown user permission: FieldServiceAccess</code></li> </ul>"},{"location":"sf-deployment-assistant/Unknown-user-permission--FieldServiceAccess/#resolution","title":"Resolution","text":"<pre><code>You need to enable the \"Field Service Access\" permission in the target org\nPlease check https://help.salesforce.com/articleView?id=sf.fs_enable.htm&amp;type=5\n</code></pre>"},{"location":"sf-deployment-assistant/Unknown-user-permission/","title":"Unknown user permission (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Unknown-user-permission/#unknown-user-permission","title":"Unknown user permission","text":""},{"location":"sf-deployment-assistant/Unknown-user-permission/#detection","title":"Detection","text":"<ul> <li>String: <code>Unknown user permission:</code></li> </ul>"},{"location":"sf-deployment-assistant/Unknown-user-permission/#resolution","title":"Resolution","text":"<pre><code>You can:\n- enable the related permission in the target org\n- or remove references to the permission in source XML files (Probably a Profile or a Permission set)\n</code></pre>"},{"location":"sf-deployment-assistant/Unsupported-sharing-configuration/","title":"Unsupported sharing configuration (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Unsupported-sharing-configuration/#unsupported-sharing-configuration","title":"Unsupported sharing configuration","text":""},{"location":"sf-deployment-assistant/Unsupported-sharing-configuration/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>not supported for (.*) since it's org wide default is</code></li> </ul>"},{"location":"sf-deployment-assistant/Unsupported-sharing-configuration/#resolution","title":"Resolution","text":"<pre><code>Consistency error between {1} sharing settings and {1} object configuration\nPlease check https://salesforce.stackexchange.com/questions/260923/sfdx-deploying-contact-sharing-rules-on-a-fresh-deployment\nIf you already did that, please try again to run the job\n</code></pre>"},{"location":"sf-deployment-assistant/Variable-does-not-exist/","title":"Variable does not exist","text":"<p>title: \"Variable does not exist (Deployment assistant)\" description: \"How to solve Salesforce deployment error \\\"Error (.) Variable does not exist: (.) ((.*))\\\"\"</p>"},{"location":"sf-deployment-assistant/Variable-does-not-exist/#variable-does-not-exist","title":"Variable does not exist","text":""},{"location":"sf-deployment-assistant/Variable-does-not-exist/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Variable does not exist: (.*) \\((.*)\\)</code></li> </ul>"},{"location":"sf-deployment-assistant/Variable-does-not-exist/#resolution","title":"Resolution","text":"<pre><code>Apex error in {1} with unknown variable {2} at position {3}. If {2} is a class name, try to fix it, or maybe it is missing in the files or in package.xml !\n</code></pre>"},{"location":"sf-deployment-assistant/Visibility-is-not-allowed-for-type/","title":"Visibility is not allowed for type (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/Visibility-is-not-allowed-for-type/#visibility-is-not-allowed-for-type","title":"Visibility is not allowed for type","text":""},{"location":"sf-deployment-assistant/Visibility-is-not-allowed-for-type/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) set the visibility for a (.*) to Protected unless you are in a developer</code></li> </ul>"},{"location":"sf-deployment-assistant/Visibility-is-not-allowed-for-type/#resolution","title":"Resolution","text":"<pre><code>Update the visibility of {1} to \"Public\"\n</code></pre>"},{"location":"sf-deployment-assistant/XML-item-appears-more-than-once/","title":"XML item appears more than once (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/XML-item-appears-more-than-once/#xml-item-appears-more-than-once","title":"XML item appears more than once","text":""},{"location":"sf-deployment-assistant/XML-item-appears-more-than-once/#detection","title":"Detection","text":"<ul> <li>RegExp: <code>Error (.*) Field:(.*), value:(.*) appears more than once</code></li> </ul>"},{"location":"sf-deployment-assistant/XML-item-appears-more-than-once/#resolution","title":"Resolution","text":"<pre><code>You probably made an error while merging conflicts\nLook for {3} in the XML of {1}\nIf you see two {2} XML blocks with {3}, please decide which one you keep and remove the other one\n</code></pre>"},{"location":"sf-deployment-assistant/sharing-operation-already-in-progress/","title":"sharing operation already in progress (Deployment assistant)","text":""},{"location":"sf-deployment-assistant/sharing-operation-already-in-progress/#sharing-operation-already-in-progress","title":"sharing operation already in progress","text":""},{"location":"sf-deployment-assistant/sharing-operation-already-in-progress/#detection","title":"Detection","text":"<ul> <li>String: <code>sharing operation already in progress</code></li> </ul>"},{"location":"sf-deployment-assistant/sharing-operation-already-in-progress/#resolution","title":"Resolution","text":"<pre><code>You can not deploy multiple SharingRules at the same time. You can either:\n- Remove SharingOwnerRules and SharingRule from package.xml (so it becomes a manual operation)\n- Use sf hardis:work:save to generate a deploymentPlan in .sfdx-hardis.json,\n- If you are trying to create a scratch org, add DeferSharingCalc in features in project-scratch-def.json\n</code></pre>"}]}